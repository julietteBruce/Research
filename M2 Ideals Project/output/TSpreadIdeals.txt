needsPackage "TSpreadIdeals"

F0E0 =  S=QQ[x_1..x_9]

F0E1 =  tStronglyStableMon(x_2*x_5*x_8,2)

F0E2 =  tStronglyStableMon(x_2*x_5*x_8,3)

F1E0 =  S=QQ[x_1..x_16]

F1E1 =  tLastMon(x_2*x_6*x_10*x_13,1,3)

F1E2 =  tLastMon(x_2*x_6*x_10*x_13,1,3,MaxInd=>14)

F2E0 =  S=QQ[x_1..x_9]

F2E1 =  countTStronglyStableMon(x_2*x_5*x_8,2)

F2E2 =  countTStronglyStableMon(x_2*x_5*x_8,3)

F3E0 =  S=QQ[x_1..x_4]

F3E1 =  I=ideal(x_1*x_2,x_1*x_3,x_2*x_3)

F3E2 =  J=ideal(join(flatten entries gens I,{x_1*x_2*x_3}))

F3E3 =  I==J

F3E4 =  betti I==betti J

F3E5 =  minimalBettiNumbers I==minimalBettiNumbers J

F4E0 =  S=QQ[x_1..x_9]

F4E1 =  tStronglyStableIdeal(ideal {x_2*x_5*x_8},2)

F4E2 =  tStronglyStableIdeal(ideal {x_2*x_5*x_8},3)

F5E0 =  S=QQ[x_1..x_5]

F5E1 =  I=ideal {x_1*x_2+x_3*x_4*x_5,x_1*x_3+x_4*x_5,x_2*x_3*x_4}

F5E2 =  initialIdeal I

F6E0 =  tMacaulayExpansion(50,12,2,1)

F6E1 =  tMacaulayExpansion(50,12,2,1,Shift=>true)

F6E2 =  tMacaulayExpansion(50,12,2,2,Shift=>true)

F7E0 =  S=QQ[x_1..x_10]

F7E1 =  tPascalIdeal(S,3)

F7E2 =  tPascalIdeal(S,4)

F8E0 =  S=QQ[x_1..x_8]

F8E1 =  tVeroneseIdeal(S,3,2)

F8E2 =  tVeroneseIdeal(S,3,4)

F9E0 =  S=QQ[x_1..x_12]

F9E1 =  corners={{4,2},{3,4},{2,5}}

F9E2 =  a={1,2,1}

F9E3 =  l=tExtremalBettiMonomials(S,corners,a,2)

F9E4 =  I=tStronglyStableIdeal(ideal l,2)

F9E5 =  minimalBettiNumbersIdeal I

F10E0 =  S=QQ[x_1..x_16]

F10E1 =  tNextMon(x_2*x_6*x_10*x_13,3)

F10E2 =  tNextMon(x_2*x_6*x_10*x_13,3,FixedMax=>true)

F11E0 =  solveBinomialExpansion({{4,2},{3,1}})

F11E1 =  solveBinomialExpansion tMacaulayExpansion(50,12,2,1)

F12E0 =  S=QQ[x_1..x_14]

F12E1 =  tLexSeg(x_2*x_5*x_10*x_13,x_2*x_6*x_9*x_12,2)

F12E2 =  tLexSeg(x_2*x_5*x_10*x_13,x_2*x_6*x_9*x_12,3)

F13E0 =  S=QQ[x_1..x_6]

F13E1 =  isTStronglyStableIdeal(ideal {x_1*x_3,x_1*x_5},2)

F13E2 =  isTStronglyStableIdeal(ideal {x_1*x_3,x_1*x_4,x_1*x_5,x_2*x_4,x_2*x_5},2)

F14E0 =  S=QQ[x_1..x_14]

F14E1 =  l={x_3*x_7*x_10*x_14, x_1*x_5*x_9*x_13}

F14E2 =  tSpreadList(l,4)

F14E3 =  tSpreadList(l,5)

F15E0 =  S=QQ[x_1..x_9]

F15E1 =  countTLexMon(x_2*x_5*x_8,2)

F15E2 =  countTLexMon(x_2*x_5*x_8,3)

F16E0 =  S=QQ[x_1..x_9]

F16E1 =  tLexMon(x_2*x_5*x_8,2)

F16E2 =  tLexMon(x_2*x_5*x_8,3)

F17E0 =  S=QQ[x_1..x_4]

F17E1 =  I=ideal(x_1*x_2,x_1*x_3,x_2*x_3)

F17E2 =  J=ideal(join(flatten entries gens I,{x_1*x_2*x_3}))

F17E3 =  I==J

F17E4 =  betti I==betti J

F17E5 =  minimalBettiNumbersIdeal I==minimalBettiNumbersIdeal J

F18E0 =  S=QQ[x_1..x_9]

F18E1 =  isTStronglyStableSeg({x_1*x_4*x_7,x_1*x_4*x_8,x_1*x_5*x_8,x_2*x_5*x_8},3)

F18E2 =  isTStronglyStableSeg({x_1*x_4*x_7,x_1*x_4*x_8,x_2*x_5*x_8},3)

F19E0 =  S=QQ[x_1..x_6]

F19E1 =  isTLexIdeal(ideal {x_1*x_3,x_1*x_5},2)

F19E2 =  isTLexIdeal(ideal {x_1*x_3,x_1*x_4,x_1*x_5,x_1*x_6,x_2*x_4,x_2*x_5},2)

F20E0 =  S=QQ[x_1..x_8]

F20E1 =  f={1,8,2,0,0}

F20E2 =  I=tLexIdeal(S,f,2)

F20E3 =  fTVector(I,2)==f

F20E4 =  isTLexIdeal(I,2)

F20E5 =  J=tStronglyStableIdeal(ideal {x_1*x_4*x_6},2)

F20E6 =  K=tLexIdeal(J,2)

F20E7 =  fTVector(J,2)==fTVector(K,2)

F21E0 =  S=QQ[x_1..x_7]

F21E1 =  isTLexSeg({x_1*x_4*x_7,x_1*x_5*x_7,x_2*x_4*x_6,x_2*x_4*x_7,x_2*x_5*x_7},2)

F21E2 =  isTLexSeg({x_1*x_4*x_7,x_2*x_4*x_6,x_2*x_4*x_7,x_2*x_5*x_7},2)

F22E0 =  S=QQ[x_1..x_8]

F22E1 =  tVeroneseSet(S,3,2)

F22E2 =  tVeroneseSet(S,3,3)

F23E0 =  S=QQ[x_1..x_8]

F23E1 =  fTVector(ideal {x_1*x_3,x_2*x_5*x_7},1)

F23E2 =  fTVector(ideal {x_1*x_3,x_2*x_5*x_7},2)

F24E0 =  S=QQ[x_1..x_10]

F24E1 =  I=ideal(x_1*x_3,x_1*x_4,x_1*x_5,x_2*x_4*x_6,x_2*x_4*x_7,x_2*x_5*x_7*x_9,x_3*x_5*x_7*x_9)

F24E2 =  tExtremalBettiCorners(I,2)

F24E3 =  minimalBettiNumbersIdeal I

F25E0 =  S=QQ[x_1..x_14]

F25E1 =  tStronglyStableSeg(x_2*x_5*x_9*x_12,x_2*x_6*x_10*x_13,2)

F25E2 =  tStronglyStableSeg(x_2*x_5*x_9*x_12,x_2*x_6*x_10*x_13,3)

F26E0 =  S=QQ[x_1..x_14]

F26E1 =  I=ideal {x_3*x_7*x_10*x_14, x_1*x_5*x_9*x_13}

F26E2 =  tSpreadIdeal(I,3)

F26E3 =  tSpreadIdeal(I,4)

F27E0 =  S=QQ[x_1..x_14]

F27E1 =  l={x_3*x_7*x_10*x_14, x_1*x_5*x_9*x_13}

F27E2 =  isTSpread(l#0,3)

F27E3 =  isTSpread(l,3)

F27E4 =  isTSpread(ideal l,3)

F27E5 =  isTSpread(ideal l,4)

F28E0 =  S=QQ[x_1..x_8]

F28E1 =  f={1,8,20,10,0}

F28E2 =  isFTVector(S,f,2)

F28E3 =  S=QQ[x_1..x_7]

F28E4 =  isFTVector(S,f,2)

F29E0 =  S=QQ[x_1..x_4]

F29E1 =  initialDegree ideal {x_1*x_2,x_2*x_3*x_4}

F29E2 =  initialDegree ideal {x_1*x_3*x_4}

F30E0 =  S=QQ[x_1..x_14]

F30E1 =  u=x_2*x_6*x_10

F30E2 =  tShadow(u,3)

F30E3 =  tShadow(u,4)

F30E4 =  l={x_3*x_6*x_10, x_1*x_5*x_9}

F30E5 =  tShadow(l,3)

F30E6 =  tShadow(l,4)

exampleIDS = {"F0E0", "F0E1", "F0E2", "F1E0", "F1E1", "F1E2", "F2E0", "F2E1", "F2E2", "F3E0", "F3E1", "F3E2", "F3E3", "F3E4", "F3E5", "F4E0", "F4E1", "F4E2", "F5E0", "F5E1", "F5E2", "F6E0", "F6E1", "F6E2", "F7E0", "F7E1", "F7E2", "F8E0", "F8E1", "F8E2", "F9E0", "F9E1", "F9E2", "F9E3", "F9E4", "F9E5", "F10E0", "F10E1", "F10E2", "F11E0", "F11E1", "F12E0", "F12E1", "F12E2", "F13E0", "F13E1", "F13E2", "F14E0", "F14E1", "F14E2", "F14E3", "F15E0", "F15E1", "F15E2", "F16E0", "F16E1", "F16E2", "F17E0", "F17E1", "F17E2", "F17E3", "F17E4", "F17E5", "F18E0", "F18E1", "F18E2", "F19E0", "F19E1", "F19E2", "F20E0", "F20E1", "F20E2", "F20E3", "F20E4", "F20E5", "F20E6", "F20E7", "F21E0", "F21E1", "F21E2", "F22E0", "F22E1", "F22E2", "F23E0", "F23E1", "F23E2", "F24E0", "F24E1", "F24E2", "F24E3", "F25E0", "F25E1", "F25E2", "F26E0", "F26E1", "F26E2", "F26E3", "F27E0", "F27E1", "F27E2", "F27E3", "F27E4", "F27E5", "F28E0", "F28E1", "F28E2", "F28E3", "F28E4", "F29E0", "F29E1", "F29E2", "F30E0", "F30E1", "F30E2", "F30E3", "F30E4", "F30E5", "F30E6"}
