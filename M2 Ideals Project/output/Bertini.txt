needsPackage "Bertini"

F0E0 =  R = CC[x,y];

F0E1 =  F1 = {x*y+1,2*x*y+3*x+4*y+5};

F0E2 =  bertiniZeroDimSolve(F1, AffVariableGroup=>{{x},{y}});

F0E3 =  hR =CC[x0,x1,y0,y1]

F0E4 =  F2 = {x1*y1+x0*y0,2*x1*y1+3*x1*y0+4*x0*y1+5*x0*y0};

F0E5 =  bertiniZeroDimSolve(F2,HomVariableGroup=>{{x0,x1},{y0,y1}});

F1E0 =  R = CC[x,y];

F1E1 =  F = {x^2-2,y^2-2};

F1E2 =  sols = bertiniZeroDimSolve (F)

F1E3 =  S = bertiniRefineSols (100, F, sols)

F1E4 =  coords = coordinates S_0

F1E5 =  coords_0

F2E0 =  R = CC[x,y,z]

F2E1 =  F = { (y^2+x^2+z^2-1)*x, (y^2+x^2+z^2-1)*y }

F2E2 =  NV = bertiniPosDimSolve(F)

F2E3 =  W = NV#1_0 --z-axis

F2E4 =  bertiniSample(4, W)

F3E0 =  R = QQ[x,y,z]

F3E1 =  F = {(y^2+x^2+z^2-1)*x,(y^2+x^2+z^2-1)*y}

F3E2 =  S = bertiniPosDimSolve F

F3E3 =  S#1_0#Points -- 1_0 chooses the first witness set in dimension 1

F3E4 =  S#1 --first specify dimension

F3E5 =  peek oo_0 --then list position

F3E6 =  PD=primaryDecomposition( ideal F)

F3E7 =  dim PD_0

F3E8 =  degree PD_0

F3E9 =  dim PD_1

F3E10 =  degree PD_1

F4E0 =  R=QQ[x,y]

F4E1 =  makeB'InputFile(storeBM2Files,

         AffVariableGroup=>{{x,y}},

         B'Polynomials=>{x^2-1,y^3-1});

F4E2 =  runBertini(storeBM2Files)

F4E3 =  importSolutionsFile(storeBM2Files)

F4E4 =  importSolutionsFile(storeBM2Files,NameSolutionsFile=>"real_finite_solutions")

F4E5 =  importSolutionsFile(storeBM2Files,NameSolutionsFile=>0)

F5E0 =  coordinatesOfTwoPnts={{1,0},{3,4}}

F5E1 =  writeStartFile(storeBM2Files,coordinatesOfTwoPnts);

F6E0 =  needsPackage("Bertini", Configuration=>{"BERTINIexecutable"=>"/folder/subfolder/bertini"})

F6E1 =  R = CC[x,y]

F6E2 =  F = {x^2-1,y^2-2}

F6E3 =  solns = bertiniZeroDimSolve(F)

F7E0 =  radicalList({2.000,1.999})

F7E1 =  radicalList({2.000,1.999},1e-10)

F7E2 =  radicalList({2.000,1.999},1e-2)

F8E0 =  R=CC[x,y,z]

F8E1 =  f=z*x+y

F8E2 =  subPoint(f,{x,y},{.1,.2})

F8E3 =  subPoint(f,{x,y,z},{.1,.2,.3},SpecifyVariables=>{y})

F8E4 =  R=CC_200[x,y,z]

F8E5 =  f=z*x+y

F8E6 =  subPoint(f,{x,y,z},{.1,.2,.3},SubIntoCC=>true)

F8E7 =  subPoint(f,{x,y,z},{.1234567890123456789012345678901234567890p200,

             0,1},SubIntoCC=>true,M2Precision=>200)

F9E0 =  R=QQ[x1,x2,y]

F9E1 =  theDir = temporaryFileName();

F9E2 =  makeDirectory theDir

F9E3 =  makeB'InputFile(theDir,

             BertiniInputConfiguration=>{MPType=>2},

         AffVariableGroup=>{{x1,x2},{y}},

             B'Polynomials=>{y*(x1+x2+1)^2+1,x1-x2+1,y-2});

F9E4 =  R=QQ[x1,x2,y,X]

F9E5 =  makeB'InputFile(theDir,

             BertiniInputConfiguration=>{MPType=>2},

         AffVariableGroup=>{{x1,x2},{y}},

             NamePolynomials=>{f1,f2,f3},

             B'Functions=>{

            {X,x1+x2+1},

            {f1,y*X^2+1},

            {f2,x1-x2+1},

            {f3,y-2}});

F9E6 =  R=QQ[x1,x2,y,X]

F9E7 =  makeB'InputFile(theDir,

              BertiniInputConfiguration=>{MPype=>2},

          AffVariableGroup=>{{x1,x2},{y}},

               B'Polynomials=>{y*X^2+1,x1-x2+1,y-2},

                B'Functions=>{

                   {X,x1+x2+1}});

F10E0 =  CC[x,y]

F10E1 =  bertiniZeroDimSolve(F,BertiniInputConfiguration=>{RandomSeed=>0,TrackTolBeforeEG=>1e-6,FinalTol=>1e-100})

F10E2 =  opts = new OptionTable from {BertiniInputConfiguration=>{RandomSeed=>0,TrackTolBeforeEG=>1e-6,FinalTol=>1e-100}}

F10E3 =  G = {x^2+y^2-1};

F10E4 =  bertiniPosDimSolve(G,opts)

F11E0 =  R = CC[x,a,t]; -- include the path variable in the ring

F11E1 =  H = { (x^2-1)*a + (x^2-2)*(1-a)};

F11E2 =  sol1 = point {{1}};

F11E3 =  sol2 = point {{-1}};

F11E4 =  S1= { sol1, sol2  };--solutions to H when t=1

F11E5 =  S0 = bertiniUserHomotopy (t,{a=>t}, H, S1) --solutions to H when t=0

F11E6 =  peek S0_0

F11E7 =  R=CC[x,y,t,a]; -- include the path variable in the ring

F11E8 =  f1=(x^2-y^2);

F11E9 =  f2=(2*x^2-3*x*y+5*y^2);

F11E10 =  H = { f1*a + f2*(1-a)}; --H is a list of polynomials in x,y,t

F11E11 =  sol1=    point{{1,1}}--{{x,y}} coordinates

F11E12 =  sol2=    point{{ -1,1}}

F11E13 =  S1={sol1,sol2}--solutions to H when t=1

F11E14 =  S0=bertiniUserHomotopy(t,{a=>t}, H, S1, HomVariableGroup=>{x,y}) --solutions to H when t=0

F12E0 =  makeB'InputFile(storeBM2Files,

         BertiniInputConfiguration=>{{TrackType,1}},    AffVariableGroup=>{x,y,z},    B'Polynomials=>{"z*((x+y+z)^3-1)","z*(y^2-3+z)"}    );

F12E1 =  runBertini(storeBM2Files)

F12E2 =  makeSampleSolutionsFile(storeBM2Files,2,SpecifyComponent=>{1,0})

F12E3 =  makeMembershipFile(storeBM2Files,NameSolutionsFile=>"sample_solutions_file")

F12E4 =  theIM=importIncidenceMatrix(storeBM2Files)

F13E0 =  R=QQ[z,a,b,c]

F13E1 =  makeB'InputFile(storeBM2Files,

              BertiniInputConfiguration=>{MPType=>2},

              AffVariableGroup=>{{z}},

               B'Constants=>{a=>2,b=>3+2*ii,c=>3/2},

                B'Polynomials=>{a*z^2+b*z+c});

F14E0 =  R = CC[x,y,z];

F14E1 =  f = {(x^2+y^2-z^2)*(z-x),(x^2+y^2-z^2)*(z+y)};

F14E2 =  bertiniPosDimSolve(f,IsProjective=>1);

F15E0 =  R = CC[x,y];

F15E1 =  F = {x^2-1,y^2-2};

F15E2 =  S = bertiniZeroDimSolve F

F15E3 =  peek S_0

F15E4 =  R = CC[x];

F15E5 =  F = {x^2*(x-1)};

F15E6 =  S = bertiniZeroDimSolve F

F15E7 =  B = bertiniZeroDimSolve(F,UseRegeneration=>1)

F16E0 =  NumberToB'String(2+5*ii)

F16E1 =  NumberToB'String(1/3,M2Precision=>16)

F16E2 =  NumberToB'String(1/3,M2Precision=>128)

F17E0 =  writeParameterFile(storeBM2Files,{2,3,5,7});

F17E1 =  fileExists(storeBM2Files|"/final_parameters")

F17E2 =  moveB'File(storeBM2Files,"final_parameters","start_parameters")

F17E3 =  fileExists(storeBM2Files|"/final_parameters")

F17E4 =  fileExists(storeBM2Files|"/start_parameters")

F17E5 =  moveB'File(storeBM2Files,"start_parameters","backup",CopyB'File=>true)

F17E6 =  fileExists(storeBM2Files|"/start_parameters")

F17E7 =  fileExists(storeBM2Files|"/backup")

F17E8 =  Dir1 = temporaryFileName();

F17E9 =  makeDirectory Dir1

F17E10 =  writeParameterFile(storeBM2Files,{2,3,5,7});

F17E11 =  moveB'File(storeBM2Files,"final_parameters","start_parameters",MoveToDirectory=>Dir1)

F17E12 =  fileExists(Dir1|"/start_parameters")

F17E13 =  makeDirectory (storeBM2Files|"/Dir2")

F17E14 =  writeParameterFile(storeBM2Files,{2,3,5,7});

F17E15 =  moveB'File(storeBM2Files,"final_parameters","start_parameters",SubFolder=>"Dir2")

F17E16 =  fileExists(storeBM2Files|"/Dir2/start_parameters")

F18E0 =  valueBM2("1.22e-2 4e-5")

F18E1 =  valueBM2("1.22 4e-5")

F18E2 =  valueBM2("1.22 4")

F18E3 =  valueBM2("1.22e+2 4 ")

F18E4 =  n1=valueBM2("1.11",M2Precision=>52)

F18E5 =  n2=valueBM2("1.11",M2Precision=>300)

F18E6 =  toExternalString n1

F18E7 =  toExternalString n2

F19E0 =  R = CC[x,t]; -- include the path variable in the ring

F19E1 =  H = { (x^2-1)*t + (x^2-2)*(1-t)};

F19E2 =  sol1 = point {{1}};

F19E3 =  sol2 = point {{-1}};

F19E4 =  S1= { sol1, sol2  };--solutions to H when t=1

F19E5 =  S0 = bertiniTrackHomotopy (t, H, S1) --solutions to H when t=0

F19E6 =  peek S0_0

F19E7 =  R=CC[x,y,t]; -- include the path variable in the ring

F19E8 =  f1=(x^2-y^2);

F19E9 =  f2=(2*x^2-3*x*y+5*y^2);

F19E10 =  H = { f1*t + f2*(1-t)}; --H is a list of polynomials in x,y,t

F19E11 =  sol1=    point{{1,1}}--{{x,y}} coordinates

F19E12 =  sol2=    point{{ -1,1}}

F19E13 =  S1={sol1,sol2}--solutions to H when t=1

F19E14 =  S0=bertiniTrackHomotopy(t, H, S1, IsProjective=>1) --solutions to H when t=0

F20E0 =  R=QQ[x,y,c1,c2]

F20E1 =  makeB'InputFile(storeBM2Files,

              AffVariableGroup=>{{x,y}},

              RandomReal=>{c1,c2},--c1=.1212, c2=.4132 may be written to the input file.

              B'Polynomials=>{x-c1,y-c2});

F20E2 =  R=QQ[x,y,c1,c2]

F20E3 =  makeB'InputFile(storeBM2Files,

              AffVariableGroup=>{{x,y}},

              RandomComplex=>{c1,c2},--c1=.1212+ii*.1344, c2=.4132-ii*.2144 are written to the input file.

              B'Polynomials=>{x-c1,y-c2});

F21E0 =  R=CC[u1,u2,u3,x,y];

F21E1 =  f1=u1*(y-1)+u2*(y-2)+u3*(y-3); --parameters are u1, u2, and u3

F21E2 =  f2=(x-11)*(x-12)*(x-13)-u1;

F21E3 =  paramValues0={1,0,0};

F21E4 =  paramValues1={0,1+2*ii,0};

F21E5 =  bPH=bertiniParameterHomotopy( {f1,f2}, {u1,u2,u3},{paramValues0 ,paramValues1 })

F21E6 =  bPH_0--the solutions to the system with parameters set equal to paramValues0

F21E7 =  R=CC[x,y,z,u1,u2]

F21E8 =  f1=x^2+y^2-z^2

F21E9 =  f2=u1*x+u2*y

F21E10 =  finalParameters0={0,1}

F21E11 =  finalParameters1={1,0}

F21E12 =  bPH=bertiniParameterHomotopy( {f1,f2}, {u1,u2},{finalParameters0 ,finalParameters1 },HomVariableGroup=>{x,y,z})

F21E13 =  bPH_0--The two solutions for finalParameters0

F21E14 =  finParamValues={{1},{2}}

F21E15 =  bPH1=bertiniParameterHomotopy( {"x^2-u1"}, {u1},finParamValues,AffVariableGroup=>{x})

F21E16 =  bPH2=bertiniParameterHomotopy( {"x^2-u1"}, {u1},finParamValues,AffVariableGroup=>{x},OutputStyle=>"OutSolutions")

F21E17 =  class bPH1_0_0

F21E18 =  class bPH2_0_0

F21E19 =  dir1 := temporaryFileName(); -- build a directory to store temporary data

F21E20 =  makeDirectory dir1;

F21E21 =  bPH5=bertiniParameterHomotopy( {"x^2-u1"}, {u1},{{1},{2}},AffVariableGroup=>{x},OutputStyle=>"OutNone",TopDirectory=>dir1)

F21E22 =  B0=importSolutionsFile(dir1,NameSolutionsFile=>"ph_jade_0")

F21E23 =  B1=importSolutionsFile(dir1,NameSolutionsFile=>"ph_jade_1")

F22E0 =  sliceType={1,1}

F22E1 =  variableGroups={{x0,x1},{y0,y1,y2}}

F22E2 =  xySlice=makeB'Slice(sliceType,variableGroups)

F22E3 =  peek xySlice

F22E4 =  for i in  xySlice#B'SectionString do print i

F22E5 =  aSlice=makeB'Slice(3,{x,y,z,1},NameB'Slice=>"f");

F22E6 =  aSlice#NameB'Slice

F22E7 =  makeB'InputFile(storeBM2Files,AffVariableGroup=>{x,y,z},B'Functions=>{aSlice},NamePolynomials=>{"f0","f1","f2"});

F22E8 =  f1="x0*y0+x1*y0+x2*y2"

F22E9 =  f2="x0*y0^2+x1*y1*y2+x2*y0*y2"

F22E10 =  variableGroups={{x0,x1,x2},{y0,y1,y2}}

F22E11 =  xxSlice=makeB'Slice({2,0},variableGroups)

F22E12 =  xySlice=makeB'Slice({1,1},variableGroups)

F22E13 =  yySlice=makeB'Slice({0,2},variableGroups)

F22E14 =  makeB'InputFile(storeBM2Files,

          HomVariableGroup=>variableGroups,

          B'Polynomials=>{f1,f2}|xxSlice#ListB'Sections);

F22E15 =  runBertini(storeBM2Files)

F22E16 =  xxDegree=#importSolutionsFile(storeBM2Files)

F22E17 =  makeB'InputFile(storeBM2Files,

          HomVariableGroup=>variableGroups,

          B'Polynomials=>{f1,f2}|xySlice#ListB'Sections);

F22E18 =  runBertini(storeBM2Files)

F22E19 =  xyDegree=#importSolutionsFile(storeBM2Files)

F22E20 =  makeB'InputFile(storeBM2Files,

          HomVariableGroup=>variableGroups,

          B'Polynomials=>{f1,f2}|yySlice#ListB'Sections);

F22E21 =  runBertini(storeBM2Files)

F22E22 =  yyDegree=#importSolutionsFile(storeBM2Files)

F23E0 =  R = CC[x,y,z];

F23E1 =  F = {(y^2+x^2+z^2-1)*x,(y^2+x^2+z^2-1)*y};

F23E2 =  NV = bertiniPosDimSolve(F)

F23E3 =  pts = {{0,0,0}} --z-axis

F23E4 =  bertiniComponentMemberTest(pts, NV)

F24E0 =  writeParameterFile(storeBM2Files,{1,2},NameParameterFile=>"final_parameters");

F24E1 =  importParameterFile(storeBM2Files)

F25E0 =  s=makeB'Section({x,y,z})

F25E1 =  class s

F25E2 =  randomRealCoefficientGenerator=()->random(RR)

F25E3 =  sReal=makeB'Section({x,y,z},RandomCoefficientGenerator=>randomRealCoefficientGenerator)

F25E4 =  sReal#B'NumberCoefficients

F25E5 =  randomRationalCoefficientGenerator=()->random(QQ)

F25E6 =  sRational=makeB'Section({x,y,z},RandomCoefficientGenerator=>randomRationalCoefficientGenerator)

F25E7 =  sRational#B'NumberCoefficients

F25E8 =  affineSection=makeB'Section({x,y,z,1})

F25E9 =  X={x,y,z}

F25E10 =  P={1,2,3}

F25E11 =  affineContainingPoint=makeB'Section({x,y,z},ContainsPoint=>P)

F25E12 =  r= affineContainingPoint#B'SectionString

F25E13 =  print r

F25E14 =  rHomogeSection= makeB'Section({x,y,z},ContainsPoint=>P,B'Homogenization=>"x+y+z")

F25E15 =  peek rHomogeSection

F25E16 =  print rHomogeSection#B'SectionString

F25E17 =  f="y^3-x*y+1"

F25E18 =  s1=makeB'Section({x,y,1})

F25E19 =  makeB'InputFile(storeBM2Files,

        AffVariableGroup=>{x,y},

        B'Polynomials=>{f,s1});

F25E20 =  runBertini(storeBM2Files)

F25E21 =  #importSolutionsFile(storeBM2Files)==3

F26E0 =  makeB'InputFile(storeBM2Files,

       AffVariableGroup=>{x,y,z},

       BertiniInputConfiguration=>{{TrackType,1}},

       B'Polynomials=>{"(x^2+y^2+z^2-1)*y"});

F26E1 =  runBertini(storeBM2Files)

F26E2 =  thePoints=importMainDataFile(storeBM2Files)

F26E3 =  witnessPointsDim1= importMainDataFile(storeBM2Files,SpecifyDim=>1)--We can choose which dimension we import points from. There are no witness points in dimension 1.

F26E4 =  sortMainDataComponents(thePoints)

exampleIDS = {"F0E0", "F0E1", "F0E2", "F0E3", "F0E4", "F0E5", "F1E0", "F1E1", "F1E2", "F1E3", "F1E4", "F1E5", "F2E0", "F2E1", "F2E2", "F2E3", "F2E4", "F3E0", "F3E1", "F3E2", "F3E3", "F3E4", "F3E5", "F3E6", "F3E7", "F3E8", "F3E9", "F3E10", "F4E0", "F4E1", "F4E2", "F4E3", "F4E4", "F4E5", "F5E0", "F5E1", "F6E0", "F6E1", "F6E2", "F6E3", "F7E0", "F7E1", "F7E2", "F8E0", "F8E1", "F8E2", "F8E3", "F8E4", "F8E5", "F8E6", "F8E7", "F9E0", "F9E1", "F9E2", "F9E3", "F9E4", "F9E5", "F9E6", "F9E7", "F10E0", "F10E1", "F10E2", "F10E3", "F10E4", "F11E0", "F11E1", "F11E2", "F11E3", "F11E4", "F11E5", "F11E6", "F11E7", "F11E8", "F11E9", "F11E10", "F11E11", "F11E12", "F11E13", "F11E14", "F12E0", "F12E1", "F12E2", "F12E3", "F12E4", "F13E0", "F13E1", "F14E0", "F14E1", "F14E2", "F15E0", "F15E1", "F15E2", "F15E3", "F15E4", "F15E5", "F15E6", "F15E7", "F16E0", "F16E1", "F16E2", "F17E0", "F17E1", "F17E2", "F17E3", "F17E4", "F17E5", "F17E6", "F17E7", "F17E8", "F17E9", "F17E10", "F17E11", "F17E12", "F17E13", "F17E14", "F17E15", "F17E16", "F18E0", "F18E1", "F18E2", "F18E3", "F18E4", "F18E5", "F18E6", "F18E7", "F19E0", "F19E1", "F19E2", "F19E3", "F19E4", "F19E5", "F19E6", "F19E7", "F19E8", "F19E9", "F19E10", "F19E11", "F19E12", "F19E13", "F19E14", "F20E0", "F20E1", "F20E2", "F20E3", "F21E0", "F21E1", "F21E2", "F21E3", "F21E4", "F21E5", "F21E6", "F21E7", "F21E8", "F21E9", "F21E10", "F21E11", "F21E12", "F21E13", "F21E14", "F21E15", "F21E16", "F21E17", "F21E18", "F21E19", "F21E20", "F21E21", "F21E22", "F21E23", "F22E0", "F22E1", "F22E2", "F22E3", "F22E4", "F22E5", "F22E6", "F22E7", "F22E8", "F22E9", "F22E10", "F22E11", "F22E12", "F22E13", "F22E14", "F22E15", "F22E16", "F22E17", "F22E18", "F22E19", "F22E20", "F22E21", "F22E22", "F23E0", "F23E1", "F23E2", "F23E3", "F23E4", "F24E0", "F24E1", "F25E0", "F25E1", "F25E2", "F25E3", "F25E4", "F25E5", "F25E6", "F25E7", "F25E8", "F25E9", "F25E10", "F25E11", "F25E12", "F25E13", "F25E14", "F25E15", "F25E16", "F25E17", "F25E18", "F25E19", "F25E20", "F25E21", "F26E0", "F26E1", "F26E2", "F26E3", "F26E4"}
