needsPackage "SpectralSequences"

F53E0 =  R = ZZ/101[a_0..b_1, Degrees=>{2:{1,0},2:{0,1}}]; -- PP^1 x PP^1

F53E1 =  M = intersect(ideal(a_0,a_1),ideal(b_0,b_1)) ; -- irrelevant ideal

F53E2 =  M = M_*/(x -> x^5)//ideal ; -- Suitably high Frobenius power of M

F53E3 =  G = res image gens M ;

F53E4 =  I = ideal random(R^1, R^{{-3,-3}}) -- ideal of C

F53E5 =  b = chainComplex gradedModule R^{{1,0}} -- make line bundle a chain complex

F53E6 =  a = chainComplex gradedModule R^{{-2,-3}}

F53E7 =  f = chainComplexMap(b, a,{random(R^1, R^{{-3,-3}})}) ;

F53E8 =  K = filteredComplex ({Hom(G,f)}) ; -- the two step filtered complex we want

F53E9 =  E = prune spectralSequence K ;

F53E10 =  E^1 .dd_{1,-2} -- the connecting map HH^1(C, OO_C(1,0)) --> HH^2(X, OO_X(-2,-3))

F53E11 =  basis({0,0}, image E^1 .dd_{1,-2})  -- image 2-dimensional

F53E12 =  basis({0,0}, ker E^1 .dd_{1,-2}) -- map is injective

F53E13 =  basis({0,0}, target E^1 .dd_{1,-2}) -- target 2-dimensional

F53E14 =  basis({0,0}, source E^1 .dd_{1,-2}) -- source 2 dimensional

F53E15 =  prune connectingMorphism(Hom(G, f), - 2) ;

F53E16 =  prune connectingMorphism(Hom(G, f), - 2) == E^1 .dd_{1, -2}

exampleIDS = {"F53E0", "F53E1", "F53E2", "F53E3", "F53E4", "F53E5", "F53E6", "F53E7", "F53E8", "F53E9", "F53E10", "F53E11", "F53E12", "F53E13", "F53E14", "F53E15", "F53E16"}
