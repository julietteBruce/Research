needsPackage "OldPolyhedra"

F110E0 =  R = matrix {{1,1,2},{2,1,1}}

F110E1 =  C = posHull R

F110E2 =  ambDim C

F110E3 =  rays C

F110E4 =  HS = halfspaces C

F110E5 =  R1 = R || matrix {{0,0,0}}

F110E6 =  LS = matrix {{1},{1},{1}}

F110E7 =  C1 = posHull(R1,LS)

F110E8 =  rays C1

F110E9 =  HS = transpose R1

F110E10 =  HP = matrix {{1,1,1}}

F110E11 =  C2 = intersection(HS,HP)

F110E12 =  rays C2

F110E13 =  C3 = intersection HS

F110E14 =  rays C3

F110E15 =  linSpace C3

F110E16 =  C4 = posOrthant 3

F110E17 =  rays C4

F110E18 =  C5 = intersection(C1,C2)

F110E19 =  rays C5

F110E20 =  C6 = posHull(C1,C2)

F110E21 =  rays C6

F110E22 =  linSpace C6

F110E23 =  R2 = matrix {{2,-1},{-1,2},{-1,-1}}

F110E24 =  C7 = posHull {R2,C3,C4}

F110E25 =  rays C7

F110E26 =  linSpace C7

F110E27 =  C6 == C1 + C2

F110E28 =  P = crossPolytope 3

F110E29 =  P1 = C6 + P

F110E30 =  (vertices P1,rays P1)

F110E31 =  C8 = C * C1

F110E32 =  rays C8

F110E33 =  linSpace C8

F110E34 =  ambDim C8

F110E35 =  fVector C8

F110E36 =  L = faces(1,C8)

F110E37 =  apply(L,rays)

F110E38 =  isSmooth C8

F110E39 =  L = hilbertBasis C8

F110E40 =  #L

F110E41 =  C9 = dualCone C8

F110E42 =  rays C9

exampleIDS = {"F110E0", "F110E1", "F110E2", "F110E3", "F110E4", "F110E5", "F110E6", "F110E7", "F110E8", "F110E9", "F110E10", "F110E11", "F110E12", "F110E13", "F110E14", "F110E15", "F110E16", "F110E17", "F110E18", "F110E19", "F110E20", "F110E21", "F110E22", "F110E23", "F110E24", "F110E25", "F110E26", "F110E27", "F110E28", "F110E29", "F110E30", "F110E31", "F110E32", "F110E33", "F110E34", "F110E35", "F110E36", "F110E37", "F110E38", "F110E39", "F110E40", "F110E41", "F110E42"}
