needsPackage "ToricVectorBundles"

F0E0 =  E = toricVectorBundle(2,pp1ProductFan 2,"Type" => "Kaneyama")

F0E1 =  details E

F0E2 =  F = addBaseChange(E,{matrix{{1,2},{0,1}},matrix{{1,0},{3,1}},matrix{{1,-2},{0,1}},matrix{{1,0},{-3,1}}})

F0E3 =  details F

F0E4 =  cocycleCheck F

F1E0 =  E = tangentBundle(projectiveSpaceFan 3,"Type" => "Kaneyama")

F1E1 =  ring E

F1E2 =  E = toricVectorBundle(1,projectiveSpaceFan 2, toList(3:matrix{{1/2}}),toList(3:matrix{{-1}}))

F1E3 =  ring E

F2E0 =  E = cotangentBundle hirzebruchFan 2

F2E1 =  isGeneral E

F3E0 =  E = tangentBundle hirzebruchFan 2

F3E1 =  u = matrix{{0},{0}}

F3E2 =  hh^0 (E,u)

F3E3 =  hh^0 E

F4E0 =  E = toricVectorBundle(2,pp1ProductFan 2,"Type" => "Kaneyama")

F4E1 =  details E

F4E2 =  F = addDegrees(E,{matrix{{1,2},{3,1}},matrix{{-1,0},{3,1}},matrix{{1,2},{-3,-1}},matrix{{-1,0},{-3,-1}}})

F4E3 =  details F

F4E4 =  regCheck F

F5E0 =  E = toricVectorBundle(2,pp1ProductFan 2)

F5E1 =  details E

F5E2 =  F = addBase(E,{matrix{{1,2},{3,1}},matrix{{-1,0},{3,1}},matrix{{1,2},{-3,-1}},matrix{{-1,0},{-3,-1}}})

F5E3 =  details F

F5E4 =  isVectorBundle F

F6E0 =  F = projectiveSpaceFan 2

F6E1 =  rays F

F6E2 =  maxCones F

F7E0 =  E = cotangentBundle(projectiveSpaceFan 2) 

F7E1 =  details E

F8E0 =  E = cotangentBundle projectiveSpaceFan 2

F8E1 =  rays E

F9E0 =  E = cotangentBundle pp1ProductFan 3

F9E1 =  charts E

F10E0 =  E1 = toricVectorBundle(2,hirzebruchFan 3)

F10E1 =  E2 = tangentBundle hirzebruchFan 3

F10E2 =  E1 == E2

F10E3 =  E1 = toricVectorBundle(2,hirzebruchFan 3,"Type" => "Kaneyama")

F10E4 =  E2 = tangentBundle(hirzebruchFan 3,"Type" => "Kaneyama")

F10E5 =  E1 == E2

F11E0 =  F = hirzebruchFan 3

F11E1 =  rays F

F12E0 =  E = tangentBundle pp1ProductFan 2

F12E1 =  details E

F12E2 =  E1 = randomDeformation(E,-2,6)

F12E3 =  details E1

F13E0 =  E = tangentBundle hirzebruchFan 3

F13E1 =  HH^0 (E,matrix{{1},{0}})

F14E0 =  E = tangentBundle hirzebruchFan 3

F14E1 =  HH_0^E {matrix{{1},{0}},matrix{{-1},{0}}}

F15E0 =  E = tangentBundle hirzebruchFan 2

F15E1 =  E = E ** E

F15E2 =  M = matrix {{1,0,1,0},{0,1,0,1/1}}

F15E3 =  E1 = image(E,M)

F15E4 =  details E1

F16E0 =  E = tangentBundle(pp1ProductFan 2,"Type" => "Kaneyama")

F16E1 =  details E

F16E2 =  E = tangentBundle pp1ProductFan 2

F16E3 =  details E

F17E0 =  E = tangentBundle hirzebruchFan 3

F17E1 =  u = matrix {{0},{0}}

F17E2 =  eulerChi(u,E)

F17E3 =  eulerChi E

F17E4 =  E = tangentBundle(hirzebruchFan 3,"Type" => "Kaneyama")

F17E5 =  u = matrix {{0},{0}}

F17E6 =  eulerChi(u,E)

F17E7 =  eulerChi E

F18E0 =  E = tangentBundle(hirzebruchFan 3,"Type" => "Kaneyama");

F18E1 =  net E

F19E0 =  E = tangentBundle(pp1ProductFan 2,"Type" => "Kaneyama")

F19E1 =  regCheck E

F20E0 =  E = cotangentBundle(projectiveSpaceFan 2,"Type" => "Kaneyama")

F20E1 =  details E

F21E0 =  E = toricVectorBundle(2,pp1ProductFan 2)

F21E1 =  E = addBase(E,{matrix{{1,2},{3,1}},matrix{{-1,0},{3,1}},matrix{{1,2},{-3,-1}},matrix{{-1,0},{-3,-1}}})

F21E2 =  isVectorBundle E

F21E3 =  F = toricVectorBundle(1,normalFan crossPolytope 3)

F21E4 =  F = addFiltration(F,apply({2,1,1,2,2,1,1,2}, i -> matrix {{i}}))

F21E5 =  isVectorBundle F

F21E6 =  E = toricVectorBundle(2,pp1ProductFan 2,"Type" => "Kaneyama")

F21E7 =  isVectorBundle E

F21E8 =  E = addBaseChange(E,{matrix{{1,2},{3,1}},matrix{{-1,0},{3,1}},matrix{{1,2},{-3,-1}},matrix{{-1,0},{-3,-1}}})

F21E9 =  isVectorBundle E

F22E0 =  E = tangentBundle hirzebruchFan 3

F22E1 =  base E

F23E0 =  E = toricVectorBundle(2,pp1ProductFan 2, "Type" => "Kaneyama")

F23E1 =  P = deltaE E

F23E2 =  vertices P

F23E3 =  E1 = tangentBundle projectiveSpaceFan 2

F23E4 =  P1 = deltaE E1

F23E5 =  vertices P1

F24E0 =  E = tangentBundle hirzebruchFan 2

F24E1 =  L = {1,-2,3,-4}

F24E2 =  E1 = twist(E,L)

F24E3 =  details E1

F25E0 =  E = tangentBundle hirzebruchFan 3

F25E1 =  details E

F25E2 =  Es = symmetricPower(2,E)

F25E3 =  details Es

F26E0 =  E = tangentBundle hirzebruchFan 3;

F26E1 =  net E

F27E0 =  F = fan posHull matrix {{1,5},{5,1}}

F27E1 =  L = {2,2}

F27E2 =  cartierIndex(L,F)

F27E3 =  L = {3,3}

F27E4 =  cartierIndex(L,F)

F28E0 =  E = tangentBundle projectiveSpaceFan 3

F28E1 =  findWeights E

F29E0 =  F = pp1ProductFan 2

F29E1 =  rays F

F29E2 =  maxCones F

F30E0 =  E1 = toricVectorBundle(2,hirzebruchFan 3)

F30E1 =  E2 = tangentBundle hirzebruchFan 3

F30E2 =  E = tensor(E1,E2)

F30E3 =  details E

F31E0 =  HF = hirzebruchFan 2

F31E1 =  E = exteriorPower(2, cotangentBundle HF)

F31E2 =  F = weilToCartier({-1,-1,-1,-1},HF)

F31E3 =  areIsomorphic(E,F)

F32E0 =  F = hirzebruchFan 3

F32E1 =  E =weilToCartier({1,-3,4,-2},F)

F32E2 =  details E

F32E3 =  F = hirzebruchFan 3

F32E4 =  E =weilToCartier({1,-3,4,-2},F,"Type" => "Kaneyama")

F32E5 =  details E

F33E0 =  E = toricVectorBundle(2,projectiveSpaceFan 2)

F33E1 =  details E

F33E2 =  E = toricVectorBundle(2,pp1ProductFan 2,"Type" => "Kaneyama")

F33E3 =  details E

F34E0 =  E1 = toricVectorBundle(2,hirzebruchFan 3)

F34E1 =  E2 = tangentBundle hirzebruchFan 3

F34E2 =  E = E1 ++ E2

F34E3 =  details E

F34E4 =  E1 = toricVectorBundle(2,hirzebruchFan 3,"Type" => "Kaneyama")

F34E5 =  E2 = tangentBundle(hirzebruchFan 3,"Type" => "Kaneyama")

F34E6 =  E = E1 ++ E2

F34E7 =  details E

F35E0 =  E = tangentBundle pp1ProductFan 2

F35E1 =  L = maxCones E

F35E2 =  apply(L,rays)

F35E3 =  E = tangentBundle(pp1ProductFan 2,"Type" => "Kaneyama")

F35E4 =  L = maxCones E

F35E5 =  apply(L,rays)

F36E0 =  E1 = toricVectorBundle(2,hirzebruchFan 3)

F36E1 =  E2 = tangentBundle hirzebruchFan 3

F36E2 =  E = E1 ** E2

F36E3 =  details E

F36E4 =  E1 = toricVectorBundle(2,hirzebruchFan 3,"Type" => "Kaneyama")

F36E5 =  E2 = tangentBundle(hirzebruchFan 3,"Type" => "Kaneyama")

F36E6 =  E = E1 ** E2

F36E7 =  details E

F37E0 =  F = pp1ProductFan 2

F37E1 =  E = tangentBundle F

F37E2 =  details E

F37E3 =  F = pp1ProductFan 2

F37E4 =  E = tangentBundle(F,"Type" => "Kaneyama")

F37E5 =  details E

F38E0 =  E = tangentBundle hirzebruchFan 3

F38E1 =  F = fan E

F38E2 =  rays F

F39E0 =  E = tangentBundle hirzebruchFan 2

F39E1 =  E = E ** E

F39E2 =  M = matrix {{1,0,1,0},{0,1,0,1/1}}

F39E3 =  E1 = ker(E,M)

F39E4 =  details E1

F40E0 =  E = tangentBundle(pp1ProductFan 2,"Type" => "Kaneyama")

F40E1 =  Ed = dual E

F40E2 =  details Ed

F40E3 =  Ed == cotangentBundle(pp1ProductFan 2,"Type" => "Kaneyama")

F40E4 =  E = tangentBundle projectiveSpaceFan 2

F40E5 =  Ed = dual E

F40E6 =  details Ed

F40E7 =  Ed == cotangentBundle projectiveSpaceFan 2

F41E0 =  E = tangentBundle hirzebruchFan 2

F41E1 =  filtration E

F42E0 =  F = projectiveSpaceFan 2

F42E1 =  E = tangentBundle F

F42E2 =  details E

F42E3 =  F = projectiveSpaceFan 2

F42E4 =  E = tangentBundle(F,"Type" => "Kaneyama")

F42E5 =  details E

F43E0 =  E = tangentBundle projectiveSpaceFan 3

F43E1 =  rank E

F44E0 =  E = tangentBundle hirzebruchFan 3

F44E1 =  details E

F44E2 =  Ee = exteriorPower(2,E)

F44E3 =  details Ee

F45E0 =  E = tangentBundle(hirzebruchFan 3,"Type" => "Kaneyama")

F45E1 =  HH^0 E

F45E2 =  HH^0 (E,Degree => 1)

F45E3 =  E = tangentBundle hirzebruchFan 3

F45E4 =  HH^0 E

F45E5 =  HH^0 (E,Degree => 1)

F46E0 =  E = toricVectorBundle(2,pp1ProductFan 2)

F46E1 =  details E

F46E2 =  F = addFiltration(E,{matrix{{1,3}},matrix{{-1,3}},matrix{{2,-3}},matrix{{0,-1}}})

F46E3 =  details F

F46E4 =  isVectorBundle F

F47E0 =  HF = hirzebruchFan 2

F47E1 =  E = exteriorPower(2, cotangentBundle HF)

F47E2 =  F = weilToCartier({-1,-1,-1,-1},HF)

F47E3 =  M = isomorphism(E,F)

F48E0 =  E = tangentBundle projectiveSpaceFan 3

F48E1 =  L = findWeights E

F48E2 =  existsDecomposition(E,L)

F49E0 =  E = toricVectorBundle(2,pp1ProductFan 2,"Type" => "Kaneyama")

F49E1 =  details E

F49E2 =  A = matrix{{1,2},{0,1}};

F49E3 =  B = matrix{{1,0},{3,1}};

F49E4 =  C = matrix{{1,-2},{0,1}};

F49E5 =  E1 = addBaseChange(E,{A,B,C,matrix{{1,0},{0,1}}})

F49E6 =  cocycleCheck E1

F49E7 =  D = inverse(B)*A*C

F49E8 =  E1 = addBaseChange(E,{A,B,C,D})

F49E9 =  cocycleCheck E1

F50E0 =  E = tangentBundle hirzebruchFan 2

F50E1 =  E = E ** E

F50E2 =  M = matrix {{1,0},{0,1},{1,0},{0,1/1}}

F50E3 =  E1 = coker(E,M)

F50E4 =  details E1

F51E0 =  L1 = {matrix {{1,0},{0,1}},matrix{{0,1},{1,0}},matrix{{-1,0},{-1,1}}}

F51E1 =  L2 = {matrix {{-1,0}},matrix{{-2,-1}},matrix{{0,1}}}

F51E2 =  E = toricVectorBundle(2,projectiveSpaceFan 2,L1,L2)

F51E3 =  details E

F51E4 =  L1 = {matrix {{1,0},{0,1}},matrix{{0,1},{1,0}},matrix{{-1,0},{-1,1}}}

F51E5 =  L2 = {matrix {{-1,0},{0,-1}},matrix{{0,1},{1,0}},matrix{{0,-1},{-1,0}}}

F51E6 =  E = toricVectorBundle(2,projectiveSpaceFan 2,L1,L2,"Type" => "Kaneyama")

F51E7 =  details E

exampleIDS = {"F0E0", "F0E1", "F0E2", "F0E3", "F0E4", "F1E0", "F1E1", "F1E2", "F1E3", "F2E0", "F2E1", "F3E0", "F3E1", "F3E2", "F3E3", "F4E0", "F4E1", "F4E2", "F4E3", "F4E4", "F5E0", "F5E1", "F5E2", "F5E3", "F5E4", "F6E0", "F6E1", "F6E2", "F7E0", "F7E1", "F8E0", "F8E1", "F9E0", "F9E1", "F10E0", "F10E1", "F10E2", "F10E3", "F10E4", "F10E5", "F11E0", "F11E1", "F12E0", "F12E1", "F12E2", "F12E3", "F13E0", "F13E1", "F14E0", "F14E1", "F15E0", "F15E1", "F15E2", "F15E3", "F15E4", "F16E0", "F16E1", "F16E2", "F16E3", "F17E0", "F17E1", "F17E2", "F17E3", "F17E4", "F17E5", "F17E6", "F17E7", "F18E0", "F18E1", "F19E0", "F19E1", "F20E0", "F20E1", "F21E0", "F21E1", "F21E2", "F21E3", "F21E4", "F21E5", "F21E6", "F21E7", "F21E8", "F21E9", "F22E0", "F22E1", "F23E0", "F23E1", "F23E2", "F23E3", "F23E4", "F23E5", "F24E0", "F24E1", "F24E2", "F24E3", "F25E0", "F25E1", "F25E2", "F25E3", "F26E0", "F26E1", "F27E0", "F27E1", "F27E2", "F27E3", "F27E4", "F28E0", "F28E1", "F29E0", "F29E1", "F29E2", "F30E0", "F30E1", "F30E2", "F30E3", "F31E0", "F31E1", "F31E2", "F31E3", "F32E0", "F32E1", "F32E2", "F32E3", "F32E4", "F32E5", "F33E0", "F33E1", "F33E2", "F33E3", "F34E0", "F34E1", "F34E2", "F34E3", "F34E4", "F34E5", "F34E6", "F34E7", "F35E0", "F35E1", "F35E2", "F35E3", "F35E4", "F35E5", "F36E0", "F36E1", "F36E2", "F36E3", "F36E4", "F36E5", "F36E6", "F36E7", "F37E0", "F37E1", "F37E2", "F37E3", "F37E4", "F37E5", "F38E0", "F38E1", "F38E2", "F39E0", "F39E1", "F39E2", "F39E3", "F39E4", "F40E0", "F40E1", "F40E2", "F40E3", "F40E4", "F40E5", "F40E6", "F40E7", "F41E0", "F41E1", "F42E0", "F42E1", "F42E2", "F42E3", "F42E4", "F42E5", "F43E0", "F43E1", "F44E0", "F44E1", "F44E2", "F44E3", "F45E0", "F45E1", "F45E2", "F45E3", "F45E4", "F45E5", "F46E0", "F46E1", "F46E2", "F46E3", "F46E4", "F47E0", "F47E1", "F47E2", "F47E3", "F48E0", "F48E1", "F48E2", "F49E0", "F49E1", "F49E2", "F49E3", "F49E4", "F49E5", "F49E6", "F49E7", "F49E8", "F49E9", "F50E0", "F50E1", "F50E2", "F50E3", "F50E4", "F51E0", "F51E1", "F51E2", "F51E3", "F51E4", "F51E5", "F51E6", "F51E7"}
