needsPackage "NormalToricVarieties"

F40E0 =  PP2 = toricProjectiveSpace 2;

F40E1 =  assert (isSmooth PP2 and isProjective PP2)

F40E2 =  fromCDivToPic PP2

F40E3 =  assert (fromCDivToPic PP2 === fromWDivToCl PP2)

F40E4 =  X = smoothFanoToricVariety (4,20);

F40E5 =  assert (isSmooth X and isProjective X and isFano X)

F40E6 =  fromCDivToPic X

F40E7 =  assert (fromCDivToPic X === fromWDivToCl X)

F40E8 =  U = normalToricVariety ({{4,-1},{0,1}},{{0},{1}});

F40E9 =  assert (isSmooth U and not isComplete U)

F40E10 =  fromCDivToPic U

F40E11 =  assert (fromCDivToPic U === fromWDivToCl U)

F40E12 =  Q = normalToricVariety ({{1,0,0},{0,1,0},{0,0,1},{1,1,-1}},{{0,1,2,3}});

F40E13 =  assert (not isSimplicial Q and not isComplete Q)

F40E14 =  fromCDivToPic Q

F40E15 =  assert (fromWDivToCl Q * fromCDivToWDiv Q == fromPicToCl Q * fromCDivToPic Q)

F40E16 =  Y = normalToricVariety (id_(ZZ^3) | -id_(ZZ^3));

F40E17 =  assert (not isSimplicial Y and isProjective Y)

F40E18 =  fromCDivToPic Y

F40E19 =  fromPicToCl Y

F40E20 =  fromPicToCl Y * fromCDivToPic Y

F40E21 =  fromCDivToWDiv Y

F40E22 =  fromWDivToCl Y

F40E23 =  assert (fromWDivToCl Y * fromCDivToWDiv Y == fromPicToCl Y * fromCDivToPic Y)

exampleIDS = {"F40E0", "F40E1", "F40E2", "F40E3", "F40E4", "F40E5", "F40E6", "F40E7", "F40E8", "F40E9", "F40E10", "F40E11", "F40E12", "F40E13", "F40E14", "F40E15", "F40E16", "F40E17", "F40E18", "F40E19", "F40E20", "F40E21", "F40E22", "F40E23"}
