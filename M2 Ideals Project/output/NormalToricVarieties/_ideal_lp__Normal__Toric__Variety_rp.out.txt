needsPackage "NormalToricVarieties"

F70E0 =  PP4 = toricProjectiveSpace 4;

F70E1 =  B = ideal PP4

F70E2 =  assert (isMonomialIdeal B and B == radical B)

F70E3 =  monomialIdeal PP4

F70E4 =  assert (B == monomialIdeal PP4)

F70E5 =  C = normalToricVariety ({{1,0,0},{0,1,0},{0,0,1},{1,1,-1}}, {{0,1,2,3}});

F70E6 =  ideal C

F70E7 =  assert (monomialIdeal C == 1)

F70E8 =  monomialIdeal affineSpace 3

F70E9 =  assert (ideal affineSpace 3 == 1)

F70E10 =  X = toricProjectiveSpace (2) ** toricProjectiveSpace (3);

F70E11 =  S = ring X;

F70E12 =  B = ideal X

F70E13 =  primaryDecomposition B

F70E14 =  dual monomialIdeal B

F70E15 =  Y = smoothFanoToricVariety (2,3);

F70E16 =  dual monomialIdeal Y

F70E17 =  sort apply (max Y, s -> select (# rays Y, i -> not member (i,s)))

F70E18 =  primaryDecomposition dual monomialIdeal Y

F70E19 =  code (monomialIdeal, NormalToricVariety)

exampleIDS = {"F70E0", "F70E1", "F70E2", "F70E3", "F70E4", "F70E5", "F70E6", "F70E7", "F70E8", "F70E9", "F70E10", "F70E11", "F70E12", "F70E13", "F70E14", "F70E15", "F70E16", "F70E17", "F70E18", "F70E19"}
