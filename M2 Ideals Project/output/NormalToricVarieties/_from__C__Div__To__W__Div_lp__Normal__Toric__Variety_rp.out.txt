needsPackage "NormalToricVarieties"

F52E0 =  PP2 = toricProjectiveSpace 2;

F52E1 =  assert (isSmooth PP2 and isProjective PP2)

F52E2 =  fromCDivToWDiv PP2

F52E3 =  assert (fromCDivToWDiv PP2 === id_(weilDivisorGroup PP2))

F52E4 =  X = smoothFanoToricVariety (4,20);

F52E5 =  assert (isSmooth X and isProjective X and isFano X)

F52E6 =  fromCDivToWDiv X

F52E7 =  assert (fromCDivToWDiv X === id_(weilDivisorGroup X))

F52E8 =  U = normalToricVariety ({{4,-1},{0,1}},{{0},{1}});

F52E9 =  assert (isSmooth U and not isComplete U)

F52E10 =  fromCDivToWDiv U

F52E11 =  assert (fromCDivToWDiv U === id_(weilDivisorGroup U))

F52E12 =  C = normalToricVariety ({{4,-1},{0,1}},{{0,1}});

F52E13 =  fromCDivToWDiv C

F52E14 =  prune cokernel fromCDivToWDiv C

F52E15 =  assert (rank cokernel fromCDivToWDiv C === 0)

F52E16 =  Q = normalToricVariety ({{1,0,0},{0,1,0},{0,0,1},{1,1,-1}},{{0,1,2,3}});

F52E17 =  assert (not isSimplicial Q and not isComplete Q)

F52E18 =  fromCDivToWDiv Q

F52E19 =  prune coker fromCDivToWDiv Q

F52E20 =  assert (rank coker fromCDivToWDiv Q === 1)

F52E21 =  Y = normalToricVariety (id_(ZZ^3) | -id_(ZZ^3));

F52E22 =  assert (not isSimplicial Y and isComplete Y)

F52E23 =  fromCDivToWDiv Y

F52E24 =  prune cokernel fromCDivToWDiv Y

F52E25 =  assert (rank coker fromCDivToWDiv Y === 4)

exampleIDS = {"F52E0", "F52E1", "F52E2", "F52E3", "F52E4", "F52E5", "F52E6", "F52E7", "F52E8", "F52E9", "F52E10", "F52E11", "F52E12", "F52E13", "F52E14", "F52E15", "F52E16", "F52E17", "F52E18", "F52E19", "F52E20", "F52E21", "F52E22", "F52E23", "F52E24", "F52E25"}
