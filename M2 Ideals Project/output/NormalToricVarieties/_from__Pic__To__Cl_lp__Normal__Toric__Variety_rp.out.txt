needsPackage "NormalToricVarieties"

F81E0 =  PP3 = toricProjectiveSpace 3;

F81E1 =  assert (isSmooth PP3 and isProjective PP3)

F81E2 =  fromPicToCl PP3

F81E3 =  assert (fromPicToCl PP3 === id_(classGroup PP3))

F81E4 =  X = smoothFanoToricVariety (4,90);

F81E5 =  assert (isSmooth X and isProjective X and isFano X)

F81E6 =  fromPicToCl X

F81E7 =  assert (fromPicToCl X === id_(classGroup X))

F81E8 =  U = normalToricVariety ({{4,-1},{0,1}},{{0},{1}});

F81E9 =  assert (isSmooth U and not isComplete U and # max U =!= 1)

F81E10 =  fromPicToCl U

F81E11 =  assert (fromPicToCl U === id_(classGroup U))

F81E12 =  P123 = weightedProjectiveSpace {1,2,3};

F81E13 =  assert (isSimplicial P123 and isProjective P123)

F81E14 =  fromPicToCl P123

F81E15 =  assert (fromPicToCl P123 === lcm (1,2,3) * id_(classGroup P123))

F81E16 =  P12234 = weightedProjectiveSpace {1,2,2,3,4};

F81E17 =  assert (isSimplicial P12234 and isProjective P12234)

F81E18 =  fromPicToCl P12234

F81E19 =  assert (fromPicToCl P12234 === lcm (1,2,2,3,4) * id_(classGroup P12234))

F81E20 =  Q = normalToricVariety ({{1,0,0},{0,1,0},{0,0,1},{1,1,-1}},{{0,1,2,3}});

F81E21 =  assert (not isSimplicial Q and not isComplete Q and # max Q === 1)

F81E22 =  fromPicToCl Q

F81E23 =  assert (fromPicToCl Q == 0)

F81E24 =  Y = normalToricVariety (id_(ZZ^3) | -id_(ZZ^3));

F81E25 =  assert (not isSimplicial Y and isProjective Y)

F81E26 =  fromPicToCl Y

exampleIDS = {"F81E0", "F81E1", "F81E2", "F81E3", "F81E4", "F81E5", "F81E6", "F81E7", "F81E8", "F81E9", "F81E10", "F81E11", "F81E12", "F81E13", "F81E14", "F81E15", "F81E16", "F81E17", "F81E18", "F81E19", "F81E20", "F81E21", "F81E22", "F81E23", "F81E24", "F81E25", "F81E26"}
