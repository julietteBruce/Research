needsPackage "NormalToricVarieties"

F92E0 =  X0 = Proj (QQ[x_0..x_3])

F92E1 =  assert (3 === dim X0)

F92E2 =  ring X0

F92E3 =  hilbertPolynomial(X0, Projective => false)

F92E4 =  for d to 10 list rank HH^0 (OO_X0(d))

F92E5 =  X1 = toricProjectiveSpace 3

F92E6 =  assert (3 === dim X1)

F92E7 =  rays X1

F92E8 =  max X1

F92E9 =  ring X1

F92E10 =  intersectionRing X1

F92E11 =  hilbertPolynomial (X1)

F92E12 =  for d to 10 list rank HH^0 (X1, OO_X1(d))

F92E13 =  assert (X0 =!= X1)

F92E14 =  X2 = abstractProjectiveSpace (3, base(symbol i))

F92E15 =  assert (3 === dim X2)

F92E16 =  intersectionRing X2

F92E17 =  chi (OO_X2(i))

F92E18 =  assert (X2 =!= X0)

F92E19 =  assert (X2 =!= X1)

F92E20 =  projectiveSpace = n -> Proj (QQ[x_0..x_n]);

F92E21 =  projectiveSpace 2

F92E22 =  PP = toricProjectiveSpace;

F92E23 =  PP 2

exampleIDS = {"F92E0", "F92E1", "F92E2", "F92E3", "F92E4", "F92E5", "F92E6", "F92E7", "F92E8", "F92E9", "F92E10", "F92E11", "F92E12", "F92E13", "F92E14", "F92E15", "F92E16", "F92E17", "F92E18", "F92E19", "F92E20", "F92E21", "F92E22", "F92E23"}
