needsPackage "NormalToricVarieties"

F9E0 =  X1 = hirzebruchSurface 2;

F9E1 =  assert (isNef X1_0 and not isAmple X1_0)

F9E2 =  assert not isNef X1_1

F9E3 =  assert (isNef X1_2 and not isAmple X1_2)

F9E4 =  assert (isNef X1_3 and not isAmple X1_3)

F9E5 =  X2 = weightedProjectiveSpace {2,3,5};

F9E6 =  D = X2_1 - X2_0

F9E7 =  assert (isNef D and HH^0(X2, OO D) == 0)

F9E8 =  assert all (dim X2, i -> HH^i(X2, OO D) == 0)

F9E9 =  assert not isCartier D

F9E10 =  assert isCartier (30*D)

F9E11 =  HH^0 (X2, OO (30*D))

F9E12 =  assert all (dim X2 -1, i -> HH^(i+1)(X2, OO (30*D)) == 0)

F9E13 =  X3 = normalToricVariety({{1,0,0},{0,1,0},{0,0,1},{0,-1,2},{0,0,-1},{-1,1,-1},{-1,0,-1},{-1,-1,0}},{{0,1,2},{0,2,3},{0,3,4},{0,4,5},{0,1,5},{1,2,7},{2,3,7},{3,4,7},{4,5,6},{4,6,7},{5,6,7},{1,5,7}});

F9E14 =  assert (isComplete X3 and not isProjective X3)

F9E15 =  assert not any (#rays X3, i -> isNef X3_i)

F9E16 =  assert isNef (0*X3_1)

F9E17 =  assert (nefGenerators X3 == 0)

F9E18 =  X4 = kleinschmidt (9,{1,2,3});

F9E19 =  assert (isNef X4_0 and not isAmple X4_0)

F9E20 =  assert all (dim X4 - 1, i -> HH^(i+1)(X4, OO X4_0) == 0)

F9E21 =  D = X4_0 + X4_4

F9E22 =  assert (isNef D and isAmple D)

F9E23 =  assert all (dim X4 - 1, i -> HH^(i+1)(X4, OO D) == 0)

exampleIDS = {"F9E0", "F9E1", "F9E2", "F9E3", "F9E4", "F9E5", "F9E6", "F9E7", "F9E8", "F9E9", "F9E10", "F9E11", "F9E12", "F9E13", "F9E14", "F9E15", "F9E16", "F9E17", "F9E18", "F9E19", "F9E20", "F9E21", "F9E22", "F9E23"}
