needsPackage "NormalToricVarieties"

F36E0 =  X = hirzebruchSurface 1;

F36E1 =  Y = toricProjectiveSpace 1;

F36E2 =  f = map(Y, X, matrix {{1, 0}})

F36E3 =  f' = picardGroup f

F36E4 =  assert (isWellDefined f and source f' == picardGroup Y and

         target f' == picardGroup X)

F36E5 =  f'' = cartierDivisorGroup f

F36E6 =  assert(f' * fromCDivToPic Y  == fromCDivToPic X  * f'')

F36E7 =  W = weightedProjectiveSpace {1, 1, 2};

F36E8 =  Z = toricBlowup({0, 1, 4}, (W ** toricProjectiveSpace 1), {0, -2, 1});

F36E9 =  assert (not isSmooth W and not isSmooth Z)

F36E10 =  g = map(W, Z, matrix{{1,0,0},{0,1,0}})

F36E11 =  g' = picardGroup g

F36E12 =  assert (isWellDefined g and source g' == picardGroup W and

          target g' == picardGroup Z)

F36E13 =  g'' = cartierDivisorGroup g

F36E14 =  assert(g' * fromCDivToPic W  == fromCDivToPic Z  * g'')

exampleIDS = {"F36E0", "F36E1", "F36E2", "F36E3", "F36E4", "F36E5", "F36E6", "F36E7", "F36E8", "F36E9", "F36E10", "F36E11", "F36E12", "F36E13", "F36E14"}
