needsPackage "SymbolicPowers"

F0E0 =  R = QQ[x,y,z];

F0E1 =  I = ideal(x*y,y*z,x^2);

F0E2 =  squarefreeGens(I)

F1E0 =  R = QQ[x,y,z];

F1E1 =  I = ideal(x*y,y*z,x*z);

F1E2 =  isKonig(I)

F2E0 =  R = QQ[x,y,z];

F2E1 =  I = ideal(x*y,y*z,x*z);

F2E2 =  noPackedAllSubs(I)

F3E0 =  B = QQ[x,y,z];

F3E1 =  f = map(QQ[t],B,{t^3,t^4,t^5})

F3E2 =  I = ker f;

F3E3 =  symbolicPower(I,2)

F3E4 =  P = ker map(QQ[t],QQ[x,y,z],{t^3,t^4,t^5})

F3E5 =  isHomogeneous P

F3E6 =  time symbolicPower(P,4);

F3E7 =  Q = ker map(QQ[t],QQ[x,y,z, Degrees => {3,4,5}],{t^3,t^4,t^5})

F3E8 =  isHomogeneous Q

F3E9 =  time symbolicPower(Q,4);

F4E0 =  R = QQ[x,y,z];

F4E1 =  I = ideal(x*y,y*z,x*z);

F4E2 =  isPacked(I)

F5E0 =  A = QQ[x,y,z];

F5E1 =  symbolicPowerJoin(ideal(x,y),2)

F6E0 =  T = QQ[x,y,z];

F6E1 =  I = intersect(ideal"x,y",ideal"x,z",ideal"y,z");

F6E2 =  lowerBoundResurgence(I)

F7E0 =  R = QQ[x,y,z]

F7E1 =  J = ideal(x,y)

F7E2 =  isSymbPowerContainedinPower(J,3,2)

F8E0 =  R = QQ[x,y,z,a,b]

F8E1 =  J = intersect(ideal(x,y,z),ideal(a,b))

F8E2 =  bigHeight(J)

F9E0 =  R = QQ[x,y,z];

F9E1 =  J = ideal (x*(y^3-z^3),y*(z^3-x^3),z*(x^3-y^3));

F9E2 =  asymptoticRegularity(J, SampleSize=>5)

F10E0 =  R = QQ[x,y,z];

F10E1 =  I = ideal(x*y,y*z,x*z);

F10E2 =  noPackedSub(I)

F11E0 =  T = QQ[x,y,z];

F11E1 =  I = intersect(ideal"x,y",ideal"x,z",ideal"y,z");

F11E2 =  lowerBoundResurgence(I,UseWaldschmidt=>true)

F12E0 =  R = QQ[x,y,z]

F12E1 =  I = ideal(x*y,x*z,y*z);

F12E2 =  symbolicDefect(I,2)

F13E0 =  S = QQ[x,y,z];

F13E1 =  I = ideal(x^3,x^2*y^2,x*z^3,y^4,y^2*z);

F13E2 =  J = joinIdeals(I,I)

F13E3 =  A = QQ[x,y,z];

F13E4 =  symbolicPowerJoin(ideal(x,y),2)

F13E5 =  f = map(QQ[t],A,{t^3,t^4,t^5})

F13E6 =  P = ker f;

F13E7 =  symbolicPowerJoin(P,2)

F14E0 =  B = ZZ/7[x,y,z];

F14E1 =  f = map(ZZ/7[t],B,{t^3,t^4,t^5})

F14E2 =  I = ker f;

F14E3 =  symbPowerPrimePosChar(I,2)

F15E0 =  R = QQ[x,y,z];

F15E1 =  J = ideal (x*(y^3-z^3),y*(z^3-x^3),z*(x^3-y^3));

F15E2 =  lowerBoundResurgence(J, SampleSize=>5)

F16E0 =  R = QQ[x,y,z]

F16E1 =  J = intersect(ideal(x^2,y,z^3),ideal(x,z))

F16E2 =  minimalPart(J)

F17E0 =  R = QQ[x,y,z];

F17E1 =  J = ideal (x*(y^3-z^3),y*(z^3-x^3),z*(x^3-y^3));

F17E2 =  containmentProblem(J,3,InSymbolic => true)

F18E0 =  B = QQ[x,y,z];

F18E1 =  f = map(QQ[t],B,{t^3,t^4,t^5})

F18E2 =  I = ker f;

F18E3 =  isSymbolicEqualOrdinary(I,2)

F19E0 =  B = ZZ/101[x,y,z];

F19E1 =  I = ideal(x*(y^3-z^3),y*(z^3-x^3),z*(x^3-y^3));

F19E2 =  isSymbPowerContainedinPower(I,3,2)

F19E3 =  containmentProblem(I,2)

F19E4 =  containmentProblem(I,4,InSymbolic => true)

F20E0 =  B = QQ[x,y,z];

F20E1 =  I = ideal(x*(y^3-z^3),y*(z^3-y^3),z*(x^3-y^3));

F20E2 =  J = symbolicPower(I,3)

F21E0 =  R = QQ[x,y,z];

F21E1 =  I = ideal(x*y,y*z,x*z);

F21E2 =  waldschmidt(I)

F21E3 =  R = QQ[x,y,z];

F21E4 =  J = ideal (x*(y^3-z^3),y*(z^3-x^3),z*(x^3-y^3));

F21E5 =  waldschmidt(J, SampleSize=>5)

F22E0 =  B = QQ[x,y,z];

F22E1 =  f = map(QQ[t],B,{t^3,t^4,t^5})

F22E2 =  I = ker f;

F22E3 =  m = containmentProblem(I,2)

F23E0 =  R = QQ[x,y,z];

F23E1 =  J = ideal (x*(y^3-z^3),y*(z^3-x^3),z*(x^3-y^3));

F23E2 =  asymptoticRegularity(J, SampleSize=>5)

F24E0 =  R = ZZ/7[x,y,z]

F24E1 =  P = ker map(ZZ/7[t],R,{t^3,t^4,t^5})

F24E2 =  J = symbPowerPrimePosChar(P,2)

F24E3 =  J == P^2

F24E4 =  isSymbolicEqualOrdinary(P,2)

F25E0 =  T = QQ[x,y,z];

F25E1 =  I = intersect(ideal"x,y",ideal"x,z",ideal"y,z");

F25E2 =  lowerBoundResurgence(I,UseWaldschmidt=>true)

F26E0 =  R = QQ[x,y,z];

F26E1 =  I = ideal(x*y,y*z,x*z);

F26E2 =  symbolicPolyhedron(I)

F27E0 =  R = QQ[x,y,z]

F27E1 =  I = ideal(x*y,z*y,x*z)

F27E2 =  isKonig(I)

F27E3 =  isPacked(I)

F27E4 =  noPackedAllSubs(I)

F27E5 =  R = QQ[a,b,c,d,A,B,C,D]

F27E6 =  J = ideal"ABCD,cdAB,abcD,bcABD,abcBD,abcdA,abcAD,abdAC,acdBC,acBCD,abcdC,bcdAC,bcACD,bcdAD,acdBD,adBCD,acABD,bdABC,adABC"

F27E7 =  isPacked(J)

F27E8 =  noPackedSub(J)

F27E9 =  L = substitute(J,matrix{{1,0,c,d,A,1,C,D}})

F27E10 =  isKonig(L)

F28E0 =  R = QQ[x,y,z,a,b]

F28E1 =  J = intersect(ideal(x,y,z),ideal(a,b))

F28E2 =  assPrimesHeight(J)

F29E0 =  R = QQ[x,y,z];

F29E1 =  I = ideal(x*y,y*z,x*z);

F29E2 =  squarefreeInCodim(I)

F30E0 =  R = QQ[x,y,z];

F30E1 =  J = ideal (x*(y^3-z^3),y*(z^3-x^3),z*(x^3-y^3));

F30E2 =  waldschmidt(J, SampleSize=>5)

F31E0 =  S = QQ[x,y,z];

F31E1 =  I = ideal(x^3,x^2*y^2,x*z^3,y^4,y^2*z);

F31E2 =  J = joinIdeals(I,I)

F32E0 =  T = QQ[x,y,z];

F32E1 =  I = intersect(ideal"x,y",ideal"x,z",ideal"y,z")

F32E2 =  minDegreeSymbPower(I,2)

exampleIDS = {"F0E0", "F0E1", "F0E2", "F1E0", "F1E1", "F1E2", "F2E0", "F2E1", "F2E2", "F3E0", "F3E1", "F3E2", "F3E3", "F3E4", "F3E5", "F3E6", "F3E7", "F3E8", "F3E9", "F4E0", "F4E1", "F4E2", "F5E0", "F5E1", "F6E0", "F6E1", "F6E2", "F7E0", "F7E1", "F7E2", "F8E0", "F8E1", "F8E2", "F9E0", "F9E1", "F9E2", "F10E0", "F10E1", "F10E2", "F11E0", "F11E1", "F11E2", "F12E0", "F12E1", "F12E2", "F13E0", "F13E1", "F13E2", "F13E3", "F13E4", "F13E5", "F13E6", "F13E7", "F14E0", "F14E1", "F14E2", "F14E3", "F15E0", "F15E1", "F15E2", "F16E0", "F16E1", "F16E2", "F17E0", "F17E1", "F17E2", "F18E0", "F18E1", "F18E2", "F18E3", "F19E0", "F19E1", "F19E2", "F19E3", "F19E4", "F20E0", "F20E1", "F20E2", "F21E0", "F21E1", "F21E2", "F21E3", "F21E4", "F21E5", "F22E0", "F22E1", "F22E2", "F22E3", "F23E0", "F23E1", "F23E2", "F24E0", "F24E1", "F24E2", "F24E3", "F24E4", "F25E0", "F25E1", "F25E2", "F26E0", "F26E1", "F26E2", "F27E0", "F27E1", "F27E2", "F27E3", "F27E4", "F27E5", "F27E6", "F27E7", "F27E8", "F27E9", "F27E10", "F28E0", "F28E1", "F28E2", "F29E0", "F29E1", "F29E2", "F30E0", "F30E1", "F30E2", "F31E0", "F31E1", "F31E2", "F32E0", "F32E1", "F32E2"}
