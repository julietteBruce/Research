needsPackage "SchurRings"

F0E0 =  S = schurRing(s,2);

F0E1 =  exteriorPower(3,s_2)

F0E2 =  T = schurRing(t,2,GroupActing => "Sn");

F0E3 =  symmetricPower(2,t_{1,1})

F1E0 =  cF = new ClassFunction from {{2} => 1, {1,1} => -1};

F1E1 =  pl1 = plethysm({1,1},cF)

F1E2 =  R = symmetricRing 5;

F1E3 =  pl2 = plethysm(e_1+e_2,cF)

F1E4 =  S = schurRing R;

F1E5 =  symmetricFunction(cF,S)

F1E6 =  symmetricFunction(pl1,S)

F1E7 =  symmetricFunction(pl2,S)

F2E0 =  R = symmetricRing(QQ,5);

F2E1 =  pl = plethysm(h_2,h_3)

F2E2 =  toS pl

F2E3 =  S = schurRing(QQ,q,3);

F2E4 =  h_2 @ q_{2,1}

F2E5 =  plethysm(q_{2,1},q_{2,1})

F2E6 =  T = schurRing(S,t,2,GroupActing => "Sn");

F2E7 =  plethysm(q_{1,1,1}-q_{2,1}+q_{3},q_{2,1}*t_2-t_{1,1})

F2E8 =  p_3 @ (q_{2,1}*t_2-t_{1,1})

F3E0 =  R = symmetricRing 7;

F3E1 =  toH(h_3*e_3)

F3E2 =  S = schurRing(s,4)

F3E3 =  toH S_{3,2,1}

F3E4 =  R = schurRing(r, 4, EHPVariables => (a,b,c));

F3E5 =  S = schurRing(R, s, 2, EHPVariables => (x,y,z));

F3E6 =  T = schurRing(S, t, 3);

F3E7 =  A = symmetricRing T;

F3E8 =  f = (r_1+s_1+t_1)^2

F3E9 =  toH f

F4E0 =  S = schurRing(s,3);

F4E1 =  rep = s_{5};

F4E2 =  M = {1_S,s_{5},s_{10},s_{15},s_{20},s_{25},s_{30}};

F4E3 =  schurResolution(rep,M,SyzygyLimit => 3)

F5E0 =  R = symmetricRing(QQ,5);

F5E1 =  classFunction(jacobiTrudi({4,1},R))

F5E2 =  R = symmetricRing(QQ,5);

F5E3 =  classFunction(jacobiTrudi({3,1,1},R))

F6E0 =  centralizerSize{1,1,1}

F6E1 =  R = symmetricRing(QQ,6);

F6E2 =  u = p_1 * p_2 * p_3;

F6E3 =  scalarProduct(u,u)

F7E0 =  S = schurRing(QQ,s,3)

F7E1 =  rep = s_{2}

F7E2 =  M = {1_S,s_{2},s_{4},s_{6},s_{8},s_{10},s_{12}}

F7E3 =  schurResolution(rep,M)

F7E4 =  rep = s_{3}

F7E5 =  M = {1_S,s_{3},s_{6},s_{9},s_{12},s_{15},s_{18},s_{21},s_{24},s_{27}}

F7E6 =  d = 7

F7E7 =  schurResolution(rep,M,DegreeLimit => d)

F7E8 =  T = schurRing(S,t,4)

F7E9 =  rep = s_1 * t_1

F7E10 =  M = {1_T} | apply(splice{1..8},i -> s_i * t_i)

F7E11 =  schurResolution(rep,M)

F7E12 =  n = 5;

F7E13 =  S = schurRing(QQ,s,n,GroupActing => "Sn");

F7E14 =  rep = s_n + s_{n-1,1};

F7E15 =  M = {s_n}

F7E16 =  schurResolution(rep,M,DegreeLimit => n)

F7E17 =  M = {s_n} | splice{n:rep};

F7E18 =  schurResolution(rep,M)

F8E0 =  S = schurRing(QQ[x],s,3);

F8E1 =  (x*s_{2,1}+s_3)^2

F8E2 =  S = schurRing(s,4,GroupActing => "Sn");

F8E3 =  exteriorPower(2,s_(3,1))

F8E4 =  S = schurRing(ZZ/5,t)

F8E5 =  (t_(2,1)-t_3)^2

F8E6 =  S = schurRing(r,2,EHPVariables => (re,rh,rp))

F8E7 =  toH r_(2,1)

F9E0 =  partitions(set{1,2,3,4},{2,1,1})

F9E1 =  partitions(set{a,b,c,d,e},new Partition from {3,2})

F10E0 =  R = symmetricRing(QQ,5);

F10E1 =  S = schurRing R

F10E2 =  scalarProduct(h_5,p_5)

F10E3 =  scalarProduct(S_{4,1},p_5)

F10E4 =  R = symmetricRing(QQ,5);

F10E5 =  toS p_5

F11E0 =  R = schurRing(QQ,r,6);

F11E1 =  numgens R

F11E2 =  S = schurRing(s);

F11E3 =  numgens S

F12E0 =  S = schurRing(QQ,s,4)

F12E1 =  R = schurRing(r,infinity)

F12E2 =  numgens S

F12E3 =  numgens R

F12E4 =  Q = schurRing(q,4,GroupActing => "Sn")

F12E5 =  V = s_1

F12E6 =  dim V

F12E7 =  V * V

F12E8 =  V^3

F12E9 =  W = s_{3}

F12E10 =  dim W

F12E11 =  U = s_{1,1,1}

F12E12 =  dim U

F12E13 =  W = symmetricPower(3,V)

F12E14 =  U = exteriorPower(3,V)

F12E15 =  exteriorPower(2,W)

F12E16 =  symmetricPower(2,U)

F12E17 =  plethysm(W+U,W+U)

F12E18 =  s_2 @ s_3

F12E19 =  (W+U) @ (W+U)

F12E20 =  W' = toS(W,Q)

F12E21 =  U' = toS(U,Q)

F12E22 =  W' * U'

F12E23 =  cfW = classFunction(W')

F12E24 =  cfU = classFunction(U')

F12E25 =  cfWU = cfW * cfU

F12E26 =  symmetricFunction(cfWU,Q)

F12E27 =  exteriorPower(2,W')

F12E28 =  symmetricPower(2,U')

F12E29 =  toE U

F12E30 =  toH U

F12E31 =  toP W

F12E32 =  A = symmetricRing S

F12E33 =  schurRing A === S

F12E34 =  T = schurRing(S,t,3)

F12E35 =  V' = t_1

F12E36 =  schurLevel T

F12E37 =  schurLevel S

F12E38 =  schurLevel QQ

F12E39 =  symmetricPower(3,V*V')

F12E40 =  exteriorPower(3,V*V')

F12E41 =  n = 4

F12E42 =  M = {1_S}

F12E43 =  schurResolution(V,M,DegreeLimit => n)

F12E44 =  rep = q_n + q_(n-1,1)

F12E45 =  M = {q_n}

F12E46 =  sR = schurResolution(rep,M,DegreeLimit => n)

F12E47 =  eP2rep = exteriorPower(2,rep)

F12E48 =  eP2rep == last sR#2#0

F13E0 =  R = symmetricRing(QQ,3);

F13E1 =  S = schurRing(QQ,q,3);

F13E2 =  toE plethysm({2,1},e_1*e_2-e_3)

F13E3 =  plethysm({2,1,1},q_{1,1})

F13E4 =  T = schurRing(S,t,4,GroupActing => "Sn");

F13E5 =  plethysm({1,1},q_1*t_{3,1})

F14E0 =  R = schurRing(QQ,r,3);

F14E1 =  S = schurRing(R,s,5);

F14E2 =  T = schurRing(S,t,2);

F14E3 =  schurLevel R

F14E4 =  schurLevel S

F14E5 =  schurLevel T

F14E6 =  schurLevel QQ

F15E0 =  R = symmetricRing(QQ,10);

F15E1 =  jacobiTrudi({3,2,2,1},R)

F15E2 =  jacobiTrudi(new Partition from {4,4,1},R,EorH => "H")

F15E3 =  toS oo

F16E0 =  R = symmetricRing(QQ,5,SVariable => getSymbol"s");

F16E1 =  S = schurRing R

F16E2 =  s_2^2

F17E0 =  A = schurRing(a,3,GroupActing => "Sn");

F17E1 =  B = schurRing(A,b,2);

F17E2 =  rep = (a_3 + a_{2,1}) * b_1

F17E3 =  d = dim rep

F17E4 =  M = {a_3 * 1_B};

F17E5 =  sR = schurResolution(rep,M,DegreeLimit => d)

F18E0 =  S = symmetricRing(QQ,4);

F18E1 =  cF = new ClassFunction from {{1,1,1,1}=>24};

F18E2 =  symmetricFunction(cF,S)

F18E3 =  symmetricFunction(cF,schurRing S)

F19E0 =  ch1 = new ClassFunction from {{4,4} => 2, {8} => -1, {5,2,1} => 2, {3,2,2,1} => 1};

F19E1 =  ch2 = new ClassFunction from {{2,2,2,2} => -4, {5,2,1} => 1, {3,2,2,1} => 3};

F19E2 =  internalProduct(ch1,ch2)

F19E3 =  ch1 * ch2

F20E0 =  S = schurRing(s,3)

F20E1 =  dim s_2

F20E2 =  T = schurRing(t,4,GroupActing => "Sn")

F20E3 =  dim t_{2,2}

F20E4 =  U = schurRing(T,u,3)

F20E5 =  dim (t_{2,2}*u_2)

F20E6 =  S = schurRing(s,3)

F20E7 =  dim(n,s_2)

F20E8 =  dim(n,s_{1,1})

F20E9 =  dim(n,s_{2,1})

F20E10 =  S = schurRing(s,3)

F20E11 =  T = schurRing(S,t,4)

F20E12 =  Q = schurRing(T,q,5,GroupActing => "Sn")

F20E13 =  dExpr = dim({a,b,c},s_{2}*t_{1,1}*q_{4,1})

F20E14 =  P = QQ[a,b,c]

F20E15 =  value dExpr

F20E16 =  dim({1,2,3},s_{2}*t_{1,1}*q_{4,1})

F21E0 =  R = symmetricRing(QQ[x,y,z],4)

F21E1 =  e_2*x+y*p_3+h_2

F21E2 =  toS oo

F21E3 =  R = symmetricRing(QQ,3,GroupActing => "Sn")

F21E4 =  toE symmetricPower(2,e_2)

F22E0 =  A = schurRing(QQ,a,6);

F22E1 =  B = schurRing(A,b,3);

F22E2 =  symmetricRing B

F22E3 =  symmetricRing ZZ

F23E0 =  R = symmetricRing(QQ,7);

F23E1 =  cF = classFunction({3,2,1})

F23E2 =  toS(symmetricFunction(cF,R))

F24E0 =  R = schurRing(QQ,r,6);

F24E1 =  schurRing R

F24E2 =  Q = symmetricRing(QQ,3);

F24E3 =  A = schurRing Q;

F24E4 =  schurRing Q

F25E0 =  R = symmetricRing(QQ,4);

F25E1 =  R.pVariable 2

F26E0 =  R = symmetricRing(QQ,5,EHPVariables => (a,b,c));

F26E1 =  R.eVariable 3

F27E0 =  ch1 = new ClassFunction from {{3,2} => 2, {2,2,1} => -2, {3,1,1} => 2, {5} => 1};

F27E1 =  ch2 = new ClassFunction from {{2,2,1} => -2, {5} => 1, {1,1,1,1,1} => 5, {3,2} => 3, {4,1} => -2};

F27E2 =  scalarProduct(ch1,ch2)

F28E0 =  S = schurRing(s,5)

F28E1 =  a = s_{3,2,1}

F28E2 =  instance(a,SchurRingElement)

F28E3 =  T = schurRing(S,t,3,GroupActing => "Sn")

F28E4 =  b = t_{2,1}+t_3

F28E5 =  instance(a*b,SchurRingElement)

F29E0 =  R = symmetricRing(QQ,10);

F29E1 =  S = schurRing(QQ,s,10);

F29E2 =  scalarProduct(h_1^10,s_{4,3,2,1})

F30E0 =  S = schurRing(s,5);

F30E1 =  ch = classFunction s_(3,1,1)

F30E2 =  degree ch

F31E0 =  R = symmetricRing(QQ,6);

F31E1 =  S = schurRing(QQ,s,6);

F31E2 =  toE(h_3**e_3)

F31E3 =  Q = schurRing(QQ,q,6);

F31E4 =  internalProduct(s_{3,3},q_{4,2})

F32E0 =  S = schurRing(QQ,s,4,EHPVariables => (getSymbol"a",getSymbol"b",getSymbol"c"));

F32E1 =  R = symmetricRing S

F32E2 =  epol = toE s_{2,2,2}

F32E3 =  toS epol

F33E0 =  S = schurRing(QQ,s,4)

F33E1 =  Q = schurRing(QQ,q,4,GroupActing => "Sn")

F33E2 =  s_{3,2,1}

F33E3 =  s_(3,2,1)

F33E4 =  q_4

F33E5 =  Q_{2,2}

F33E6 =  S_5

F33E7 =  dim s_{3,2,1}

F33E8 =  s_{3,2,1} * s_{1,1}

F33E9 =  q_{2,1} * q_{2,1}

F33E10 =  listForm (s_{3})^2

F33E11 =  q_{2,1} * q_{2,1}

F33E12 =  listForm oo

F34E0 =  S = schurRing(QQ,s,3);

F34E1 =  classFunction(s_{2,1})

F34E2 =  S = schurRing(QQ,s,5);

F34E3 =  classFunction(s_{1,1,1,1,1})

F34E4 =  R = symmetricRing(QQ,3);

F34E5 =  cF = new ClassFunction from {{1,1,1} => 2, {3} => -1};

F34E6 =  sF = symmetricFunction(cF,R)

F34E7 =  toS sF

F34E8 =  classFunction sF

F34E9 =  S = schurRing(QQ,s,4);

F34E10 =  c1 = classFunction(S_{2,1,1}-S_{4});

F34E11 =  c2 = classFunction(S_{3,1});

F34E12 =  c1 + c2

F34E13 =  c1 * c2

F34E14 =  3*c1 - c2*2

F35E0 =  R = symmetricRing(QQ,5);

F35E1 =  S = schurRing(QQ,s,3);

F35E2 =  internalProduct(h_3,s_{2,1})

F35E3 =  toE(h_3 ** e_3)

F35E4 =  R = symmetricRing(QQ,5);

F35E5 =  toH internalProduct(e_3,e_3)

F36E0 =  R = symmetricRing 7;

F36E1 =  toE(h_3*e_3)

F36E2 =  S = schurRing(s,4)

F36E3 =  toE S_{3,2,1}

F36E4 =  R = schurRing(r, 4, EHPVariables => (a,b,c));

F36E5 =  S = schurRing(R, s, 2, EHPVariables => (x,y,z));

F36E6 =  T = schurRing(S, t, 3);

F36E7 =  A = symmetricRing T;

F36E8 =  f = (r_1+s_1+t_1)^2

F36E9 =  toE f

F37E0 =  R = symmetricRing(QQ,4);

F37E1 =  fs = toS(e_1*h_2+p_3)

F37E2 =  S = schurRing(s,2);

F37E3 =  toS(fs,S)

F37E4 =  R = symmetricRing(4, EHPVariables => (a,b,c), SVariable => r);

F37E5 =  S = symmetricRing(R, 2, EHPVariables => (x,y,z), SVariable => s);

F37E6 =  T = symmetricRing(S, 3, SVariable => t);

F37E7 =  A = schurRing T;

F37E8 =  f = a_3*x_2*e_1 - b_1*z_2*p_3

F37E9 =  toS f

F38E0 =  R = symmetricRing(QQ,2,EHPVariables => (x,y,z));

F38E1 =  R.hVariable 2

F39E0 =  R = symmetricRing 7;

F39E1 =  toP(h_3*e_3)

F39E2 =  S = schurRing(s,4)

F39E3 =  toP S_{3,2,1}

F39E4 =  R = schurRing(r, 4, EHPVariables => (a,b,c));

F39E5 =  S = schurRing(R, s, 2, EHPVariables => (x,y,z));

F39E6 =  T = schurRing(S, t, 3);

F39E7 =  A = symmetricRing T;

F39E8 =  f = (r_1+s_1+t_1)^2

F39E9 =  toP f

F40E0 =  S = schurRing(ZZ[x],s,4);

F40E1 =  coefficientRing S

F40E2 =  A = schurRing(QQ,a,3);

F40E3 =  B = schurRing(A,b,2);

F40E4 =  coefficientRing B

exampleIDS = {"F0E0", "F0E1", "F0E2", "F0E3", "F1E0", "F1E1", "F1E2", "F1E3", "F1E4", "F1E5", "F1E6", "F1E7", "F2E0", "F2E1", "F2E2", "F2E3", "F2E4", "F2E5", "F2E6", "F2E7", "F2E8", "F3E0", "F3E1", "F3E2", "F3E3", "F3E4", "F3E5", "F3E6", "F3E7", "F3E8", "F3E9", "F4E0", "F4E1", "F4E2", "F4E3", "F5E0", "F5E1", "F5E2", "F5E3", "F6E0", "F6E1", "F6E2", "F6E3", "F7E0", "F7E1", "F7E2", "F7E3", "F7E4", "F7E5", "F7E6", "F7E7", "F7E8", "F7E9", "F7E10", "F7E11", "F7E12", "F7E13", "F7E14", "F7E15", "F7E16", "F7E17", "F7E18", "F8E0", "F8E1", "F8E2", "F8E3", "F8E4", "F8E5", "F8E6", "F8E7", "F9E0", "F9E1", "F10E0", "F10E1", "F10E2", "F10E3", "F10E4", "F10E5", "F11E0", "F11E1", "F11E2", "F11E3", "F12E0", "F12E1", "F12E2", "F12E3", "F12E4", "F12E5", "F12E6", "F12E7", "F12E8", "F12E9", "F12E10", "F12E11", "F12E12", "F12E13", "F12E14", "F12E15", "F12E16", "F12E17", "F12E18", "F12E19", "F12E20", "F12E21", "F12E22", "F12E23", "F12E24", "F12E25", "F12E26", "F12E27", "F12E28", "F12E29", "F12E30", "F12E31", "F12E32", "F12E33", "F12E34", "F12E35", "F12E36", "F12E37", "F12E38", "F12E39", "F12E40", "F12E41", "F12E42", "F12E43", "F12E44", "F12E45", "F12E46", "F12E47", "F12E48", "F13E0", "F13E1", "F13E2", "F13E3", "F13E4", "F13E5", "F14E0", "F14E1", "F14E2", "F14E3", "F14E4", "F14E5", "F14E6", "F15E0", "F15E1", "F15E2", "F15E3", "F16E0", "F16E1", "F16E2", "F17E0", "F17E1", "F17E2", "F17E3", "F17E4", "F17E5", "F18E0", "F18E1", "F18E2", "F18E3", "F19E0", "F19E1", "F19E2", "F19E3", "F20E0", "F20E1", "F20E2", "F20E3", "F20E4", "F20E5", "F20E6", "F20E7", "F20E8", "F20E9", "F20E10", "F20E11", "F20E12", "F20E13", "F20E14", "F20E15", "F20E16", "F21E0", "F21E1", "F21E2", "F21E3", "F21E4", "F22E0", "F22E1", "F22E2", "F22E3", "F23E0", "F23E1", "F23E2", "F24E0", "F24E1", "F24E2", "F24E3", "F24E4", "F25E0", "F25E1", "F26E0", "F26E1", "F27E0", "F27E1", "F27E2", "F28E0", "F28E1", "F28E2", "F28E3", "F28E4", "F28E5", "F29E0", "F29E1", "F29E2", "F30E0", "F30E1", "F30E2", "F31E0", "F31E1", "F31E2", "F31E3", "F31E4", "F32E0", "F32E1", "F32E2", "F32E3", "F33E0", "F33E1", "F33E2", "F33E3", "F33E4", "F33E5", "F33E6", "F33E7", "F33E8", "F33E9", "F33E10", "F33E11", "F33E12", "F34E0", "F34E1", "F34E2", "F34E3", "F34E4", "F34E5", "F34E6", "F34E7", "F34E8", "F34E9", "F34E10", "F34E11", "F34E12", "F34E13", "F34E14", "F35E0", "F35E1", "F35E2", "F35E3", "F35E4", "F35E5", "F36E0", "F36E1", "F36E2", "F36E3", "F36E4", "F36E5", "F36E6", "F36E7", "F36E8", "F36E9", "F37E0", "F37E1", "F37E2", "F37E3", "F37E4", "F37E5", "F37E6", "F37E7", "F37E8", "F37E9", "F38E0", "F38E1", "F39E0", "F39E1", "F39E2", "F39E3", "F39E4", "F39E5", "F39E6", "F39E7", "F39E8", "F39E9", "F40E0", "F40E1", "F40E2", "F40E3", "F40E4"}
