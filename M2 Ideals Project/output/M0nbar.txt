needsPackage "M0nbar"

F0E0 =  L1= { {{1,3},1}, {{1,4},2}};

F0E1 =  D1=divisorClassRepresentativeM0nbar(6,L1);

F0E2 =  L2= { {{1,2},7}, {{1,3},2}, {{2,3,5,6},1}};

F0E3 =  D2=divisorClassRepresentativeM0nbar(6,L2);

F0E4 =  D1-D2

F1E0 =  L1= { {{1,3},1}, {{1,4},2}};

F1E1 =  D1=divisorClassRepresentativeM0nbar(6,L1);

F1E2 =  3*D1

F2E0 =  L1= { {{{1,2},{3},{4},{5}},1}, {{{1,3},{2},{4},{5}},1} };

F2E1 =  C1=curveClassRepresentativeM0nbar(5,L1);

F2E2 =  3*C1

F3E0 =  L= { {{{2,1},{3},{4},{5}},-2}, {{{1,3},{2},{4},{5}},-7}, {{{1,4},{2},{3},{5}},1}};

F3E1 =  C=curveClassRepresentativeM0nbar(5,L);

F3E2 =  negativeSum C

F4E0 =  L1= {{{1, 2}, {3}, {4}, {5}} => 2, {{1}, {2, 5}, {3}, {4}} => -1, {{1, 4}, {2}, {3}, {5}} => -1, {{1}, {2}, {3}, {4, 5}} => 1};

F4E1 =  C1=curveClassRepresentativeM0nbar(5,L1);

F4E2 =  seekEffectiveExpression(C1)

F5E0 =  L1= { {{{1,2},{3},{4},{5}},1}, {{{1,3},{2},{4},{5}},1} };

F5E1 =  C1=curveClassRepresentativeM0nbar(5,L1);

F5E2 =  L2= { {{{2,1},{3},{4},{5}},2}, {{{1,4},{2},{3},{5}},1} };

F5E3 =  C2=curveClassRepresentativeM0nbar(5,L2);

F5E4 =  C1-C2

F6E0 =  L= { {{1,2},7}, {{1,3},2}, {{2,3,5,6},1}};

F6E1 =  D=divisorClassRepresentativeM0nbar(6,L);

F6E2 =  tex D

F7E0 =  L= { {{{1},{2},{3},{4,5}},-1}, {{{1},{2,5},{3},{4}},1}, {{{1,4},{2},{3},{5}},1},{{{1,3},{2},{4},{5}},1}};

F7E1 =  C=curveClassRepresentativeM0nbar(5,L);

F7E2 =  tex C

F8E0 =  H1=new HashTable from { {{1,3},1}, {{1,4},1} };

F8E1 =  divisorClassRepresentativeM0nbar(6,H1)

F8E2 =  H=new HashTable from { {{1,3},1}, {{1,4},1}, {{1,3},2}}

F8E3 =  L= { {{1,3},1}, {{1,4},1}, {{1,3},2}}

F8E4 =  divisorClassRepresentativeM0nbar(6,L)

F9E0 =  L1= { {{{2,1},{3},{4},{5}},-2}, {{{1,3},{2},{4},{5}},-7}, {{{1,4},{2},{3},{5}},1}};

F9E1 =  C1=curveClassRepresentativeM0nbar(5,L1);

F9E2 =  isEffectiveExpression(C1)

F9E3 =  L2={ {{{2,1},{3},{4},{5}},2}, {{{1,3},{2},{4},{5}},7}, {{{1,4},{2},{3},{5}},1}};

F9E4 =  C2=curveClassRepresentativeM0nbar(5,L2);

F9E5 =  isEffectiveExpression(C2)

F10E0 =  L1= { {{1,3},1}, {{1,4},2}};

F10E1 =  D1=divisorClassRepresentativeM0nbar(6,L1);

F10E2 =  L2={ {{1,2},7}, {{1,3},2}, {{2,3,5,6},1}};

F10E3 =  D2=divisorClassRepresentativeM0nbar(6,L2);

F10E4 =  D1+D2

F11E0 =  L= { {{{1,2},{3},{4},{5}},1}, {{{1,3},{2},{4},{5}},1} };

F11E1 =  curveClassRepresentativeM0nbar(5,L)

F12E0 =  L1={ {{{2,1},{3},{4},{5}},-2}, {{{1,3},{2},{4},{5}},-7}, {{{1,4},{2},{3},{5}},1}};

F12E1 =  C=curveClassRepresentativeM0nbar(5,L1);

F12E2 =  L2={ {{1,3},1}, {{1,4},1}};

F12E3 =  D=divisorClassRepresentativeM0nbar(5,L2);

F12E4 =  intersection(C,D)

F13E0 =  L1={ {{{1,2},{3},{4},{5}},1}, {{{1,3},{2},{4},{5}},1}};

F13E1 =  C1=curveClassRepresentativeM0nbar(5,L1);

F13E2 =  L2={ {{{1},{2},{3},{4,5}},-1}, {{{1},{2,5},{3},{4}},1}, {{{1,4},{2},{3},{5}},1},{{{1,3},{2},{4},{5}},1}};

F13E3 =  C2=curveClassRepresentativeM0nbar(5,L2);

F13E4 =  isEquivalent(C1,C2)

F14E0 =  L= {{1,2}=>1};

F14E1 =  D=divisorClassRepresentativeM0nbar(5,L);

F14E2 =  writeDivisorInNonadjacentBasis(D)

F14E3 =  L= {{1,5,6}=>1};

F14E4 =  D=divisorClassRepresentativeM0nbar(6,L);

F14E5 =  writeDivisorInNonadjacentBasis(D)

F15E0 =  L1= { {{1,2},1}};

F15E1 =  D1=divisorClassRepresentativeM0nbar(5,L1);

F15E2 =  L2={ {{1,3},1}, {{2,4},1}, {{3,4},-1} };

F15E3 =  D2=divisorClassRepresentativeM0nbar(5,L2);

F15E4 =  isEquivalent(D1,D2)

F16E0 =  B7=singletonSpineBasis(7)

F17E0 =  L1={ {{{2,1},{3},{4},{5}},-2}, {{{1,3},{2},{4},{5}},-7}, {{{1,4},{2},{3},{5}},1}};

F17E1 =  C=curveClassRepresentativeM0nbar(5,L1);

F17E2 =  L2={ {{1,3},1}, {{1,4},1}};

F17E3 =  D=divisorClassRepresentativeM0nbar(5,L2);

F17E4 =  intersection(D,C)

F18E0 =  L1= { {{3,1},-1}, {{1,4},1} };

F18E1 =  D1=divisorClassRepresentativeM0nbar(6,L1)

F18E2 =  isEffectiveExpression(D1)

F18E3 =  L2= { {{3,1},1}, {{1,4},1} };

F18E4 =  D2=divisorClassRepresentativeM0nbar(6,L2)

F18E5 =  isEffectiveExpression(D2)

F19E0 =  B5=nonadjacentBasis(5)

F19E1 =  print toString B5

F19E2 =  B6=nonadjacentBasis(6)

F19E3 =  print toString B6

F20E0 =  L1={ {{{1,2},{3},{4},{5}},1}, {{{1,3},{2},{4},{5}},1}};

F20E1 =  C=curveClassRepresentativeM0nbar(5,L1);

F20E2 =  writeCurveInDualNonadjacentBasis(C)

F21E0 =  L1= { {{1,3},1}, {{1,4},1} }

F21E1 =  divisorClassRepresentativeM0nbar(6,L1)

F21E2 =  L2= { {1,3}=>1, {1,4}=>1 }

F21E3 =  divisorClassRepresentativeM0nbar(6,L2)

F21E4 =  L3={ {{1,3},1}, {{1,4},1}, {{3,1},1} };

F21E5 =  divisorClassRepresentativeM0nbar(6,L3)

F21E6 =  L4= { {{1,3},1}, {{1,4},1}, {{2,4,5,6},1} };

F21E7 =  divisorClassRepresentativeM0nbar(6,L4)

F21E8 =  L5= { {{1,3},1}, {{1,4},1}, {{4,5,6},1} };

F21E9 =  divisorClassRepresentativeM0nbar(6,L5)

F21E10 =  L6= { {{1,3},1}, {{1,4},1}, {{4,5,6},1},{{1,2,3},-1} };

F21E11 =  divisorClassRepresentativeM0nbar(6,L6)

F22E0 =  C1=KeelRelationAmongCurves({{1},{2},{3},{4},{5}})

F22E1 =  L={  };

F22E2 =  C2=curveClassRepresentativeM0nbar(5,L);

F22E3 =  isEquivalent(C1,C2)

F23E0 =  L= { {{1,3},1}, {{1,4},-3}};

F23E1 =  D=divisorClassRepresentativeM0nbar(5,L);

F23E2 =  permute({5,2,1,3,4}, D)

F24E0 =  L1= { {{{2,1},{3},{4},{5}},-2}, {{{1,3},{2},{4},{5}},-7}, {{{1,4},{2},{3},{5}},1}};

F24E1 =  C=curveClassRepresentativeM0nbar(5,L1);

F24E2 =  L2=new HashTable from { {{1,3},1}, {{1,4},1}};

F24E3 =  D=divisorClassRepresentativeM0nbar(5,L2);

F24E4 =  intersection(C,D)

F25E0 =  L1= { {{{1,2},{3},{4},{5}},1}, {{{1,3},{2},{4},{5}},1} };

F25E1 =  C1=curveClassRepresentativeM0nbar(5,L1);

F25E2 =  L2= { {{{2,1},{3},{4},{5}},2}, {{{1,4},{2},{3},{5}},1} };

F25E3 =  C2=curveClassRepresentativeM0nbar(5,L2);

F25E4 =  C1+C2

F26E0 =  H=new HashTable from { {{1,3},1}, {{1,4},1} };

F26E1 =  divisorClassRepresentativeM0nbar(6,H)

F27E0 =  L= { {{1,2},{3,4},{5,6},{7,8}}=>1 };

F27E1 =  C=curveClassRepresentativeM0nbar(8,L);

F27E2 =  writeCurveInSingletonSpineBasis(C)

F28E0 =  L= { {{1,2},{3,4},{5,6},{7,8}}=>1 };

F28E1 =  C=curveClassRepresentativeM0nbar(8,L);

F28E2 =  v=writeCurveInDualNonadjacentBasis(C);

F28E3 =  writeCurveInSingletonSpineBasis(8,v)

F29E0 =  L1= { {{{1,2},{3},{4},{5}},1}, {{{1,3},{2},{4},{5}},1} };

F29E1 =  curveClassRepresentativeM0nbar(5,L1)

F29E2 =  L2= { {{1,2},{3},{4},{5}}=>1, {{1,3},{2},{4},{5}}=>1 };

F29E3 =  curveClassRepresentativeM0nbar(5,L2)

F29E4 =  L3={ {{{1,2},{3},{4},{5}},1}, {{{1,3},{2},{4},{5}},1}, {{{3},{4},{2,1},{5}},1}};

F29E5 =  curveClassRepresentativeM0nbar(5,L3)

F29E6 =  L4={ {{{1,2},{3},{4},{5}},1}, {{{1,3},{2},{4},{5}},1}, {{{3},{4},{2,1},{5}},-1}};

F29E7 =  curveClassRepresentativeM0nbar(5,L4)

F30E0 =  L= { {{{2,1},{3},{4},{5}},-2}, {{{1,3},{2},{4},{5}},-7}, {{{1,4},{2},{3},{5}},1}};

F30E1 =  C=curveClassRepresentativeM0nbar(5,L);

F30E2 =  permute({5,2,1,3,4}, C)

F31E0 =  H1=new HashTable from { {{{1,2},{3},{4},{5}},1}, {{{1,3},{2},{4},{5}},1} };

F31E1 =  curveClassRepresentativeM0nbar(5,H1)

F31E2 =  H=new HashTable from { {{{1,2},{3},{4},{5}},1}, {{{1,3},{2},{4},{5}},1}, {{{1,2},{3},{4},{5}},2}}

F31E3 =  L= { {{{1,2},{3},{4},{5}},1}, {{{1,3},{2},{4},{5}},1}, {{{1,2},{3},{4},{5}},2}}

F31E4 =  curveClassRepresentativeM0nbar(5,L)

F32E0 =  Fcurves(6)

F33E0 =  FcurvesOfGivenShape(2,2,1,1)

exampleIDS = {"F0E0", "F0E1", "F0E2", "F0E3", "F0E4", "F1E0", "F1E1", "F1E2", "F2E0", "F2E1", "F2E2", "F3E0", "F3E1", "F3E2", "F4E0", "F4E1", "F4E2", "F5E0", "F5E1", "F5E2", "F5E3", "F5E4", "F6E0", "F6E1", "F6E2", "F7E0", "F7E1", "F7E2", "F8E0", "F8E1", "F8E2", "F8E3", "F8E4", "F9E0", "F9E1", "F9E2", "F9E3", "F9E4", "F9E5", "F10E0", "F10E1", "F10E2", "F10E3", "F10E4", "F11E0", "F11E1", "F12E0", "F12E1", "F12E2", "F12E3", "F12E4", "F13E0", "F13E1", "F13E2", "F13E3", "F13E4", "F14E0", "F14E1", "F14E2", "F14E3", "F14E4", "F14E5", "F15E0", "F15E1", "F15E2", "F15E3", "F15E4", "F16E0", "F17E0", "F17E1", "F17E2", "F17E3", "F17E4", "F18E0", "F18E1", "F18E2", "F18E3", "F18E4", "F18E5", "F19E0", "F19E1", "F19E2", "F19E3", "F20E0", "F20E1", "F20E2", "F21E0", "F21E1", "F21E2", "F21E3", "F21E4", "F21E5", "F21E6", "F21E7", "F21E8", "F21E9", "F21E10", "F21E11", "F22E0", "F22E1", "F22E2", "F22E3", "F23E0", "F23E1", "F23E2", "F24E0", "F24E1", "F24E2", "F24E3", "F24E4", "F25E0", "F25E1", "F25E2", "F25E3", "F25E4", "F26E0", "F26E1", "F27E0", "F27E1", "F27E2", "F28E0", "F28E1", "F28E2", "F28E3", "F29E0", "F29E1", "F29E2", "F29E3", "F29E4", "F29E5", "F29E6", "F29E7", "F30E0", "F30E1", "F30E2", "F31E0", "F31E1", "F31E2", "F31E3", "F31E4", "F32E0", "F33E0"}
