needsPackage "Truncations"

F0E0 =  R = ZZ/101[a..c];

F0E1 =  truncate(2, R)

F0E2 =  truncate(2, R^1)

F0E3 =  truncate(2, R^{0,-3})

F0E4 =  A = ZZ[x,y,z];

F0E5 =  truncate(2, ideal(3*x, 5*y, 15))

F0E6 =  S = ZZ/101[x,y,z, Degrees => {{1,3},{1,4},{1,0}}];

F0E7 =  trunc = truncate({7,24}, S^1 ++ S^{{-8,-20}})

F0E8 =  degrees trunc

F0E9 =  S = ZZ/101[x,y,z, Degrees => {{1,3},{1,4},{1,0}}];

F0E10 =  trunc = truncate({{3,0}, {0,1}}, S^1 ++ S^{{-8,-20}})

F0E11 =  degrees trunc

F0E12 =  B = R[x,y,z, Join => false];

F0E13 =  degrees B

F0E14 =  truncate(2, B^1)

F0E15 =  truncate(4, ideal(b^2*y,x^3))

F0E16 =  A1 = ZZ/101[a,b,c, Degrees => {3:{}}];

F0E17 =  degrees A1

F0E18 =  B1 = A1[x,y];

F0E19 =  degrees B1

F0E20 =  truncate(2, B1^1)

F0E21 =  truncate(2, ideal(a^3*x, b*y^2))

F1E0 =  R = ZZ/101[a..d, Degrees => {{1,3},{1,0},{1,3},{1,2}}];

F1E1 =  I = ideal "a,b2,c3,d4"

F1E2 =  C = res I

F1E3 =  g1 = truncate({1,1}, C.dd_1)

F1E4 =  g2 = truncate({1,1}, C.dd_2)

F1E5 =  g3 = truncate({1,1}, C.dd_3)

F1E6 =  g4 = truncate({1,1}, C.dd_4)

F1E7 =  D = chainComplex {g1, g2, g3, g4}

F1E8 =  prune HH D

F1E9 =  HH_0 D == truncate({1,1}, comodule ideal"a,b2,c3,d4")

F2E0 =  R = ZZ/101[a..d, Degrees => {1,2,3,4}];

F2E1 =  truncate(4, ideal"a3,b3")

F2E2 =  needsPackage "NormalToricVarieties";

F2E3 =  dP6 = smoothFanoToricVariety(2, 4);

F2E4 =  S = ring dP6;

F2E5 =  M = S^{-{0,0,1,0}};

F2E6 =  N = truncate({0,0,0,0}, M)

F2E7 =  N == coker truncate({0,0,0,0}, presentation M)

F2E8 =  R = ZZ/101[a..d, Degrees => {2:{1,0},{0,1},{-3,1}}];

F2E9 =  M = R^1/ideal d

F2E10 =  N = truncate({0,0}, M)

F2E11 =  isSubset(M, N)

exampleIDS = {"F0E0", "F0E1", "F0E2", "F0E3", "F0E4", "F0E5", "F0E6", "F0E7", "F0E8", "F0E9", "F0E10", "F0E11", "F0E12", "F0E13", "F0E14", "F0E15", "F0E16", "F0E17", "F0E18", "F0E19", "F0E20", "F0E21", "F1E0", "F1E1", "F1E2", "F1E3", "F1E4", "F1E5", "F1E6", "F1E7", "F1E8", "F1E9", "F2E0", "F2E1", "F2E2", "F2E3", "F2E4", "F2E5", "F2E6", "F2E7", "F2E8", "F2E9", "F2E10", "F2E11"}
