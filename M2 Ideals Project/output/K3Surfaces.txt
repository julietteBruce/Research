needsPackage "K3Surfaces"

F0E0 =  S = K3(5,2,-2)

F0E1 =  degree(S,2,1)

F1E0 =  X = mukaiModel 9;

F1E1 =  (degree X, sectionalGenus X)

F1E2 =  parametrize X

F2E0 =  K3 9

F3E0 =  K3(6,1,-2)

F4E0 =  S = K3(3,1,-2)

F4E1 =  f = map(S,2,1);

F4E2 =  isMorphism f

F4E3 =  degree f

F4E4 =  assert(image f == S(2,1))

F5E0 =  S = K3(3,5,-2);

F5E1 =  S(1,1)

F5E2 =  T = K3 S(1,1)

F5E3 =  T(1,0)

F6E0 =  K3("11",Verbose=>true)

F6E1 =  S = K3(5,5,-2)

F6E2 =  S(1,2)

F6E3 =  K3 S(1,2)

F7E0 =  S = K3(5,2,-2)

F7E1 =  genus(S,2,1)

F8E0 =  S = K3(5,2,-2)

F8E1 =  S(1,0)

F8E2 =  S(2,1)

F9E0 =  K = ZZ/3331

F9E1 =  S = K3(5,2,-2,CoefficientRing=>K)

F9E2 =  coefficientRing S

F10E0 =  S = pentagonalK3 11

F10E1 =  S' = S(1,0);

F10E2 =  map(S',0,1)

F11E0 =  S = trigonalK3 11

F11E1 =  S' = S(1,0);

F11E2 =  map(S',0,1)

F12E0 =  X = specialFourfold "tau-quadric";

F12E1 =  K3 X

F12E2 =  associatedK3surface X

F13E0 =  S = tetragonalK3 11

F13E1 =  S' = S(1,0);

F13E2 =  map(S',0,1)

F14E0 =  S = K3(8,2,-2)

F14E1 =  project({5,3,1},S,2,1); -- (5th + 3rd + simple)-projection of S(2,1)

exampleIDS = {"F0E0", "F0E1", "F1E0", "F1E1", "F1E2", "F2E0", "F3E0", "F4E0", "F4E1", "F4E2", "F4E3", "F4E4", "F5E0", "F5E1", "F5E2", "F5E3", "F6E0", "F6E1", "F6E2", "F6E3", "F7E0", "F7E1", "F8E0", "F8E1", "F8E2", "F9E0", "F9E1", "F9E2", "F10E0", "F10E1", "F10E2", "F11E0", "F11E1", "F11E2", "F12E0", "F12E1", "F12E2", "F13E0", "F13E1", "F13E2", "F14E0", "F14E1"}
