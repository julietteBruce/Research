needsPackage "MonomialIntegerPrograms"

F5E0 =  R = QQ[x,y,z]

F5E1 =  bettiTablesWithHilbertFunction(L, R) --outputs unique tables matching the criteria

F5E2 =  bettiTablesWithHilbertFunction(L, R, Count => true) --tallies distinct ideals giving each table

F5E3 =  bettiTablesWithHilbertFunction(L, R, FirstBetti => 5) --only returns tables whose first total betti number is 5

F5E4 =  bettiTablesWithHilbertFunction(L, R, GradedBettis => {0, 0, 2, 2, 1}) --only returns tables whose first graded betti numbers match a given sequence

F5E5 =  bettiTablesWithHilbertFunction(L, R, BoundGenerators => 3)

F5E6 =  bettiTablesWithHilbertFunction(L, R, BoundGenerators => 3, Count => true)

F5E7 =  S = QQ[a..f]

F5E8 =  bettiTablesWithHilbertFunction({1, 6, 19, 45, 86}, S, SquareFree => true)

F5E9 =  bettiTablesWithHilbertFunction({1, 3, 6, 7, 6, 5, 4, 4, 4}, R, FirstBetti => 6, BoundGenerators => 5, Count => true)

F5E10 =  bettiTablesWithHilbertFunction({1, 4, 7, 10, 13}, S, SquareFree => true, FirstBetti => 5)

F5E11 =  bettiTablesWithHilbertFunction({1, 4, 7, 10, 13}, S, SquareFree => true, GradedBettis => {0, 2, 3, 1, 0})

exampleIDS = {"F5E0", "F5E1", "F5E2", "F5E3", "F5E4", "F5E5", "F5E6", "F5E7", "F5E8", "F5E9", "F5E10", "F5E11"}
