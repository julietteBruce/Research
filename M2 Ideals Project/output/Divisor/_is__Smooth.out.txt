needsPackage "Divisor"

F13E0 =  R = QQ[x, y, z];

F13E1 =  I = ideal(x * y - z^2 )

F13E2 =  isSmooth( I )

F13E3 =  R = QQ[x, y, u, v];

F13E4 =  I = ideal(x * y - u * v)

F13E5 =  isSmooth( I )

F13E6 =  R = QQ[x, y, z];

F13E7 =  J = ideal( x )

F13E8 =  isSmooth( J )

F13E9 =  R = QQ[x, y, z];

F13E10 =  I = ideal(x * y - z^2 )

F13E11 =  isSmooth(I)

F13E12 =  isSmooth(I, IsGraded => true)

F13E13 =  R = QQ[x, y, u, v];

F13E14 =  I = ideal(x * y - u * v)

F13E15 =  isSmooth(I)

F13E16 =  isSmooth(I, IsGraded => true)

exampleIDS = {"F13E0", "F13E1", "F13E2", "F13E3", "F13E4", "F13E5", "F13E6", "F13E7", "F13E8", "F13E9", "F13E10", "F13E11", "F13E12", "F13E13", "F13E14", "F13E15", "F13E16"}
