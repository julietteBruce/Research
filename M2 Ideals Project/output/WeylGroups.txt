needsPackage "WeylGroups"

F0E0 =  R=rootSystemE(6)

F0E1 =  p=halfSumOfRoots(R)

F0E2 =  isPositiveRoot(R,p)

F1E0 =  R = rootSystemB(4)

F1E1 =  r = simpleRoot(R,3)

F1E2 =  reflect(R,4,r)

F2E0 =  R=rootSystemD(5)

F2E1 =  P=parabolic(R,set{2,3,4,5})

F2E2 =  w=longestWeylGroupElement R

F2E3 =  w % P

F3E0 =  R=rootSystemA(3)

F3E1 =  P1=parabolic(R,set{1,2})

F3E2 =  P2=parabolic(R,set{1,2})

F3E3 =  P1==P2

F4E0 =  R=rootSystemE(6)

F4E1 =  P=parabolic(R,set{1,3})

F4E2 =  r1=simpleRoot(R,1)

F4E3 =  r2=simpleRoot(R,2)

F4E4 =  isRoot(R,P,r1)

F4E5 =  isRoot(R,P,r2)

F5E0 =  R=rootSystemE(6)++rootSystemA(4)++rootSystemB(3)++rootSystemA(4);

F5E1 =  D=dynkinDiagram(R);

F5E2 =  dynkinType(D)

F6E0 =  R=rootSystemE(8)

F6E1 =  r=addRoots(R,simpleRoot(R,1),simpleRoot(R,3))

F6E2 =  reflection(R,r)

F7E0 =  R=rootSystemE(6)

F7E1 =  P=parabolic(R,set{1,2,3,4,5})

F7E2 =  w=minimalRepresentative (P % (longestWeylGroupElement R))

F7E3 =  isMinimalRepresentative(P,w)

F8E0 =  R=rootSystemE(6)

F8E1 =  D=dynkinDiagram(R);

F8E2 =  rank(D)

F9E0 =  R=rootSystemE(6)

F9E1 =  D=dynkinDiagram(R)

F9E2 =  endVertices(D)

F10E0 =  halfSumOfRoots(rootSystemE(6))

F11E0 =  R=rootSystemE(6)

F11E1 =  P=parabolic(R,set{1,2,3,4,5})

F11E2 =  w=minimalRepresentative ((longestWeylGroupElement R) % P)

F11E3 =  isMinimalRepresentative(w,P)

F12E0 =  R=rootSystemD(5)

F12E1 =  P=parabolic(R,set{2,3,4,5})

F12E2 =  w=longestWeylGroupElement R

F12E3 =  w1=P % w

F12E4 =  w2=P % (reduce(R,{2,3})*w)

F12E5 =  w1==w2

F13E0 =  R1=rootSystemA(2)

F13E1 =  R2=rootSystemA(3)

F13E2 =  R1++R2

F14E0 =  parabolic(rootSystemA(5),set{1,2})

F15E0 =  R=rootSystemA(4)

F15E1 =  P=parabolic(R,set{1,2})

F15E2 =  positiveRoots(R,P)

F16E0 =  R=rootSystemA(4)

F16E1 =  M=cartanMatrix R

F16E2 =  p=weight(R,M_2)

F16E3 =  -2*p

F17E0 =  R=rootSystemA(3)

F17E1 =  P=parabolic(R,set{1,2})

F17E2 =  ZZ[x]

F17E3 =  poincareSeries(R,P,x)

F18E0 =  R=rootSystemA(3)

F18E1 =  L=aboveBruhat(neutralWeylGroupElement(R))

F18E2 =  apply(L,x->reducedDecomposition (x#0))

F19E0 =  reducedDecomposition longestWeylGroupElement rootSystemF4

F20E0 =  R=rootSystemA(4)

F20E1 =  P=parabolic(R,set{1,2,4})

F20E2 =  w=reduce(R,{3,2,4,3})

F20E3 =  d= P % w % P

F20E4 =  parabolic(d)

F21E0 =  R=rootSystemA(4)

F21E1 =  M=cartanMatrix R

F21E2 =  p1=weight(R,M_0)

F21E3 =  p2=weight(R,M_1)

F21E4 =  p1-p2

F22E0 =  R=rootSystemA(2)

F22E1 =  v=weight(R,{1,2})

F22E2 =  eval(R,v,1)

F23E0 =  coxeterLength longestWeylGroupElement rootSystemF4

F24E0 =  R=rootSystemA(2)

F24E1 =  r1=simpleRoot(R,1)

F24E2 =  r2=simpleRoot(R,2)

F24E3 =  r=addRoots(R,r1,r2)

F24E4 =  addRoots(R,r1,r)

F25E0 =  R = rootSystemB(4)

F25E1 =  r = simpleRoot(R,3)

F25E2 =  reflect(R,{1,2,3,4},r)

F26E0 =  R=rootSystemA(4)

F26E1 =  M=cartanMatrix R

F26E2 =  p=weight(R,M_2)

F26E3 =  -p

F27E0 =  R=rootSystemA(3)

F27E1 =  r=simpleRoot(R,1)

F27E2 =  2*r

F27E3 =  -1*r

F28E0 =  dynkinDiagram(rootSystemB(4))

F28E1 =  dynkinDiagram(rootSystemD(4))

F29E0 =  R=rootSystemF4

F29E1 =  P=parabolic(R,set{1,2,3})

F29E2 =  w=longestWeylGroupElement R

F29E3 =  c=P % (w % P)

F29E4 =  minimalRepresentative c

F30E0 =  R = rootSystemB(4)

F30E1 =  p = halfSumOfRoots(R)

F30E2 =  reflect(R,{1,2,3,4},p)

F31E0 =  positiveRoots(rootSystemA(3))

F32E0 =  R=rootSystemE(6)++rootSystemF4

F32E1 =  D=dynkinDiagram(R)

F32E2 =  connectedComponents(D)

F33E0 =  R=rootSystemA(3)

F33E1 =  P=parabolic(R,set {3})

F33E2 =  w1 = reduce(R,{2})

F33E3 =  w2 = reduce(R,{1,2,1,3,2})

F33E4 =  myInterval=intervalBruhat(w1 % P,w2 % P)

F33E5 =  myInterval#1

F34E0 =  R=rootSystemD(5)

F34E1 =  D1=dynkinDiagram(R)

F34E2 =  P=parabolic(R,set{1,3,4,5})

F34E3 =  D2=dynkinDiagram(D1,P)

F34E4 =  dynkinType(D2)

F35E0 =  listWeylGroupElements(rootSystemG2,4)

F36E0 =  T1=dynkinType(rootSystemB(2))

F36E1 =  T2=dynkinType(rootSystemA(3))

F36E2 =  T1++T2

F37E0 =  norm(rootSystemF4,simpleRoot(rootSystemF4,2))

F38E0 =  R=rootSystemB(4)++rootSystemA(6)

F38E1 =  dynkinType(R)

F39E0 =  R=rootSystemA(2)

F39E1 =  ZZ[x]

F39E2 =  poincareSeries(R,x)

F40E0 =  R=rootSystemA(2)

F40E1 =  L=toList(positiveRoots(R))

F40E2 =  v=weight(R,{1,2})

F40E3 =  eval(R,v,L#0)

F40E4 =  eval(R,v,L#1)

F40E5 =  eval(R,v,L#2)

F41E0 =  neutralWeylGroupElement rootSystemF4

F42E0 =  R=rootSystemA(2)

F42E1 =  v=weight(R,{1,2})

F42E2 =  scalarProduct(R,1,v)

F43E0 =  R=rootSystemC(4)

F43E1 =  w1=reduce(R,{1})

F43E2 =  w2=reduce(R,{2})

F43E3 =  w1*w2

F44E0 =  R=rootSystemA(4)

F44E1 =  M=cartanMatrix R

F44E2 =  p1=weight(R,M_0)

F44E3 =  p2=weight(R,M_1)

F44E4 =  p1+p2

F45E0 =  R=rootSystemA(3)

F45E1 =  L=underBruhat(longestWeylGroupElement(R))

F45E2 =  L1=apply(L,x->x#0)

F45E3 =  underBruhat(L1)

F46E0 =  R=rootSystemA(2)

F46E1 =  H=intervalBruhat(neutralWeylGroupElement R, longestWeylGroupElement R)

F46E2 =  ZZ[x]

F46E3 =  poincareSeries(H,x)

F47E0 =  R=rootSystemA(3)

F47E1 =  P=parabolic(R,set {3})

F47E2 =  w1 = reduce(R,{2})

F47E3 =  w2 = reduce(R,{1,2,1,3,2})

F47E4 =  myInterval=intervalBruhat(P % w1,P % w2)

F47E5 =  myInterval#1

F48E0 =  w=reduce(rootSystemE(6),{1,2,3})

F48E1 =  inverse w

F49E0 =  reduce(rootSystemF4,{1,2,3,4})

F50E0 =  R=rootSystemE(6)

F50E1 =  p=simpleRoot(R,1)

F50E2 =  isPositiveRoot(R,-p)

F50E3 =  isRoot(R,-p)

F51E0 =  longestWeylGroupElement rootSystemF4

F52E0 =  R=rootSystemA(3)

F52E1 =  L=aboveBruhat(neutralWeylGroupElement(R))

F52E2 =  L1=apply(L,x->x#0)

F52E3 =  aboveBruhat(L1)

F53E0 =  R=rootSystemA(3)

F53E1 =  cartanMatrix R

F54E0 =  rootSystemA(5)

F55E0 =  R=rootSystemD(5)

F55E1 =  w=reduce(R,{3})

F55E2 =  if isReflection(w) then whoseReflection(w)

F56E0 =  R=rootSystemA(3)

F56E1 =  w1 = reduce(R,{2})

F56E2 =  w2 = reduce(R,{1,2,1,3,2})

F56E3 =  myInterval=intervalBruhat(w1,w2)

F56E4 =  hasseDiagramToGraph(myInterval)

F56E5 =  hasseDiagramToGraph(myInterval,"labels"=>"reduced decomposition")

F57E0 =  R=rootSystemD(5)

F57E1 =  P=parabolic(R,set{2,3,4,5})

F57E2 =  Q=parabolic(R,set{1,2,3,4})

F57E3 =  w=longestWeylGroupElement R

F57E4 =  c = P % w

F57E5 =  c % Q

F58E0 =  R=rootSystemE(6)++rootSystemA(4)++rootSystemB(3)++rootSystemA(4);

F58E1 =  dynkinType(R)

F59E0 =  R = rootSystemB(4)

F59E1 =  p = halfSumOfRoots(R)

F59E2 =  reflect(R,4,p)

F60E0 =  rootSystem(dynkinType({{"A",2},{"D",4}}))

F61E0 =  rootSystemB(5)

F62E0 =  R=rootSystemA(3)

F62E1 =  w1=reduce(R,{3,1,2});

F62E2 =  w2=reduce(R,{1,2,3,2,1});

F62E3 =  isLtBruhat(w1,w2)

F63E0 =  R=rootSystemE(8)

F63E1 =  r1=simpleRoot(R,1)

F63E2 =  r2=simpleRoot(R,2)

F63E3 =  rootCoefficients(R,r1+r2)

F64E0 =  rootSystemC(5)

F65E0 =  D=dynkinType{{"A",5},{"E",6}}

F65E1 =  numberOfPositiveRoots(D)

F66E0 =  R=rootSystemA(2)

F66E1 =  eval(R,1,1)

F66E2 =  eval(R,1,2)

F67E0 =  R1=rootSystemA(5)

F67E1 =  dynkinDiagram(R1)

F67E2 =  R2=rootSystemF4

F67E3 =  dynkinDiagram(R2)

F68E0 =  R1=rootSystemD(4)

F68E1 =  P=parabolic(R1,set{1,3,4})

F68E2 =  R2=rootSystem(R1,P)

F68E3 =  dynkinType(R2)

F69E0 =  R=rootSystemD(5)

F69E1 =  P=parabolic(R,set{2,3,4,5})

F69E2 =  w=longestWeylGroupElement R

F69E3 =  P % w

F70E0 =  R=rootSystemD(5)

F70E1 =  w=reduce(R,{3})

F70E2 =  isReflection(w)

F71E0 =  numberOfPositiveRoots(rootSystemD(4))

F72E0 =  R=rootSystemE(6)

F72E1 =  P=parabolic(R,set{1,2,3,4,5})

F72E2 =  Q=parabolic(R,set{2,3,4,5,6})

F72E3 =  w=minimalRepresentative ((P % (longestWeylGroupElement R)) % Q)

F72E4 =  isMinimalRepresentative(P,w,Q)

F73E0 =  R1=rootSystemA(2)

F73E1 =  R2=rootSystemA(2)

F73E2 =  R1==R2

F74E0 =  R = rootSystemA(5)

F74E1 =  rank R

F75E0 =  R=rootSystemE(6)++rootSystemA(4)++rootSystemB(3)++rootSystemA(4);

F75E1 =  dynkinExponents(dynkinType(R))

F76E0 =  R=rootSystemF4

F76E1 =  L=reducedDecomposition longestWeylGroupElement R

F76E2 =  isReduced(R,L)

F76E3 =  L={1,1}

F76E4 =  isReduced(R,L)

F77E0 =  rootSystemD(5)

F78E0 =  w1=reduce(rootSystemD(5),{3})

F78E1 =  w1==inverse(w1)

F79E0 =  rootSystemE(6)

F80E0 =  R=rootSystemA(3)

F80E1 =  L=underBruhat(longestWeylGroupElement(R))

F80E2 =  apply(L,x->reducedDecomposition (x#0))

F81E0 =  R=rootSystemA(2)

F81E1 =  u=weight(R,{1,2})

F81E2 =  v=weight(R,{0,3})

F81E3 =  scalarProduct(R,u,v)

F82E0 =  R=rootSystemC(4)

F82E1 =  w=reduce(R,{1})

F82E2 =  r=simpleRoot(R,2)

F82E3 =  w*r

F83E0 =  R=rootSystemF4;

F83E1 =  longestWeylGroupElement(R,parabolic(R,set{1,2}))

F84E0 =  R=rootSystemD(5)

F84E1 =  P=parabolic(R,set{2,3,4,5})

F84E2 =  w=longestWeylGroupElement R

F84E3 =  w1=w % P

F84E4 =  w2=(w * reduce(R,{2,3})) % P

F84E5 =  w1==w2

F85E0 =  R=rootSystemD(5)

F85E1 =  P=parabolic(R,set{2,3,4,5})

F85E2 =  w=longestWeylGroupElement R

F85E3 =  c=w % P

F85E4 =  reduce(R,{1})*c

F86E0 =  R=rootSystemA(3)

F86E1 =  w=reduce(R,{1,2,1})

F86E2 =  isReduced({2,3},w)

F86E3 =  isReduced({1},w)

F87E0 =  R=rootSystemD(5)

F87E1 =  P=parabolic(R,set{2,3,4,5})

F87E2 =  Q=parabolic(R,set{1,2,3,4})

F87E3 =  w=longestWeylGroupElement R

F87E4 =  c = w % Q

F87E5 =  P % c

F88E0 =  R=rootSystemD(5)

F88E1 =  P=parabolic(R,set{2,3,4,5})

F88E2 =  w=longestWeylGroupElement R

F88E3 =  w1=P % (w % P)

F88E4 =  w2=P % ((reduce(R,{4}) * w * reduce(R,{2,3})) % P)

F88E5 =  w1==w2

F89E0 =  T1=dynkinType(rootSystemB(2))

F89E1 =  T2=dynkinType(rootSystemA(3))

F89E2 =  (T1++T2) == (T2++T1)

F89E3 =  (T1++T2) === (T2++T1)

F90E0 =  dynkinType({{"A",2},{"B",3}})

F90E1 =  dynkinType({{"A",2},{"B",1}})

F90E2 =  dynkinType({{"A",2},{"C",2}})

F90E3 =  dynkinType({{"A",2},{"D",2}})

F91E0 =  R1=rootSystemB(3)++rootSystemD(4)

F91E1 =  D=dynkinDiagram(R1)

F91E2 =  R2=rootSystem(D)

F91E3 =  R1==R2

F92E0 =  R=rootSystemE(6)

F92E1 =  rootCoefficients(R,halfSumOfRoots(R))

F93E0 =  R=rootSystemF4

F93E1 =  P=parabolic(R,set{1,2,3})

F93E2 =  w=longestWeylGroupElement R

F93E3 =  c=P % w

F93E4 =  minimalRepresentative c

F94E0 =  R=rootSystemB(3)

F94E1 =  weight(R,vector {1,2,1})

F95E0 =  w=reduce(rootSystemE(6),{1,2,3})

F95E1 =  w^10

F96E0 =  R=rootSystemA(3)

F96E1 =  w1 = reduce(R,{2,1,2})

F96E2 =  w2 = reduce(R,{1,2,1,3,2})

F96E3 =  myInterval=intervalBruhat(w1,w2)

F96E4 =  myInterval#1

F97E0 =  R=rootSystemA(2)

F97E1 =  L=toList(positiveRoots(R))

F97E2 =  eval(R,1,L#0)

F97E3 =  eval(R,1,L#1)

F97E4 =  eval(R,1,L#2)

F98E0 =  R=rootSystemF4

F98E1 =  P=parabolic(R,set{1,2,3})

F98E2 =  w=longestWeylGroupElement R

F98E3 =  c=w % P

F98E4 =  minimalRepresentative c

F99E0 =  R=rootSystemC(4)

F99E1 =  w=reduce(R,{1})

F99E2 =  p=halfSumOfRoots R

F99E3 =  w*p

F100E0 =  R=rootSystemD(5)

F100E1 =  P=parabolic(R,set{2,3,4,5})

F100E2 =  w=longestWeylGroupElement R

F100E3 =  c=P % w

F100E4 =  c*reduce(R,{1})

F101E0 =  simpleRoot(rootSystemE(6),2)

F102E0 =  R=rootSystemB(3)

F102E1 =  weight(R,{1,2,1})

F103E0 =  R=rootSystemA(2)

F103E1 =  scalarProduct(R,1,1)

F103E2 =  scalarProduct(R,1,2)

F103E3 =  scalarProduct(R,2,2)

exampleIDS = {"F0E0", "F0E1", "F0E2", "F1E0", "F1E1", "F1E2", "F2E0", "F2E1", "F2E2", "F2E3", "F3E0", "F3E1", "F3E2", "F3E3", "F4E0", "F4E1", "F4E2", "F4E3", "F4E4", "F4E5", "F5E0", "F5E1", "F5E2", "F6E0", "F6E1", "F6E2", "F7E0", "F7E1", "F7E2", "F7E3", "F8E0", "F8E1", "F8E2", "F9E0", "F9E1", "F9E2", "F10E0", "F11E0", "F11E1", "F11E2", "F11E3", "F12E0", "F12E1", "F12E2", "F12E3", "F12E4", "F12E5", "F13E0", "F13E1", "F13E2", "F14E0", "F15E0", "F15E1", "F15E2", "F16E0", "F16E1", "F16E2", "F16E3", "F17E0", "F17E1", "F17E2", "F17E3", "F18E0", "F18E1", "F18E2", "F19E0", "F20E0", "F20E1", "F20E2", "F20E3", "F20E4", "F21E0", "F21E1", "F21E2", "F21E3", "F21E4", "F22E0", "F22E1", "F22E2", "F23E0", "F24E0", "F24E1", "F24E2", "F24E3", "F24E4", "F25E0", "F25E1", "F25E2", "F26E0", "F26E1", "F26E2", "F26E3", "F27E0", "F27E1", "F27E2", "F27E3", "F28E0", "F28E1", "F29E0", "F29E1", "F29E2", "F29E3", "F29E4", "F30E0", "F30E1", "F30E2", "F31E0", "F32E0", "F32E1", "F32E2", "F33E0", "F33E1", "F33E2", "F33E3", "F33E4", "F33E5", "F34E0", "F34E1", "F34E2", "F34E3", "F34E4", "F35E0", "F36E0", "F36E1", "F36E2", "F37E0", "F38E0", "F38E1", "F39E0", "F39E1", "F39E2", "F40E0", "F40E1", "F40E2", "F40E3", "F40E4", "F40E5", "F41E0", "F42E0", "F42E1", "F42E2", "F43E0", "F43E1", "F43E2", "F43E3", "F44E0", "F44E1", "F44E2", "F44E3", "F44E4", "F45E0", "F45E1", "F45E2", "F45E3", "F46E0", "F46E1", "F46E2", "F46E3", "F47E0", "F47E1", "F47E2", "F47E3", "F47E4", "F47E5", "F48E0", "F48E1", "F49E0", "F50E0", "F50E1", "F50E2", "F50E3", "F51E0", "F52E0", "F52E1", "F52E2", "F52E3", "F53E0", "F53E1", "F54E0", "F55E0", "F55E1", "F55E2", "F56E0", "F56E1", "F56E2", "F56E3", "F56E4", "F56E5", "F57E0", "F57E1", "F57E2", "F57E3", "F57E4", "F57E5", "F58E0", "F58E1", "F59E0", "F59E1", "F59E2", "F60E0", "F61E0", "F62E0", "F62E1", "F62E2", "F62E3", "F63E0", "F63E1", "F63E2", "F63E3", "F64E0", "F65E0", "F65E1", "F66E0", "F66E1", "F66E2", "F67E0", "F67E1", "F67E2", "F67E3", "F68E0", "F68E1", "F68E2", "F68E3", "F69E0", "F69E1", "F69E2", "F69E3", "F70E0", "F70E1", "F70E2", "F71E0", "F72E0", "F72E1", "F72E2", "F72E3", "F72E4", "F73E0", "F73E1", "F73E2", "F74E0", "F74E1", "F75E0", "F75E1", "F76E0", "F76E1", "F76E2", "F76E3", "F76E4", "F77E0", "F78E0", "F78E1", "F79E0", "F80E0", "F80E1", "F80E2", "F81E0", "F81E1", "F81E2", "F81E3", "F82E0", "F82E1", "F82E2", "F82E3", "F83E0", "F83E1", "F84E0", "F84E1", "F84E2", "F84E3", "F84E4", "F84E5", "F85E0", "F85E1", "F85E2", "F85E3", "F85E4", "F86E0", "F86E1", "F86E2", "F86E3", "F87E0", "F87E1", "F87E2", "F87E3", "F87E4", "F87E5", "F88E0", "F88E1", "F88E2", "F88E3", "F88E4", "F88E5", "F89E0", "F89E1", "F89E2", "F89E3", "F90E0", "F90E1", "F90E2", "F90E3", "F91E0", "F91E1", "F91E2", "F91E3", "F92E0", "F92E1", "F93E0", "F93E1", "F93E2", "F93E3", "F93E4", "F94E0", "F94E1", "F95E0", "F95E1", "F96E0", "F96E1", "F96E2", "F96E3", "F96E4", "F97E0", "F97E1", "F97E2", "F97E3", "F97E4", "F98E0", "F98E1", "F98E2", "F98E3", "F98E4", "F99E0", "F99E1", "F99E2", "F99E3", "F100E0", "F100E1", "F100E2", "F100E3", "F100E4", "F101E0", "F102E0", "F102E1", "F103E0", "F103E1", "F103E2", "F103E3"}
