needsPackage "EagonResolution"

F0E0 =  S = ZZ/101[a,b]

F0E1 =  R = S/ideal"a2,b2"

F0E2 =  E = eagon(R,3)

F0E3 =  picture res E

F0E4 =  picture(res E, Transpose => true)

F1E0 =  S = ZZ/101[a,b,c]

F1E1 =  I = ideal(a,b,c)*ideal(b,c)

F1E2 =  R = S/I

F1E3 =  E = eagon(R,5)

F1E4 =  F = eagonResolution E

F1E5 =  assert(F == res E)

F1E6 =  F.dd_3

F1E7 =  picture(F.dd_3, Display => "DisplayBlocks")

F1E8 =  picture F.dd_3

F1E9 =  picture (F, Verbose => true)

F1E10 =  picture (F, Verbose => true, Transpose => true)

F2E0 =  S = ZZ/101[a,b,c,d,e]

F2E1 =  R = S/(ideal(e^2,d*e^4)+(ideal"ab,ac")^2) --a non-Golod ring, generators in different degrees

F2E2 =  E = eagon (R,5);

F2E3 =  picture E#{"dHor",3,0}

F2E4 =  mapComponent(E#{"dHor",3,0}, (0,{1}),(1,{1}))

F2E5 =  picture E#{"dVert",3,1}

F2E6 =  mapComponent(E#{"dVert",3,1}, (0,{2}),(0,{1,1}))

F2E7 =  picture E#{"eagonBeta",3,1}

F2E8 =  mapComponent(E#{"eagonBeta",3,1}, (0,{2}),(0,{1,1}))

F3E0 =  S = ZZ/101[x,y,z]

F3E1 =  R = S/((ideal(x,y))^2+ideal(z^3))

F3E2 =  E = eagon(R,5);

F3E3 =  F = verticalStrand(E,3)

F3E4 =  picture F

F4E0 =  R = ZZ/101[a,b]/ideal"a2,b2"

F4E1 =  E = eagon(R,4)

F4E2 =  C = resolution E

F4E3 =  picture C

F5E0 =  R = ZZ/101[x,y,z]/ideal"x3,y3,z3"

F5E1 =  E = eagon(R,4,CompressBeta =>true, Verbose =>true);

F6E0 =  R = ZZ/101[x,y]/ideal"x2,xy,y2"

F6E1 =  E = eagon(R,3)

F6E2 =  E === R.cache.EagonData

F7E0 =  S = ZZ/101[x,y,z]

F7E1 =  R = S/((ideal(x,y))^2+ideal(z^3))

F7E2 =  E = eagon(R,5);

F7E3 =  F = horizontalStrand(E,2)

F7E4 =  picture F

F8E0 =  S = ZZ/101[a,b,c]

F8E1 =  I = ideal(a,b,c)*ideal(b,c)

F8E2 =  R = S/I

F8E3 =  eagonResolution(R,5)

F9E0 =  S = ZZ/101[a,b,c]

F9E1 =  I = ideal(a,b)*ideal(a,b,c)

F9E2 =  R = S/I

F9E3 =  E = eagon(R,4);

F9E4 =  picture E

F9E5 =  picture E#{"eagonBeta",3,0}

F9E6 =  picture E

F9E7 =  picture verticalStrand(E,1)

F10E0 =  S = ZZ/101[a,b,c,d]

F10E1 =  I = ideal(a,b,c)*ideal(a,b,c,d)

F10E2 =  I = ideal"a3,b3,c3"

F10E3 =  R = S/I

F10E4 =  E = eagon(R,4);

F10E5 =  eagonBeta(E,4)

F10E6 =  eagonBeta(E,4,Display => "DisplayBlocks")

F10E7 =  eagonBeta(E,4,Display => "")

F10E8 =  eagonBeta E

F11E0 =  R = ZZ/101[a,b]/ideal"a2,b2"

F11E1 =  E = eagon(R,4)

F11E2 =  net E

F12E0 =  S = ZZ/101[a,b,c]

F12E1 =  I = ideal(a,b)*ideal"a3,b3,c3"

F12E2 =  R = S/I

F12E3 =  needsPackage "DGAlgebras"; isGolod R

F12E4 =  E = eagon(R,6)

F12E5 =  verticalStrand(E,3)

F12E6 =  horizontalStrand(E,2)

F12E7 =  horizontalStrand (E,0)

F12E8 =  F = eagonResolution E

F12E9 =  eagonBeta E

F12E10 =  eagon(R,-1)

F12E11 =  E = eagon(R,6, Verbose =>true)

F12E12 =  eagon(R,-1)

F12E13 =  En = eagon(R,6,CompressBeta => false)

F12E14 =  eagonBeta (E,4), eagonBeta(E,5)

F12E15 =  eagonBeta (En,4), eagonBeta(En,5)

F13E0 =  S = ZZ/101[a,b,c]

F13E1 =  I = ideal(a,b)*ideal(a,b,c)

F13E2 =  R = S/I

F13E3 =  E = eagon(R,4);

F13E4 =  C = horizontalStrand(E,0)

F13E5 =  picture C

F13E6 =  picture(C, Display => "DisplayBlocks")

F14E0 =  S = ZZ/101[a,b,c]

F14E1 =  I = (ideal(a,b,c^2))^2

F14E2 =  F = res(S^1/I)

F14E3 =  K = res coker vars S

F14E4 =  R = S/I

F14E5 =  E = eagon(R,6);

F14E6 =  golodBetti(F,K,6)

F14E7 =  betti res (coker vars R, LengthLimit => 6)

F14E8 =  betti eagonResolution E

F15E0 =  R = ZZ/101[x,y,z]/ideal"x3,y3,z3"

F15E1 =  E = eagon(R,5);

F15E2 =  eagonBeta(E,3)

F15E3 =  eagonBeta(E,3,Display =>"DisplayBlocks")

exampleIDS = {"F0E0", "F0E1", "F0E2", "F0E3", "F0E4", "F1E0", "F1E1", "F1E2", "F1E3", "F1E4", "F1E5", "F1E6", "F1E7", "F1E8", "F1E9", "F1E10", "F2E0", "F2E1", "F2E2", "F2E3", "F2E4", "F2E5", "F2E6", "F2E7", "F2E8", "F3E0", "F3E1", "F3E2", "F3E3", "F3E4", "F4E0", "F4E1", "F4E2", "F4E3", "F5E0", "F5E1", "F6E0", "F6E1", "F6E2", "F7E0", "F7E1", "F7E2", "F7E3", "F7E4", "F8E0", "F8E1", "F8E2", "F8E3", "F9E0", "F9E1", "F9E2", "F9E3", "F9E4", "F9E5", "F9E6", "F9E7", "F10E0", "F10E1", "F10E2", "F10E3", "F10E4", "F10E5", "F10E6", "F10E7", "F10E8", "F11E0", "F11E1", "F11E2", "F12E0", "F12E1", "F12E2", "F12E3", "F12E4", "F12E5", "F12E6", "F12E7", "F12E8", "F12E9", "F12E10", "F12E11", "F12E12", "F12E13", "F12E14", "F12E15", "F13E0", "F13E1", "F13E2", "F13E3", "F13E4", "F13E5", "F13E6", "F14E0", "F14E1", "F14E2", "F14E3", "F14E4", "F14E5", "F14E6", "F14E7", "F14E8", "F15E0", "F15E1", "F15E2", "F15E3"}
