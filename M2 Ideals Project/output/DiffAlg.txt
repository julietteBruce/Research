needsPackage "DiffAlg"

F0E0 =  w = newForm(2,1,2,"a")

F0E1 =  ring w

F1E0 =  w = newForm(2,1,3,"a")

F1E1 =  degree(w)

F1E2 =  X = newField(2,2,"b")

F1E3 =  degree X

F2E0 =  X = newField(2,2,"a")

F2E1 =  ring X

F3E0 =  w = newForm("2*x_0*dx_0+x_1^2*dx_1")

F3E1 =  r = radial 2

F3E2 =  projectivize w

F3E3 =  r_oo

F3E4 =  projectivize newField ("ax_0+x_1*ax_2+a*ax_1")  

F4E0 =  X = newField("3*x_0*ax_0+x_1*ax_1")

F4E1 =  Y = radial 3

F4E2 =  dist {X,Y}

F5E0 =  w=newForm(2,1,2,"a")

F5E1 =  newForm ("b*4-"|w|"+4*dx_3")

F6E0 =  w = newForm(2,1,2,"a")

F6E1 =  h = newForm(2,1,1,"b")

F6E2 =  w ^ h

F7E0 =  w = newForm(2,1,1,"a")

F7E1 =  h = newForm(3,2,1,"b")

F7E2 =  w - h

F8E0 =  w = random newForm(2,1,2,"a")

F8E1 =  h = random newForm(2,1,2,"a")

F8E2 =  linearComb({w,h},"a")

F8E3 =  random oo

F8E4 =  w = newForm(2,1,2,"a");

F8E5 =  h = random newForm(2,2,1,"a");

F8E6 =  L = genKer( (radial 2) _ w,w)

F8E7 =  wr = linearComb(L,"a")

F8E8 =  genKer(h ^ wr, wr)

F9E0 =  w = random newForm(2,1,2,"a")

F9E1 =  singularIdeal(w)

F9E2 =  w = random newForm(2,1,2,"a");

F9E3 =  r = radial 2;

F9E4 =  F = r_w

F9E5 =  degree F

F9E6 =  (gens singularIdeal F)_0_0

F10E0 =  random logarithmicForm(2,{1,1,2},"a")

F10E1 =  logarithmicForm(2,{1,1},"a",Projective => true)

F10E2 =  l = random logarithmicForm(2,{1,1},"a",Projective => true)

F10E3 =  (radial 2)_l

F11E0 =  X = newField("2*a*x_0*ax_1")

F11E1 =  ring X

F11E2 =  Y = newField("x_0*ax_2")

F11E3 =  ring Y

F11E4 =  X+Y

F11E5 =  ring (X+Y)

F11E6 =  Z = newField("ax_5")

F11E7 =  ring Z

F12E0 =  h = radial 2

F12E1 =  w = random newField(3,1,"a")

F12E2 =  w + h

F13E0 =  w = newForm("a * x_1 * dx_0 * dx_1")

F13E1 =  ring w

F13E2 =  z = newForm("x_0^2 * dx_2 - x_2^2 * dx_0")

F13E3 =  ring z

F13E4 =  w ^ z

F13E5 =  ring (w+z)

F13E6 =  v = newForm("dx_5")

F13E7 =  ring v

F14E0 =  w = newForm(2,1,2,"a")

F14E1 =  diff w

F14E2 =  moduliIdeal(diff w)

F15E0 =  F_0 = random newForm(1,0,1,"a");

F15E1 =  F_1 = random newForm(1,0,2,"a");

F15E2 =  F_2 = random newForm(1,0,1,"a");

F15E3 =  w = random newForm(2,2,1,"a")

F15E4 =  {F_0,F_1,F_2}*w

F16E0 =  l = logarithmicForm(2,{1,1},"a",Projective => true)

F16E1 =  (radial 2)_l

F17E0 =  X = random newField(2,2,"a")

F17E1 =  Y = random newField(2,2,"a")

F17E2 =  rank dist {X,Y}

F17E3 =  rank dist {X,Y,X+Y,X-Y}

F17E4 =  rank dist {X,Y,X|Y}

F18E0 =  w = newForm(2,1,2,"a")

F18E1 =  diff w

F19E0 =  X = newField("3*ax_0+x_1*ax_1")

F19E1 =  isHomogeneous X

F19E2 =  w = random logarithmicForm(2,{1,2},"a",Projective => true)

F19E3 =  isHomogeneous w

F20E0 =  w = newForm(2,1,1,"a")

F20E1 =  ring w

F21E0 =  w = newForm("dx_0 * dx_1")

F21E1 =  Y = newField("ax_0")

F21E2 =  Y _ w

F22E0 =  random newForm(2,2,1,"a")

F22E1 =  random(newField(2,2,"a"),QQ)

F22E2 =  random(newForm(2,2,1,"a"),Density => .2)

F22E3 =  random(newForm(2,2,1,"a"),Height => 100)

F23E0 =  w = newForm("2*x_0*dx_0+x_1^2*dx_1")

F23E1 =  homogenize w

F23E2 =  homogenize newField ("ax_0+x_1*ax_2+a*ax_1")  

F24E0 =  X = newField("3*x_0*ax_0+x_1*ax_1")

F24E1 =  Y = radial 3

F24E2 =  isInvolutive dist {X,Y}

F24E3 =  w = random logarithmicForm(2,{1,2},"a",Projective => true)

F24E4 =  X = newField(2,2,"a")

F24E5 =  D = genKer(X_w,X);

F24E6 =  #D

F24E7 =  isInvolutive dist D

F25E0 =  h = newForm(4,1,1,"a")

F25E1 =  R = radial 4

F25E2 =  T = genKer(R _ h,h)

F25E3 =  H = linearComb(T,"a")

F25E4 =  w = random logarithmicForm(4,{1,1},"a", Projective => true)

F25E5 =  genKer(w ^ (diff H) + (diff w) ^ H,H)

F25E6 =  w1 = random newForm(4,1,1,"a");

F25E7 =  w2 = random newForm(4,1,1,"a");

F25E8 =  w3 = w1 ^ w2;

F25E9 =  h = newForm(4,1,1,"a");

F25E10 =  last genKer(w1 ^ h - w3,h)

F26E0 =  h = newForm(2,1,2,"a")

F26E1 =  R = radial 2

F26E2 =  H = linearComb(genKer(R _ h, h),"a")

F26E3 =  genIm(diff H,H)

F26E4 =  w1=random newForm(2,1,2,"a");

F26E5 =  w2=random newForm(2,1,2,"a");

F26E6 =  w3=w1+w2;

F26E7 =  u=linearComb({w1,w2,w3},"a");

F26E8 =  genIm(u,u)

F26E9 =  #oo

F27E0 =  w = newForm(2,1,1,"a")

F27E1 =  R = radial 2

F27E2 =  ring w

F27E3 =  ring R

F28E0 =  radial 2

F29E0 =  X = random newField(2,1,"a")

F29E1 =  Y = random newField(2,1,"b")

F29E2 =  X | Y

F30E0 =  w = random logarithmicForm(2,{1,1},"a",Projective => true)

F30E1 =  I = singularIdeal w

F30E2 =  S = QQ[gens ring I]

F30E3 =  hilbertPolynomial (sub(I,S))

exampleIDS = {"F0E0", "F0E1", "F1E0", "F1E1", "F1E2", "F1E3", "F2E0", "F2E1", "F3E0", "F3E1", "F3E2", "F3E3", "F3E4", "F4E0", "F4E1", "F4E2", "F5E0", "F5E1", "F6E0", "F6E1", "F6E2", "F7E0", "F7E1", "F7E2", "F8E0", "F8E1", "F8E2", "F8E3", "F8E4", "F8E5", "F8E6", "F8E7", "F8E8", "F9E0", "F9E1", "F9E2", "F9E3", "F9E4", "F9E5", "F9E6", "F10E0", "F10E1", "F10E2", "F10E3", "F11E0", "F11E1", "F11E2", "F11E3", "F11E4", "F11E5", "F11E6", "F11E7", "F12E0", "F12E1", "F12E2", "F13E0", "F13E1", "F13E2", "F13E3", "F13E4", "F13E5", "F13E6", "F13E7", "F14E0", "F14E1", "F14E2", "F15E0", "F15E1", "F15E2", "F15E3", "F15E4", "F16E0", "F16E1", "F17E0", "F17E1", "F17E2", "F17E3", "F17E4", "F18E0", "F18E1", "F19E0", "F19E1", "F19E2", "F19E3", "F20E0", "F20E1", "F21E0", "F21E1", "F21E2", "F22E0", "F22E1", "F22E2", "F22E3", "F23E0", "F23E1", "F23E2", "F24E0", "F24E1", "F24E2", "F24E3", "F24E4", "F24E5", "F24E6", "F24E7", "F25E0", "F25E1", "F25E2", "F25E3", "F25E4", "F25E5", "F25E6", "F25E7", "F25E8", "F25E9", "F25E10", "F26E0", "F26E1", "F26E2", "F26E3", "F26E4", "F26E5", "F26E6", "F26E7", "F26E8", "F26E9", "F27E0", "F27E1", "F27E2", "F27E3", "F28E0", "F29E0", "F29E1", "F29E2", "F30E0", "F30E1", "F30E2", "F30E3"}
