needsPackage "Triangulations"

F0E0 =  A = transpose matrix {{0,3},{0,1},{-1,-1},{1,-1},{-4,-2},{4,-2}}

F0E1 =  Ts = allTriangulations A

F0E2 =  #Ts == 16

F0E3 =  netList Ts

F0E4 =  tri = Ts#0

F0E5 =  isWellDefined tri

F0E6 =  isRegularTriangulation tri

F0E7 =  Ts/isRegularTriangulation

F0E8 =  regularTriangulationWeights tri

F0E9 =  tally for tri in Ts list sort unique flatten max tri

F0E10 =  options allTriangulations

F0E11 =  Ts = allTriangulations(A, Fine => true);

F0E12 =  #Ts == 6

F0E13 =  T1s = allTriangulations(A, RegularOnly => true)

F0E14 =  T2s = allTriangulations(A, RegularOnly => false)

F0E15 =  #T1s

F0E16 =  #T2s

F0E17 =  T3s = allTriangulations(A, RegularOnly => false, ConnectedToRegular => false)

F0E18 =  #T3s

F0E19 =  netList Ts

F0E20 =  for tri in Ts list isWellDefined tri

F0E21 =  for tri in Ts list isRegularTriangulation tri

F0E22 =  for tri in Ts list regularTriangulationWeights tri

exampleIDS = {"F0E0", "F0E1", "F0E2", "F0E3", "F0E4", "F0E5", "F0E6", "F0E7", "F0E8", "F0E9", "F0E10", "F0E11", "F0E12", "F0E13", "F0E14", "F0E15", "F0E16", "F0E17", "F0E18", "F0E19", "F0E20", "F0E21", "F0E22"}
