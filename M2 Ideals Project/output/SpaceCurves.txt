needsPackage "SpaceCurves"

F0E0 =  R = ZZ/101[x,y,z,w];

F0E1 =  M = coker vars R;

F0E2 =  I = minimalCurve M

F0E3 =  R = ZZ/101[x,y,z,w];

F0E4 =  J = monomialCurveIdeal(R,{1,3,4});

F0E5 =  I = minimalCurve J

F1E0 =  R = ZZ/101[x,y,z,w];

F1E1 =  Q = quadricSurface(R);

F1E2 =  D = divisor({3,4},Q);

F1E3 =  genus D

F2E0 =  R = ZZ/101[x,y,z,w];

F2E1 =  M = coker vars R;

F2E2 =  I = minimalCurveBetti M

F2E3 =  R = ZZ/101[x,y,z,w];

F2E4 =  J = monomialCurveIdeal(R,{1,3,4});

F2E5 =  I = minimalCurveBetti J

F3E0 =  B = generalACMBetti {-1,-1,2}

F3E1 =  isSmoothACMBetti B

F4E0 =  smoothDivisors(5,2)

F4E1 =  smoothDivisors(5,2,ZZ/101[x,y,z,w])

F5E0 =  C = curve(5,2);

F5E1 =  isSmooth C

F6E0 =  B = generalACMBetti {-1,-1,2}

F6E1 =  degreeMatrix B

F7E0 =  X = quadricSurface(ZZ/101[x,y,z,w]);

F7E1 =  L = smoothDivisors(5,X)

F7E2 =  X = cubicSurface(ZZ/101[x,y,z,w]);

F7E3 =  L = smoothDivisors(5,X)

F7E4 =  X = quarticSurfaceRational(ZZ/101[x,y,z,w]);

F7E5 =  L = smoothDivisors(5,X)

F8E0 =  R = ZZ/101[x,y,z,w];

F8E1 =  X = quadricSurface(R);

F8E2 =  Y = cubicSurface(R);

F8E3 =  Z = quarticSurfaceRational(R);

F8E4 =  LD = smoothDivisors(4,X) | smoothDivisors(4,Y) | smoothDivisors(4,Z)

F8E5 =  LC = apply(LD,D->curve D);

F8E6 =  C = curve(5,2);

F8E7 =  degree C, genus C, isPrime C, isSmooth C

F8E8 =  G = positiveChars(8);

F8E9 =  L = G / allACMBetti;

F8E10 =  netList L

F8E11 =  apply(L, g 

          -> apply(g, B -> randomDeterminantalIdeal(ZZ/101[x,y,z,w], degreeMatrix B)));

F8E12 =  I = monomialCurveIdeal(R,{1,3,4})

F8E13 =  M = raoModule(I)

F8E14 =  J = minimalCurve M;

F8E15 =  betti res J

F9E0 =  C = curve(5,2);

F9E1 =  ideal C

F10E0 =  X = quadricSurface(ZZ/101[x_0..x_3]);

F10E1 =  D = divisor({1,2},X);

F10E2 =  C = curve D

F10E3 =  I = curve(5,2);

F10E4 =  degree I, genus I

F11E0 =  Q = quadricSurface(ZZ/101[x,y,z,w]);

F11E1 =  C = divisor({1,0},Q);

F11E2 =  D = divisor({0,1},Q);

F11E3 =  C*D

F12E0 =  Q = quadricSurface(ZZ/101[x,y,z,w]);

F12E1 =  C = divisor({1,0},Q);

F12E2 =  D = divisor({0,1},Q);

F12E3 =  C+D

F13E0 =  positiveChars(5)

F13E1 =  positiveChars(5)

F14E0 =  R = ZZ/101[x,y,z,w];

F14E1 =  Q = quadricSurface(R);

F14E2 =  D = divisor({3,4},Q);

F14E3 =  degree D

F15E0 =  C = curve(5,2);

F15E1 =  D = divisor C

F15E2 =  Q = surface D

F16E0 =  Q = quadricSurface(ZZ/101[x,y,z,w]);

F16E1 =  C = divisor({1,0},Q);

F16E2 =  D = divisor({0,1},Q);

F16E3 =  C-D

F17E0 =  C = curve(5,2);

F17E1 =  degree C

F18E0 =  allACMBetti {-1,-1,-1,2,1}

F19E0 =  Q = quadricSurface(ZZ/101[x,y,z,w]);

F19E1 =  C = divisor({1,0},Q);

F19E2 =  3*C

F20E0 =  X = quadricSurface(ZZ/101[x,y,z,w]);

F20E1 =  D = divisor({3,2},X)

F20E2 =  X = cubicSurface(ZZ/101[x,y,z,w]);

F20E3 =  D = divisor({3,1,1,1,1,1,1},X)

F20E4 =  X = quarticSurfaceRational(ZZ/101[x,y,z,w]);

F20E5 =  D = divisor(splice{3,9:1},X)

F21E0 =  cubicSurface(ZZ/32003[x,y,z,w])

F22E0 =  quadricSurface(ZZ/32003[x,y,z,w])

F23E0 =  C = curve(5,2);

F23E1 =  isPrime C

F24E0 =  B = generalACMBetti {-1,-1,2}

F24E1 =  isACMBetti B

F25E0 =  X = quadricSurface(ZZ/101[x,y,z,w]);

F25E1 =  ideal X

F26E0 =  R = ZZ/101[x,y,z,w];

F26E1 =  I = monomialCurveIdeal(R,{1,3,4});

F26E2 =  M = raoModule I

F27E0 =  C = curve(5,2);

F27E1 =  D = divisor C

F28E0 =  B = generalACMBetti {-1,-1,-1,2,1}

F28E1 =  specializeACMBetti B

F29E0 =  randomDeterminantalIdeal(ZZ/101[x,y,z],matrix{{1,1},{1,1},{1,1}})

F30E0 =  X = quarticSurfaceRational(ZZ/32003[x,y,z,w])

F31E0 =  generalACMBetti {-1,-1,2}

F32E0 =  C = curve(5,2);

F32E1 =  genus C

exampleIDS = {"F0E0", "F0E1", "F0E2", "F0E3", "F0E4", "F0E5", "F1E0", "F1E1", "F1E2", "F1E3", "F2E0", "F2E1", "F2E2", "F2E3", "F2E4", "F2E5", "F3E0", "F3E1", "F4E0", "F4E1", "F5E0", "F5E1", "F6E0", "F6E1", "F7E0", "F7E1", "F7E2", "F7E3", "F7E4", "F7E5", "F8E0", "F8E1", "F8E2", "F8E3", "F8E4", "F8E5", "F8E6", "F8E7", "F8E8", "F8E9", "F8E10", "F8E11", "F8E12", "F8E13", "F8E14", "F8E15", "F9E0", "F9E1", "F10E0", "F10E1", "F10E2", "F10E3", "F10E4", "F11E0", "F11E1", "F11E2", "F11E3", "F12E0", "F12E1", "F12E2", "F12E3", "F13E0", "F13E1", "F14E0", "F14E1", "F14E2", "F14E3", "F15E0", "F15E1", "F15E2", "F16E0", "F16E1", "F16E2", "F16E3", "F17E0", "F17E1", "F18E0", "F19E0", "F19E1", "F19E2", "F20E0", "F20E1", "F20E2", "F20E3", "F20E4", "F20E5", "F21E0", "F22E0", "F23E0", "F23E1", "F24E0", "F24E1", "F25E0", "F25E1", "F26E0", "F26E1", "F26E2", "F27E0", "F27E1", "F28E0", "F28E1", "F29E0", "F30E0", "F31E0", "F32E0", "F32E1"}
