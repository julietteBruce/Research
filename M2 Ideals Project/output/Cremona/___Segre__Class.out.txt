needsPackage "Cremona"

F39E0 =  P7 = ZZ/100003[x_0..x_7]

F39E1 =  Y = ideal(x_3^2*x_4^2-2*x_2*x_3*x_4*x_5+x_2^2*x_5^2-2*x_1*x_3*x_4*x_6-2*x_1*x_2*x_5*x_6+4*x_0*x_3*x_5*x_6+x_1^2*x_6^2+4*x_1*x_2*x_4*x_7-2*x_0*x_3*x_4*x_7-2*x_0*x_2*x_5*x_7-2*x_0*x_1*x_6*x_7+x_0^2*x_7^2)

F39E2 =  X = sub(ideal jacobian Y,P7/Y)

F39E3 =  time SegreClass X

F39E4 =  time SegreClass lift(X,P7)

F39E5 =  time SegreClass(X,Certify=>true)

F39E6 =  time SegreClass(lift(X,P7),Certify=>true)

F39E7 =  o4 == o6 and o5 == o7

F39E8 =  use ZZ/100003[x_0..x_6]

F39E9 =  time phi = inverseMap toMap(minors(2,matrix{{x_0,x_1,x_3,x_4,x_5},{x_1,x_2,x_4,x_5,x_6}}),Dominant=>2)

F39E10 =  time SegreClass phi

F39E11 =  B = ideal matrix phi

F39E12 =  -- Segre class of B in G(1,4)

F39E13 =  -- Segre class of B in P^9

exampleIDS = {"F39E0", "F39E1", "F39E2", "F39E3", "F39E4", "F39E5", "F39E6", "F39E7", "F39E8", "F39E9", "F39E10", "F39E11", "F39E12", "F39E13"}
