needsPackage "PruneComplex"

F1E0 =  needsPackage "LocalRings";

F1E1 =  R = ZZ/32003[vars(0..5)];

F1E2 =  I = ideal"abc-def,ab2-cd2-c,-b3+acd";

F1E3 =  C = res I;

F1E4 =  M = ideal gens R;

F1E5 =  RM = localRing(R, M);

F1E6 =  F = C.dd_2;

F1E7 =  FM = F ** RM

F1E8 =  f = liftUp FM;

F1E9 =  g = syz f;

F1E10 =  h = syz g;

F1E11 =  C = {g ** RM, h ** RM}/mutableMatrix;

F1E12 =  C = pruneDiff(C, 1, PruningMap => false)

F1E13 =  g' = C#0;

F1E14 =  N = transpose entries FM;

F1E15 =  for i from 0 to numcols FM - 1 do

F1E16 =  GM = map(source FM, , matrix g')

F1E17 =  kernel FM == image GM

exampleIDS = {"F1E0", "F1E1", "F1E2", "F1E3", "F1E4", "F1E5", "F1E6", "F1E7", "F1E8", "F1E9", "F1E10", "F1E11", "F1E12", "F1E13", "F1E14", "F1E15", "F1E16", "F1E17"}
