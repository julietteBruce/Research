needsPackage "NumericalCertification"

F0E0 =  R = RR[x1,x2,y1,y2];

F0E1 =  f = polySystem {3*y1 + 2*y2 -1, 3*x1 + 2*x2 -3.5,x1^2 + y1^2 -1, x2^2 + y2^2 - 1};

F0E2 =  p1 = point{{.95,.32,-.30,.95}};

F0E3 =  p2 = point{{.65,.77,.76,-.64}};

F0E4 =  certifyDistinctSolutions(f,p1,p2)

F0E5 =  p1 = point{{.6525,.7712,.7577,-.6366}};

F0E6 =  p2 = point{{.653,.771,.758,-.637}};

F0E7 =  certifyDistinctSolutions(f,p1,p2)

F0E8 =  p1 = point{{.95,.32,-.30,.95}};

F0E9 =  p2 = point{{.95,.32,-.301,.95}};

F0E10 =  certifyDistinctSolutions(f,p1,p2)

F1E0 =  I = intervalCCi(interval(.5,.8),interval(.6,.9))

F1E1 =  J = intervalCCi(interval(.54,.78),interval(.65,.89))

F1E2 =  K = intervalCCi(interval(.45,.6),interval(.3,.78))

F1E3 =  L = intervalCCi(3,4)

F1E4 =  I + J

F1E5 =  I - J

F1E6 =  I * K

F1E7 =  I / K

F1E8 =  I ^ 3

F1E9 =  2 * I

F1E10 =  isSubset(I,J)  -- I is not a subset of J

F1E11 =  isSubset(J,I)  -- J is a subset of I

F1E12 =  intersect(I,K)

F1E13 =  (realPart I, imaginaryPart I)

F1E14 =  norm I

F1E15 =  midpointCCi I

F2E0 =  R = RR[x1,x2,y1,y2];

F2E1 =  f = polySystem {3*y1 + 2*y2 -1, 3*x1 + 2*x2 -7/2,x1^2 + y1^2 -1, x2^2 + y2^2 - 1};

F2E2 =  (I1, I2, I3, I4) = (interval(.94,.96), interval(.31,.33), interval(-.31,-.29), interval(.94,.96));

F2E3 =  M = matrix{{I1,I2,I3,I4}}

F2E4 =  krawczykTest(f,M)

F2E5 =  p = point {{.95437+0.0001*ii, .318445, -.298627, .947941}}

F2E6 =  krawczykTest(f,p)

F3E0 =  R = CC[x1,x2,y1,y2];

F3E1 =  f = polySystem {3*y1 + 2*y2 -1, 3*x1 + 2*x2 -7/2,x1^2 + y1^2 -1, x2^2 + y2^2 - 1};

F3E2 =  p = point {{.95437+0.0001*ii, .318445, -.298627, .947941}} -- a numerical solution over the complex number

F3E3 =  I = pointToInterval(p, 1e-2) -- an interval box centered at p with radius 1e-2

F3E4 =  krawczykRealnessTest(f,I)

F4E0 =  R = RR[x1,x2,y1,y2];

F4E1 =  f = polySystem {3*y1 + 2*y2 -1, 3*x1 + 2*x2 -3.5,x1^2 + y1^2 -1, x2^2 + y2^2 - 1};

F4E2 =  p = point{{.954379,.318431,-.298633,.947949}};

F4E3 =  certifyRealSolution(f,p)

F4E4 =  p = point{{.65,.77,.75,-.64}};  -- poorly approximated solution

F4E5 =  certifyRealSolution(f,p)

F5E0 =  R = RR[x1,x2,y1,y2];

F5E1 =  f = polySystem {3*y1 + 2*y2 -1, 3*x1 + 2*x2 -3.5,x1^2 + y1^2 -1, x2^2 + y2^2 - 1};

F5E2 =  p1 = point{{.95,.32,-.30,.95}};

F5E3 =  certifyRegularSolution(f,p1)

F6E0 =  R = CC[x,y,z];

F6E1 =  f = polySystem {x^2+y+z-1,x+y^2+z-1,x+y+z^2-1};

F6E2 =  p = point{{1e-7-1e-7*ii,1e-7+1e-7*ii,1+1e-7}};

F6E3 =  certifySingularSolution(f,p)

F6E4 =  R = CC[x,y]

F6E5 =  f = polySystem {x+y^3,x^2*y-y^4};

F6E6 =  p = point {{-3.38813e-21+1.35525e-20*ii, -3.38813e-21+2.03288e-20*ii}};

F6E7 =  certifySingularSolution(f,p,2) -- false, two iterations are not enough

F6E8 =  certifySingularSolution(f,p,3)

F6E9 =  certifySingularSolution(f,p,3,Strategy => "intervalArithmetic")

F7E0 =  R = CC[x1,x2,y1,y2];

F7E1 =  f = polySystem {3*y1 + 2*y2 -1, 3*x1 + 2*x2 -3.5, x1^2 + y1^2 -1, x2^2 + y2^2 -1};

F7E2 =  sols = solveSystem f

F7E3 =  c = certifySolutions(f, sols, Strategy => "alphaTheory");

F7E4 =  peek c

F7E5 =  R = RR[x1,x2,y1,y2];

F7E6 =  f = polySystem {3*y1 + 2*y2 -1, 3*x1 + 2*x2 -3.5, x1^2 + y1^2 -1, x2^2 + y2^2 -1};

F7E7 =  p1 = point{{.95, .32, -.30, .95}};

F7E8 =  p2 = point{{.9, .3, -.3, 1}}; -- poorly approximated solution

F7E9 =  certifyRegularSolution(f,p1)

F7E10 =  certifyRegularSolution(f,p2) -- not an approximate solution

F7E11 =  p1 = point{{.95,.32,-.30,.95}};

F7E12 =  p2 = point{{.65,.77,.76,-.64}};

F7E13 =  certifyDistinctSolutions(f,p1,p2)

F7E14 =  p = point{{.954379, .318431, -.298633, .947949}};

F7E15 =  certifyRealSolution(f,p)

F7E16 =  R = QQ[x1,x2,y1,y2]

F7E17 =  f = polySystem {3*y1 + 2*y2 -1, 3*x1 + 2*x2 -7/2, x1^2 + y1^2 -1, x2^2 + y2^2 -1};

F7E18 =  p = point{{95/100,32/100,-30/100,95/100}}; -- an input over the rational numbers

F7E19 =  computeConstants(f,p)

F7E20 =  certifyRegularSolution(f,p)

F7E21 =  R = RR[x1,x2,y1,y2];

F7E22 =  f = polySystem {3*y1 + 2*y2 -1, 3*x1 + 2*x2 -3.5, x1^2 + y1^2 -1, x2^2 + y2^2 -1};

F7E23 =  (I1, I2, I3, I4) = (interval(.94,.96), interval(.31,.33), interval(-.31,-.29), interval(.94,.96));

F7E24 =  krawczykOperator(f,matrix{{I1,I2,I3,I4}})

F7E25 =  krawczykTest(f,matrix{{I1,I2,I3,I4}})

F7E26 =  R = RR[x1,x2,y1,y2];

F7E27 =  f = polySystem {3*y1 + 2*y2 -1, 3*x1 + 2*x2 -3.5, x1^2 + y1^2 -1, x2^2 + y2^2 -1};

F7E28 =  p = point{{.954379, .318431, -.298633, .947949}};

F7E29 =  I = pointToInterval(f,p)

F7E30 =  krawczykTest(f,I)

F7E31 =  f = polySystem {x^2+y+z-1,x+y^2+z-1,x+y+z^2-1};

F7E32 =  p = point{{1e-7-1e-7*ii,1e-7+1e-7*ii,1+1e-7}};

F7E33 =  certifySingularSolution(f,p)

F8E0 =  R = CC[x,y,z];

F8E1 =  f = polySystem {(x-y)^3 - z^2, (z-x)^3 - y^2, (y-z)^3 - x^2};

F8E2 =  listOfSols = solveSystem f;

F8E3 =  c = certifySolutions(f,listOfSols);

F8E4 =  peek c

F8E5 =  c = certifySolutions(f,listOfSols,Strategy => "intervalArithmetic");

F8E6 =  peek c

F9E0 =  needsPackage("NumericalCertification", Configuration => {"ALPHACERTIFIEDexec" => "some/path/to/alphaCertified"})

F9E1 =  R = CC[x1,x2,y1,y2];

F9E2 =  f = polySystem {3*y1 + 2*y2 -1, 3*x1 + 2*x2 -3.5, x1^2 + y1^2 -1, x2^2 + y2^2 -1};

F9E3 =  p1 = point{{.95, .32, -.30, .95}};

F9E4 =  p2 = point{{.65,.77,.76,-.64}};

F9E5 =  P = {p1, p2};

F10E0 =  p = point{{.151879*ii, -.142332-.358782*ii, .142332-.358782*ii}};

F10E1 =  I = pointToInterval(p, 1e-3) -- returns an interval box centered at the point with the radius 1e-3

F10E2 =  R = CC[x,y,z];

F10E3 =  f = polySystem {(x-y)^3 - z^2, (z-x)^3 - y^2, (y-z)^3 - x^2};

F10E4 =  p = point{{.151879*ii, -.142332-.358782*ii, .142332-.358782*ii}};

F10E5 =  I = pointToInterval(f,p)

F11E0 =  R = RR[x1,x2,y1,y2];

F11E1 =  f = polySystem {3*y1 + 2*y2 -1, 3*x1 + 2*x2 -3.5,x1^2 + y1^2 -1, x2^2 + y2^2 - 1};

F11E2 =  p = point{{.95,.32,-.30,.95}};

F11E3 =  (a, b, g) = computeConstants(f,p)

F12E0 =  R = RR[x1,x2,y1,y2];

F12E1 =  f = polySystem {3*y1 + 2*y2 -1, 3*x1 + 2*x2 -7/2,x1^2 + y1^2 -1, x2^2 + y2^2 - 1};

F12E2 =  p = point {{.95437, .318445, -.298627, .947941}};

F12E3 =  peek certifySolutions(f, {p})

F12E4 =  peek certifySolutions(f, {p}, Strategy => "intervalArithmetic")

F13E0 =  R = RR[x1,x2,y1,y2];

F13E1 =  f = polySystem {3*y1 + 2*y2 -1, 3*x1 + 2*x2 -3.5,x1^2 + y1^2 -1, x2^2 + y2^2 - 1};

F13E2 =  p1 = point{{.954379,.318431,-.298633,.947949}}

F13E3 =  p5 = point{{.31, .30, .72, -.60}}; -- poorly approximated solution

F13E4 =  P = {p1, p2, p3, p4, p5}

F13E5 =  alphaTheoryCertification(f,P)

F14E0 =  I = intervalCCi(interval(.5,.8),interval(.6,.9));

F14E1 =  J = intervalCCi(interval(.54,.78),interval(.65,.89));

F14E2 =  K = intervalCCi(interval(.45,.6),interval(.3,.78));

F14E3 =  L = intervalCCi(3,4);

F14E4 =  M = matrixCCi {{I,J},{K,L}}

F14E5 =  N = matrixCCi {{J,K},{L,I}}

F14E6 =  O = matrixCCi {{J,K,L},{I,L+K,J*L}}

F14E7 =  M + N

F14E8 =  M - N

F14E9 =  M * N

F14E10 =  M ^ 2

F14E11 =  entries M

F14E12 =  transpose O

F14E13 =  numcols O

F14E14 =  numrows O

F14E15 =  norm O

F15E0 =  R = RR[x1,x2,y1,y2];

F15E1 =  f = polySystem {3*y1 + 2*y2 -1, 3*x1 + 2*x2 -7/2,x1^2 + y1^2 -1, x2^2 + y2^2 - 1};

F15E2 =  (I1, I2, I3, I4) = (interval(.94,.96), interval(.31,.33), interval(-.31,-.29), interval(.94,.96));

F15E3 =  M = matrix{{I1,I2,I3,I4}}

F15E4 =  krawczykOperator(f,M)

exampleIDS = {"F0E0", "F0E1", "F0E2", "F0E3", "F0E4", "F0E5", "F0E6", "F0E7", "F0E8", "F0E9", "F0E10", "F1E0", "F1E1", "F1E2", "F1E3", "F1E4", "F1E5", "F1E6", "F1E7", "F1E8", "F1E9", "F1E10", "F1E11", "F1E12", "F1E13", "F1E14", "F1E15", "F2E0", "F2E1", "F2E2", "F2E3", "F2E4", "F2E5", "F2E6", "F3E0", "F3E1", "F3E2", "F3E3", "F3E4", "F4E0", "F4E1", "F4E2", "F4E3", "F4E4", "F4E5", "F5E0", "F5E1", "F5E2", "F5E3", "F6E0", "F6E1", "F6E2", "F6E3", "F6E4", "F6E5", "F6E6", "F6E7", "F6E8", "F6E9", "F7E0", "F7E1", "F7E2", "F7E3", "F7E4", "F7E5", "F7E6", "F7E7", "F7E8", "F7E9", "F7E10", "F7E11", "F7E12", "F7E13", "F7E14", "F7E15", "F7E16", "F7E17", "F7E18", "F7E19", "F7E20", "F7E21", "F7E22", "F7E23", "F7E24", "F7E25", "F7E26", "F7E27", "F7E28", "F7E29", "F7E30", "F7E31", "F7E32", "F7E33", "F8E0", "F8E1", "F8E2", "F8E3", "F8E4", "F8E5", "F8E6", "F9E0", "F9E1", "F9E2", "F9E3", "F9E4", "F9E5", "F10E0", "F10E1", "F10E2", "F10E3", "F10E4", "F10E5", "F11E0", "F11E1", "F11E2", "F11E3", "F12E0", "F12E1", "F12E2", "F12E3", "F12E4", "F13E0", "F13E1", "F13E2", "F13E3", "F13E4", "F13E5", "F14E0", "F14E1", "F14E2", "F14E3", "F14E4", "F14E5", "F14E6", "F14E7", "F14E8", "F14E9", "F14E10", "F14E11", "F14E12", "F14E13", "F14E14", "F14E15", "F15E0", "F15E1", "F15E2", "F15E3", "F15E4"}
