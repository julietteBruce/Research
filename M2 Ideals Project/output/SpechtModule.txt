needsPackage "SpechtModule"

F0E0 =  p = new Partition from {2,2,1}

F0E1 =  y = youngTableau(p,{0,3,1,4,2})

F0E2 =  columnStabilizer y

F1E0 =  n = 4

F1E1 =  X = mutableMatrix  {{0,0,0,0,24}}

F1E2 =  Y = mutableMatrix  {{1,0,-1,-1,3}}

F1E3 =  innerProduct(4,X,Y)

F2E0 =  R = QQ[x_1..x_3]

F2E1 =  powerSumSymmetricPolynomials R

F3E0 =  p = new Partition from {3,2}

F3E1 =  standardTableaux p

F4E0 =  R = QQ[x_0..x_3]

F4E1 =  vandermondeDeterminant({0,2,3},R,AsExpression => true)

F4E2 =  p = new Partition from {2,2}

F4E3 =  S = youngTableau(p,{0,2,1,3})

F4E4 =  T = youngTableau(p,{0,1,2,3})

F4E5 =  higherSpechtPolynomial(S,T,R,AsExpression => true)

F4E6 =  higherSpechtPolynomials(R,AsExpression => true)

F5E0 =  charTable = characterTable 5

F5E1 =  a = new Partition from {3,1,1}; b = new Partition from {1,1,1,1,1}

F5E2 =  charTable_(0,0)=-100

F5E3 =  charTable_(a,b)=100

F5E4 =  charTable

F6E0 =  p = new Partition from {3,2,1}

F6E1 =  y = youngTableau(p,{1,2,3,5,4,6})

F6E2 =  garnirElement y

F7E0 =  p = new Partition from {3,2,1}

F7E1 =  y = youngTableau(p,{2,0,3,4,5,1})

F7E2 =  e = spechtModuleElement(y,-2)

F7E3 =  y2 = youngTableau(p,{5,0,2,4,1,3})

F7E4 =  e2 = spechtModuleElement(y2)

F7E5 =  e+e2

F7E6 =  e-e2

F7E7 =  3*oo

F7E8 =  peek oo

F7E9 =  peek ooo#values

F7E10 =  terms (3*(e-e2))

F7E11 =  {0,1,2,3,4,5} (3*(e-e2))

F7E12 =  {1,0,2,3,4,5} (3*(e-e2))

F8E0 =  cycleDecomposition {0,1,2,3,4}

F8E1 =  cycleDecomposition {1,3,2,0,4}

F9E0 =  R = QQ[x_0..x_3]

F9E1 =  vandermondeDeterminant({0,2,3},R)

F9E2 =  factor oo

F10E0 =  genList = {{1,2,3,0,5,4},{0,4,2,5,1,3}}

F10E1 =  H = generatePermutationGroup(genList)

F10E2 =  tal := tally apply (H,h->conjugacyClass h);

F10E3 =  partis = partitions 6;

F10E4 =  time multi = hashTable apply (partis, p-> p=> representationMultiplicity(tal,p))

F10E5 =  sum (partis, p -> multi#p * hookLengthFormula p)

F11E0 =  R = QQ[x_0..x_4]

F11E1 =  M = generalizedVandermondeMatrix({0,2,3},{1,3,5},R)

F11E2 =  (determinant M)//vandermondeDeterminant({0,2,3},R)

F12E0 =  perm = {2,1,4,3,0}

F12E1 =  c = cycleDecomposition perm

F12E2 =  permutationSign perm

F12E3 =  perm2 = {4,2,1,0,3}

F12E4 =  c2 = cycleDecomposition perm2

F12E5 =  permutationSign perm2

F13E0 =  p = new Partition from {3,2}

F13E1 =  standardTableaux p

F13E2 =  hookLengthFormula p

F14E0 =  y = youngTableau(new Partition from {2,1,1,1},{2,0,1,4,3})

F14E1 =  numcols y

F15E0 =  charTable = characterTable 5

F15E1 =  a = new Partition from {3,1,1}; b = new Partition from {1,1,1,1,1}

F15E2 =  peek charTable

F16E0 =  R = QQ[x_0..x_4]

F16E1 =  p = new Partition from {2,2,1}

F16E2 =  y = youngTableau(p,{0,3,1,4,2})

F16E3 =  spechtPolynomial(y,R)

F16E4 =  factor oo

F17E0 =  charTable = characterTable 5

F17E1 =  a = new Partition from {3,1,1}; b = new Partition from {1,1,1,1,1}

F17E2 =  charTable_(0,0)

F17E3 =  charTable_(a,b)

F18E0 =  cycleDecomposition {0,1,2,3,4}

F18E1 =  conjugacyClass 	{0,1,2,3,4}

F18E2 =  cycleDecomposition {1,3,2,0,4}

F18E3 =  conjugacyClass 	{0,1,2,3,4}

F19E0 =  p = new Partition from {3,2}

F19E1 =  semistandardTableaux (p,4)

F20E0 =  generatePermutationGroup {{1,0,2,3},{1,2,3,0}}

F21E0 =  y = youngTableau(new Partition from {2,1,1,1},{2,0,1,4,3})

F21E1 =  numrows y

F22E0 =  p = new Partition from {2,1}

F22E1 =  y1 = youngTableau(p,{0,1,2})

F22E2 =  y2 = youngTableau(p,{0,2,1})

F22E3 =  y3 = youngTableau(p,{1,2,0})

F22E4 =  t = tableauList p

F22E5 =  addTableau(t, y1)

F22E6 =  addTableau(t, y2)

F22E7 =  addTableau(t, y3)

F22E8 =  toListOfTableaux t

F23E0 =  p = new Partition from {3,2}

F23E1 =  tabloids p

F24E0 =  p = new Partition from {3,2,1}

F24E1 =  y = youngTableau(p,{1,2,3,5,4,6})

F24E2 =  firstRowDescent y

F24E3 =  y2 = youngTableau(p,{1,2,4,3,5,6})

F24E4 =  firstRowDescent y2

F25E0 =  p = new Partition from {2,2,1}

F25E1 =  l = {2,1,0,3,4}

F25E2 =  y = youngTableau(p,l)

F25E3 =  tableauToList y

F26E0 =  p = new Partition from {3,2,1}

F26E1 =  y = youngTableau(p,{1,2,3,5,4,6})

F26E2 =  garnirElement y

F27E0 =  p = new Partition from {3,2}

F27E1 =  l = {2,1,0,3,4}

F27E2 =  y = youngTableau(p,l)

F27E3 =  y1 = youngTableau y

F27E4 =  y == y1

F27E5 =  y === y1

F28E0 =  R = QQ[x_0..x_4]

F28E1 =  l = {1,0,2,3,4}

F28E2 =  f = x_1*x_2*x_3

F28E3 =  permutePolynomial(l,f)

F28E4 =  ex = factor(x_1*x_2*x_3)+factor(x_1*x_3*x_4)

F28E5 =  permutePolynomial(l,ex)

F29E0 =  p = new Partition from {2,2,1}

F29E1 =  y = youngTableau(p,{0,3,1,4,2})

F29E2 =  rowStabilizer y

F30E0 =  l = {{0,1,2},{3,4},{5}}

F30E1 =  listToTableau l

F31E0 =  p = new Partition from {2,1}

F31E1 =  y1 = youngTableau(p,{0,1,2})

F31E2 =  y2 = youngTableau(p,{0,2,1})

F31E3 =  y3 = youngTableau(p,{1,2,0})

F31E4 =  t = tableauList p

F31E5 =  addTableau(t, y1)

F31E6 =  addTableau(t, y2)

F31E7 =  addTableau(t, y3)

F31E8 =  peek t

F32E0 =  p = new Partition from {2,2,1}

F32E1 =  y = youngTableau(p,{0,1,4,3,2})

F32E2 =  sortColumnsTableau y

F32E3 =  y

F33E0 =  p = new Partition from {3,2,1}

F33E1 =  y = youngTableau(p,{2,0,3,4,5,1})

F33E2 =  spechtModuleElement(y,-2)

F33E3 =  spechtModuleElement(y)

F34E0 =  p = new Partition from {2,1}

F34E1 =  y1 = youngTableau(p,{0,1,2})

F34E2 =  y2 = youngTableau(p,{0,2,1})

F34E3 =  t = tableauList p

F34E4 =  addTableau(t, y1)

F34E5 =  addTableau(t, y2)

F34E6 =  addTableau(t, {1,2,0})

F34E7 =  peek t

F35E0 =  p = new Partition from {3,2}

F35E1 =  y = youngTableau(p,{0,2,3,1,4})

F35E2 =  readingWord(y)

F36E0 =  p = new Partition from {2,1}

F36E1 =  y = youngTableau(p,{0,1,2})

F36E2 =  t = tableauList p

F36E3 =  addTableau(t,y)

F36E4 =  peek t

F36E5 =  t1 = tableauList (p,5)

F36E6 =  addTableau(t1,y)

F36E7 =  peek t1

F37E0 =  p = new Partition from {2,1}

F37E1 =  l = {0,2,1}

F37E2 =  matrixRepresentation (l,p)

F37E3 =  stan = standardTableaux p

F37E4 =  matrixRepresentation (l,stan)

F37E5 =  matrixRepresentation stan

F38E0 =  y = youngTableau(new Partition from {3,2},{0,2,1,3,4})

F38E1 =  y_0

F38E2 =  y_1

F39E0 =  R = QQ[x_0..x_3]

F39E1 =  p = new Partition from {2,2}

F39E2 =  S  = youngTableau(p,{0,2,1,3})

F39E3 =  higherSpechtPolynomials(S,R)

F39E4 =  stan = standardTableaux p

F39E5 =  higherSpechtPolynomials(S, stan,R)

F39E6 =  higherSpechtPolynomials(p,R)

F39E7 =  higherSpechtPolynomials(R)

F40E0 =  R = QQ[x_1..x_6]

F40E1 =  genList = {{1,2,3,0,5,4},{0,4,2,5,1,3}}

F40E2 =  time seco = secondaryInvariants(genList,R);

F40E3 =  seco#(new Partition from {2,2,2})

F41E0 =  p = new Partition from {2,2,1}

F41E1 =  y1 = youngTableau(p,{0,1,4,3,2})

F41E2 =  y2 = youngTableau(p,{0,3,4,1,2})

F41E3 =  ele = spechtModuleElement(y1)-spechtModuleElement(y2)

F41E4 =  sortColumnsTableau ele

F41E5 =  ele

F42E0 =  R = QQ[x_0..x_4]

F42E1 =  M = generalizedVandermondeMatrix({0,2,3},{1,3,5},R)

F42E2 =  (determinant M)//vandermondeDeterminant({0,2,3},R)

F43E0 =  R = QQ[x_1..x_4]

F43E1 =  p = new Partition from {2,2}

F43E2 =  S = youngTableau(p,{0,2,1,3})

F43E3 =  T = youngTableau(p,{0,1,2,3})

F43E4 =  higherSpechtPolynomial(S,T,R,Robust => true)

F43E5 =  higherSpechtPolynomial(S,T,R,Robust => false)

F44E0 =  y = youngTableau(new Partition from {3,2},{0,2,1,3,4})

F44E1 =  y^0

F44E2 =  y^1

F45E0 =  R = QQ[x_1..x_3]

F45E1 =  elementarySymmetricPolynomials R

F46E0 =  y = youngTableau(new Partition from {3,1,1},{2,0,1,4,3})

F46E1 =  entries y

F47E0 =  R = QQ[x_0..x_4]

F47E1 =  p = new Partition from {2,2,1}

F47E2 =  S  = youngTableau(p,{0,2,1,3,4})

F47E3 =  T  = youngTableau(p,{0,1,2,3,4})

F47E4 =  ind = indexTableau(S)

F47E5 =  indexMonomial(S,T,R)

F48E0 =  p = new Partition from {2,2}

F48E1 =  tabloids p

F48E2 =  multinomial {2,2}

F48E3 =  multinomial tally {2,2}

F49E0 =  p = new Partition from {3,2}

F49E1 =  y = youngTableau(p, {0,2,1,3,4})

F49E2 =  ind = indexTableau y

F49E3 =  rowPermutationTableaux ind

F50E0 =  y = youngTableau(new Partition from {2,1,1,1},{2,0,1,4,3})

F50E1 =  size y

F51E0 =  p1 = new Partition from {3,2,1}

F51E1 =  cardinalityOfConjugacyClass p1

F51E2 =  p2 = new Partition from {1,1,1,1,1}

F51E3 =  cardinalityOfConjugacyClass p2

F52E0 =  p = new Partition from {2,1}

F52E1 =  y1 = youngTableau(p,{0,1,2})

F52E2 =  y2 = youngTableau(p,{0,2,1})

F52E3 =  y3 = youngTableau(p,{1,2,0})

F52E4 =  t = tableauList p;

F52E5 =  addTableau(t, y1);

F52E6 =  addTableau(t, y2);

F52E7 =  addTableau(t, y3);

F52E8 =  t_0

F52E9 =  t_2

F53E0 =  y = youngTableau(new Partition from {2,2},{0,2,1,3})

F53E1 =  y_(0,0)=1

F53E2 =  y

F54E0 =  R = QQ[x_0..x_4]

F54E1 =  p = new Partition from {2,2,1}

F54E2 =  specht = spechtPolynomials(p,R)

F55E0 =  y = youngTableau(new Partition from {2,2},{0,2,1,3})

F55E1 =  y_(0,0)

F55E2 =  y_(1,1)

F56E0 =  p = new Partition from {2,1}

F56E1 =  y1 = youngTableau(p,{1,0,2})

F56E2 =  y2 = youngTableau(p,{0,2,1})

F56E3 =  y1 ? y2

F56E4 =  sort {y1,y2}

F57E0 =  R = QQ[x_0..x_4]

F57E1 =  p = new Partition from {2,2,1}

F57E2 =  S  = youngTableau(p,{0,2,1,3,4})

F57E3 =  T  = youngTableau(p,{0,1,2,3,4})

F57E4 =  time higherSpechtPolynomial(S,T,R)

F57E5 =  time higherSpechtPolynomial(S,T,R, Robust => false)

F57E6 =  time higherSpechtPolynomial(S,T,R, Robust => false, AsExpression => true)

F58E0 =  y = youngTableau(new Partition from {3,2},{0,2,1,3,4})

F58E1 =  y1 = youngTableau(new Partition from {3,2},{0,2,1,3,4})

F58E2 =  y == y1

F58E3 =  y2 =  youngTableau(new Partition from {2,2,1},{0,2,1,3,4})

F58E4 =  y == y2

F59E0 =  permutationMatrix {0,1,2}

F59E1 =  permutationMatrix {1,0,2}

F59E2 =  permutationMatrix {1,2,0}

F60E0 =  p = new Partition from {3,2}

F60E1 =  y = youngTableau(p,{1,0,2,3,4})

F60E2 =  peek y

F61E0 =  p = new Partition from {3,2}

F61E1 =  y = youngTableau(p,{0,2,3,1,4})

F61E2 =  readingWord(y)

F61E3 =  indexTableau(y)

exampleIDS = {"F0E0", "F0E1", "F0E2", "F1E0", "F1E1", "F1E2", "F1E3", "F2E0", "F2E1", "F3E0", "F3E1", "F4E0", "F4E1", "F4E2", "F4E3", "F4E4", "F4E5", "F4E6", "F5E0", "F5E1", "F5E2", "F5E3", "F5E4", "F6E0", "F6E1", "F6E2", "F7E0", "F7E1", "F7E2", "F7E3", "F7E4", "F7E5", "F7E6", "F7E7", "F7E8", "F7E9", "F7E10", "F7E11", "F7E12", "F8E0", "F8E1", "F9E0", "F9E1", "F9E2", "F10E0", "F10E1", "F10E2", "F10E3", "F10E4", "F10E5", "F11E0", "F11E1", "F11E2", "F12E0", "F12E1", "F12E2", "F12E3", "F12E4", "F12E5", "F13E0", "F13E1", "F13E2", "F14E0", "F14E1", "F15E0", "F15E1", "F15E2", "F16E0", "F16E1", "F16E2", "F16E3", "F16E4", "F17E0", "F17E1", "F17E2", "F17E3", "F18E0", "F18E1", "F18E2", "F18E3", "F19E0", "F19E1", "F20E0", "F21E0", "F21E1", "F22E0", "F22E1", "F22E2", "F22E3", "F22E4", "F22E5", "F22E6", "F22E7", "F22E8", "F23E0", "F23E1", "F24E0", "F24E1", "F24E2", "F24E3", "F24E4", "F25E0", "F25E1", "F25E2", "F25E3", "F26E0", "F26E1", "F26E2", "F27E0", "F27E1", "F27E2", "F27E3", "F27E4", "F27E5", "F28E0", "F28E1", "F28E2", "F28E3", "F28E4", "F28E5", "F29E0", "F29E1", "F29E2", "F30E0", "F30E1", "F31E0", "F31E1", "F31E2", "F31E3", "F31E4", "F31E5", "F31E6", "F31E7", "F31E8", "F32E0", "F32E1", "F32E2", "F32E3", "F33E0", "F33E1", "F33E2", "F33E3", "F34E0", "F34E1", "F34E2", "F34E3", "F34E4", "F34E5", "F34E6", "F34E7", "F35E0", "F35E1", "F35E2", "F36E0", "F36E1", "F36E2", "F36E3", "F36E4", "F36E5", "F36E6", "F36E7", "F37E0", "F37E1", "F37E2", "F37E3", "F37E4", "F37E5", "F38E0", "F38E1", "F38E2", "F39E0", "F39E1", "F39E2", "F39E3", "F39E4", "F39E5", "F39E6", "F39E7", "F40E0", "F40E1", "F40E2", "F40E3", "F41E0", "F41E1", "F41E2", "F41E3", "F41E4", "F41E5", "F42E0", "F42E1", "F42E2", "F43E0", "F43E1", "F43E2", "F43E3", "F43E4", "F43E5", "F44E0", "F44E1", "F44E2", "F45E0", "F45E1", "F46E0", "F46E1", "F47E0", "F47E1", "F47E2", "F47E3", "F47E4", "F47E5", "F48E0", "F48E1", "F48E2", "F48E3", "F49E0", "F49E1", "F49E2", "F49E3", "F50E0", "F50E1", "F51E0", "F51E1", "F51E2", "F51E3", "F52E0", "F52E1", "F52E2", "F52E3", "F52E4", "F52E5", "F52E6", "F52E7", "F52E8", "F52E9", "F53E0", "F53E1", "F53E2", "F54E0", "F54E1", "F54E2", "F55E0", "F55E1", "F55E2", "F56E0", "F56E1", "F56E2", "F56E3", "F56E4", "F57E0", "F57E1", "F57E2", "F57E3", "F57E4", "F57E5", "F57E6", "F58E0", "F58E1", "F58E2", "F58E3", "F58E4", "F59E0", "F59E1", "F59E2", "F60E0", "F60E1", "F60E2", "F61E0", "F61E1", "F61E2", "F61E3"}
