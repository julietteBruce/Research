needsPackage "gfanInterface"

F0E0 =  QQ[x,y,z];

F0E1 =  gfan(ideal(x^2*y -z, y^2*z - x, z^2*x - y), "symmetry" => {{0,1,2}, {1,2,0}})

F0E2 =  QQ[x,y,z];

F0E3 =  gfanBuchberger(ideal(x,y+z))

F0E4 =  QQ[x,y,z];

F0E5 =  gfanBuchberger(ideal(x,y+z), "w" => {1,2,3})

F1E0 =  (L, S) = gfanTropicalLinearSpace({1,2,3}, 3, 1);

F1E1 =  L

F1E2 =  S

F2E0 =  QQ[x,y,z];

F2E1 =  I = ideal(y*z*(x-1), x*(z^2 - y));

F2E2 =  gfanSaturation I

F3E0 =  gfanLatticeIdeal {{2,-1,0},{3,0,-1}}

F4E0 =  QQ[x,y,z];

F4E1 =  I = ideal(x*y + z, x*z + y);

F4E2 =  gfanBuchberger(I)

F4E3 =  gfanBuchberger(I, "w" => {1,2,3})

F4E4 =  gfanBuchberger({x*y + z, x*z +y}, "w" => {1,2,3})

F4E5 =  QQ[x,y,z, MonomialOrder => { Weights => {1,2,3}, Lex } ];

F4E6 =  G = gens gb ideal(x*y + z,  x*z + y )

F4E7 =  markedPolynomialList transpose  apply(flatten entries G, g-> {leadTerm g, g})

F5E0 =  QQ[x,y,z];

F5E1 =  gfanMarkPolynomialSet({x + y + z, x^10 + y^4 + z^2, x^2*z + y^2}, {1, 3, 5})

F6E0 =  gfanMinors(2,3,3)

F7E0 =  QQ[x,y];

F7E1 =  gfanGroebnerCone( markedPolynomialList {{x}, {x+y}} )

F7E2 =  QQ[x,y];

F7E3 =  gfanGroebnerCone( markedPolynomialList {{x}, {x+y}}, markedPolynomialList {{x}, {x+y}} )

F8E0 =  QQ[x1,x2,x3]

F8E1 =  gfanMixedVolume({x1+x2+x3,x1*x2+x2*x3+x3*x1,x1*x2*x3-1})

F9E0 =  QQ[x,y];

F9E1 =  gfanTropicalHyperSurface(x+y)

F9E2 =  gfanTropicalHyperSurface(x+y+1)

F9E3 =  gfanTropicalIntersection {x+y, x+y+1}

F10E0 =  QQ[x,y,z];

F10E1 =  gfanHomogeneitySpace {x+y^2, y+z^2}

F11E0 =  (R,S) = gfanTropicalRank matrix {{1,2},{1,2}};

F11E1 =  R

F11E2 =  S

F12E0 =  QQ[x,y]

F12E1 =  M = markedPolynomialList {{x},{x+y}}

F12E2 =  F = gfanToPolyhedralFan { M }

F12E3 =  L = markedPolynomialList {{y},{x+y}}

F12E4 =  F = gfanToPolyhedralFan { M, L }

F13E0 =  programPaths#"gfan" = "/directory/to/gfan/"

F13E1 =  loadPackage("gfanInterface", Reload => true)

F13E2 =  gfanInterface#"source file"

F13E3 =  prefixDirectory | currentLayout#"programs"

F13E4 =  loadPackage("gfanInterface", Configuration => { "keepfiles" => true, "verbose" => true}, Reload => true);

F13E5 =  QQ[x,y];

F13E6 =  gfan {x,y};

F14E0 =  QQ[x,y,z];

F14E1 =  y^2 + x^2 + z^2

F14E2 =  QQ[x,y,z];

F14E3 =  markedPolynomialList {{y^2, x^2}, {x^2 + y^2 + z^2, x^2 + y^2 + z^2}}

F14E4 =  QQ[x,y,z];

F14E5 =  gfanMarkPolynomialSet({x*y^3+z^4, x^2*z^2 + y^3*z}, {-1,2,5})

F15E0 =  QQ[x,y,z]

F15E1 =  gfanTropicalFunction(x*y+z^2)

F16E0 =  QQ[x,y];

F16E1 =  I = ideal(x^2 + y^2, x*y + y^2 + y^3);

F16E2 =  MPLConverter(I)

F16E3 =  QQ[x,y];

F16E4 =  MPLConverter{x^2 + y^2, x*y + y^2 + y^3}

F17E0 =  QQ[x,y,z]

F17E1 =  gfanTropicalEvaluation(x*y+z^2, {{1,1,0}, {0,0,3}, {1,1,3} })

F18E0 =  QQ[x,y,z];

F18E1 =  gfanDoesIdealContain(markedPolynomialList{{y*z,x*y,x*z}, {y*z, x*y - y, x*z + z}}, {x*y*z})

F18E2 =  L=gfanBuchberger{x*y-y, x*z+z}

F18E3 =  gfanDoesIdealContain(L,{x*y*z})

F18E4 =  isSubset(ideal(y*z), ideal(x*y - y, x*z +z))

F19E0 =  QQ[x,y,z];

F19E1 =  L = gfan{x^2 + y*z, z^2 + y*z}

F19E2 =  gfanToLatex L

F19E3 =  gfanToLatex first L

F19E4 =  gfanToLatex({{x,z}, {x+y, x+z}}, "polynomialset" => true)

F20E0 =  QQ[x,y,z,u,v];

F20E1 =  L = {x^3, y^2};

F20E2 =  gfanKrullDimension(L)

F20E3 =  dim ideal L

F21E0 =  QQ[x,y,z]

F21E1 =  gfanTropicalStartingCone{x+y+z}

F21E2 =  QQ[x,y]

F21E3 =  I=ideal(x+y)

F21E4 =  gfanTropicalStartingCone(I)

F22E0 =  QQ[x,y];

F22E1 =  F = gfanToPolyhedralFan {markedPolynomialList{{x}, {x+y}}}

F22E2 =  G = gfanToPolyhedralFan {markedPolynomialList{{y^2}, {x+y^2}}}

F22E3 =  gfanFanProduct(F,G)

F23E0 =  QQ[x,y];

F23E1 =  F = gfanToPolyhedralFan gfan {x+y}

F23E2 =  G = gfanToPolyhedralFan gfan {x+y^2}

F23E3 =  gfanFanCommonRefinement(F,G)

F23E4 =  QQ[x,y];

F24E0 =  QQ[x,y];

F24E1 =  gfanTropicalHyperSurface(x^2 + x*y)

F25E0 =  QQ[x,y,z];

F25E1 =  polynomials = {x^2 + y^2 + z^2, y^2 + x^2 + z^2, y^2 + x^2 + z^2};

F25E2 =  markedTerms = {x^2, y^2, z^2};

F25E3 =  markedPolynomialList {markedTerms, polynomials}

F26E0 =  QQ[x,y]

F26E1 =  gfanMinkowskiSum { x + y + x*y }

F26E2 =  gfanMinkowskiSum { x + y + x*y + 1}

F26E3 =  gfanMinkowskiSum { x + y + x*y, x + y + x*y + 1}

F27E0 =  QQ[x,y,z];

F27E1 =  L = gfan {x*y + z}

F27E2 =  gfanStats L

F28E0 =  R = QQ[x,y,z];

F28E1 =  gfan(ideal(x^2*y -y^2, y^2*x - x^2))

F28E2 =  gfan({x^2*y -y^2, y^2*x - x^2}, "symmetry" => {{0,1,2}, {1,0,2}})

F28E3 =  gfan(markedPolynomialList {{y^5, x*y^2, x^2},{y^5-y^2,x*y^2 - y^4, x^2 -y^4}}, "g" => true)

F29E0 =  QQ[x,y,z]

F29E1 =  L = {x + y, x + z}

F29E2 =  gfanInitialForms(L, {1,2,1})

F29E3 =  gfanInitialForms(L, {1,2,1}, "ideal"=>true)

F29E4 =  gfanInitialForms(L, {1,2,1}, "ideal"=>true, "pair"=>true)

F29E5 =  gfanInitialForms({x*y+z, x*z + y}, {1,1,1}, "ideal"=>true)

F30E0 =  R=ZZ[x,y]

F30E1 =  I=ideal(x^2-y^2,2*x)

F30E2 =  F=gfanOverIntegers(I,"groebnerFan"=>true)

F30E3 =  rays F

F30E4 =  linealitySpace F

F30E5 =  maxCones F

F30E6 =  G=gfanOverIntegers(I,{1,0},"groebnerBasis"=>true)

F30E7 =  H=gfanOverIntegers(I,{1,0},"initialIdeal"=>true)

F31E0 =  QQ[x_1..x_3];

F31E1 =  C = gfanTropicalHyperSurface (x_1*x_2 + x_2*x_3 + x_1*x_3 + x_1*x_2*x_3)

F31E2 =  F = "..."

F32E0 =  QQ[x,y];

F32E1 =  F = gfanToPolyhedralFan {markedPolynomialList{{x}, {x+y}}};

F32E2 =  G = gfanToPolyhedralFan {markedPolynomialList{{y^2}, {x+y^2}}};

F33E0 =  QQ[a,b,c,d,e,f,g,h,i,j]

F33E1 =  gfanTropicalBruteForce gfanBuchberger ideal "bf-ah-ce, bg-ai-de, cg-aj-df, ci-bj-dh, fi-ej-gh"

F34E0 =  QQ[x,y];

F34E1 =  gfanTropicalBasis ideal {x^2+y^2, x^2-x*y}

F35E0 =  QQ[x,y];

F35E1 =  L = {x+y, x^2*y + x};

F35E2 =  gfanHomogenize(L, symbol z, "w" => {2,3})

F35E3 =  QQ[x,y,z];

F35E4 =  L = {x+y, x^2*y + x};

F35E5 =  homogenize(matrix{L}, z, {2,3,1})

F35E6 =  QQ[x,y];

F35E7 =  L = markedPolynomialList {{y}, {x+y}};

F35E8 =  gfanHomogenize(L, symbol z,  "w" => {2,3})

F36E0 =  QQ[x,y,z];

F36E1 =  L = gfanMarkPolynomialSet({x*y^3+z^4, x^2*z^2 + y^3*z}, {-1,2,5})

F36E2 =  gfanLeadingTerms L

F36E3 =  first L

F36E4 =  M = gfanMarkPolynomialSet({x^2*y+y*z^2, x*z^2 + x*y*z}, {-1,2,5})

F36E5 =  gfanLeadingTerms({M,L}, "m" => true)

F36E6 =  {M,L} / first

F37E0 =  QQ[x,y,z];

F37E1 =  gfanIsMarkedGroebnerBasis({x^2+y, y^3+z})

F37E2 =  gfanIsMarkedGroebnerBasis markedPolynomialList {{y,y^3}, {x^2+y, y^3+z}}

F38E0 =  QQ[x,y,z]

F38E1 =  P = gfanTropicalStartingCone {x+y+z}

F38E2 =  gfanTropicalTraverse P

F39E0 =  QQ[x,y,z];

F39E1 =  f = x + y + z;

F39E2 =  g = x + y;

F39E3 =  h = y + z;

F39E4 =  L = markedPolynomialList {{z, y}, {f,g}}

F39E5 =  M = markedPolynomialList {{x, y} , {f,h}}

F39E6 =  gfanPolynomialSetUnion(L,M)

F39E7 =  gfanPolynomialSetUnion({f,g},{f,h})

F40E0 =  R = QQ[z,a,b];

F40E1 =  S = QQ[x,y,z];

F40E2 =  L = markedPolynomialList{{x*y, z^2} , {x*y+ z^2, x*y + z^2}}

F40E3 =  gfanSubstitute(L, R)

F40E4 =  f = map(R,S, {z,a,b})

F40E5 =  f L

F41E0 =  gfanSecondaryFan {{1,0},{1,1}, {1,2}, {1,2}}

exampleIDS = {"F0E0", "F0E1", "F0E2", "F0E3", "F0E4", "F0E5", "F1E0", "F1E1", "F1E2", "F2E0", "F2E1", "F2E2", "F3E0", "F4E0", "F4E1", "F4E2", "F4E3", "F4E4", "F4E5", "F4E6", "F4E7", "F5E0", "F5E1", "F6E0", "F7E0", "F7E1", "F7E2", "F7E3", "F8E0", "F8E1", "F9E0", "F9E1", "F9E2", "F9E3", "F10E0", "F10E1", "F11E0", "F11E1", "F11E2", "F12E0", "F12E1", "F12E2", "F12E3", "F12E4", "F13E0", "F13E1", "F13E2", "F13E3", "F13E4", "F13E5", "F13E6", "F14E0", "F14E1", "F14E2", "F14E3", "F14E4", "F14E5", "F15E0", "F15E1", "F16E0", "F16E1", "F16E2", "F16E3", "F16E4", "F17E0", "F17E1", "F18E0", "F18E1", "F18E2", "F18E3", "F18E4", "F19E0", "F19E1", "F19E2", "F19E3", "F19E4", "F20E0", "F20E1", "F20E2", "F20E3", "F21E0", "F21E1", "F21E2", "F21E3", "F21E4", "F22E0", "F22E1", "F22E2", "F22E3", "F23E0", "F23E1", "F23E2", "F23E3", "F23E4", "F24E0", "F24E1", "F25E0", "F25E1", "F25E2", "F25E3", "F26E0", "F26E1", "F26E2", "F26E3", "F27E0", "F27E1", "F27E2", "F28E0", "F28E1", "F28E2", "F28E3", "F29E0", "F29E1", "F29E2", "F29E3", "F29E4", "F29E5", "F30E0", "F30E1", "F30E2", "F30E3", "F30E4", "F30E5", "F30E6", "F30E7", "F31E0", "F31E1", "F31E2", "F32E0", "F32E1", "F32E2", "F33E0", "F33E1", "F34E0", "F34E1", "F35E0", "F35E1", "F35E2", "F35E3", "F35E4", "F35E5", "F35E6", "F35E7", "F35E8", "F36E0", "F36E1", "F36E2", "F36E3", "F36E4", "F36E5", "F36E6", "F37E0", "F37E1", "F37E2", "F38E0", "F38E1", "F38E2", "F39E0", "F39E1", "F39E2", "F39E3", "F39E4", "F39E5", "F39E6", "F39E7", "F40E0", "F40E1", "F40E2", "F40E3", "F40E4", "F40E5", "F41E0"}
