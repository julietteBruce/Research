needsPackage "PrimaryDecomposition"

F12E0 =  R = QQ[a..d]

F12E1 =  M = coker(transpose matrix{{1_R,1,1,1}} | diagonalMatrix vars R)

F12E2 =  associatedPrimes M

F12E3 =  I = intersect(ideal(a^2,b), ideal(a,b,c^5), ideal(b^4,c^4))

F12E4 =  associatedPrimes I

F12E5 =  associatedPrimes comodule I

F12E6 =  R = QQ[x,y,z]/(x^2,x*y)

F12E7 =  associatedPrimes R

F12E8 =  R = QQ[a..f];

F12E9 =  I = monomialIdeal ideal"abc,bcd,af3,a2cd,bd3d,adf,f5"

F12E10 =  ass I

F12E11 =  primaryDecomposition I

F12E12 =  S = QQ[a,b,c,d,e];

F12E13 =  I1 = ideal(a,b,c);

F12E14 =  I2 = ideal(a,b,d);

F12E15 =  I3 = ideal(a,e);

F12E16 =  P = I1*I2*I3

F12E17 =  L1 = associatedPrimes P

F12E18 =  L2 = apply(associatedPrimes monomialIdeal P, J -> ideal J)

F12E19 =  M1 = set apply(L1, I -> sort flatten entries gens I)

F12E20 =  M2 = set apply(L2, I -> sort flatten entries gens I)

F12E21 =  assert(M1 === M2)

exampleIDS = {"F12E0", "F12E1", "F12E2", "F12E3", "F12E4", "F12E5", "F12E6", "F12E7", "F12E8", "F12E9", "F12E10", "F12E11", "F12E12", "F12E13", "F12E14", "F12E15", "F12E16", "F12E17", "F12E18", "F12E19", "F12E20", "F12E21"}
