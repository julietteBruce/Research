needsPackage "QuaternaryQuartics"

F0E0 =  S = ZZ/101[a..d]

F0E1 =  bettiStrataExamples S

F1E0 =  kk=QQ;

F1E1 =  U=kk[y0,y1,y2,y3,y4,y5,y6,y7];

F1E2 =  P4=ideal(y0,y1,y2);--a P4

F1E3 =  P5=ideal(y1,y2);--a P5

F1E4 =  X2=P4+ideal(random(2,U));--a quadric 3-fold in P4

F1E5 =  CI1223=ideal(y0)+ideal(random(2,P4),random(2,P4),random(3,X2)); --a complete intersection (1,2,2,3) that intersects  P4 in X2 and X1, a P3.

F1E6 =  X10=CI1223:X2;  --a reducible 3-fold X10 of degree 10 linked to the quadric threefold X2.  X10 is the union of X1 and  3-fold X9 of degree 9.

F1E7 =  Z6=X10+X2;----a complete intersection (1,1,1,2,3) surface  contained in X10

F1E8 =  X6=P5+ideal(random(2,Z6),random(3,Z6));-- X6 is a complete intersection (1,1,2,3) that intersects s10 in a hyperplane section of X6

F1E9 =  X16=intersect(X6,X10);--a 3-fold of degree 16 in P7 with betti table of type 430.  X16 is the union of X6, X1 and X9

F1E10 =  betti res X16

F2E0 =  kk = ZZ/31

F2E1 =  U = kk[y0,y1,y2,y3,y4,y5,y6,y7];

F2E2 =  setRandomSeed 8327432

F2E3 =  U1 = vars U

F2E4 =  P6 = matrix{{y1,y2,y3,y4,y5,y6,y7}} -- The hyperplane y0 == 0

F2E5 =  F1 = P6 * random(kk^7,kk^5);

F2E6 =  F2 = P6 * random(kk^7,kk^5);

F2E7 =  F3 = P6 * random(kk^7,kk^5);

F2E8 =  fg = transpose F1 | transpose F2 | transpose F3 ;

F2E9 =  ff = matrix{{y0,0,0,0,0},{0,0,0,0,0},{0,0,0,0,0}};

F2E10 =  fg = transpose fg + ff;    --3x5 matrix of rank 1 at (1:0:..:0), of rank 2 on fourfold Y

F2E11 =  Y = fg3 = minors(3,fg);

F2E12 =  fg2 = minors(2,fg);

F2E13 =  codim fg3

F2E14 =  codim fg2, degree fg2

F2E15 =  saturate fg2

F2E16 =  sf1 = fg^{0,1}

F2E17 =  sf2 = fg^{0,2}

F2E18 =  Z1 = sf12 = minors(2,sf1);--threefold rational scroll of degree 5 in Y

F2E19 =  Z2 = sf22 = minors(2,sf2);--threefold rational scroll of degree 5 in Y

F2E20 =  sf = trim intersect(Z1, Z2);-- threefold rational scroll over reducible conic of degree 10 in Y

F2E21 =  (dim Z1, degree Z1)

F2E22 =  betti sf  --in 11 cubics, so sf is in a cubic hypersurface section of Y

F2E23 =  k3 = ideal select(sf_*, f -> degree f == {3}); -- the cubics in the ideal

F2E24 =  k3=submatrix(gens sf,{0,1,2,3,4,5,6,7,8,9,10});  --the cubics in the ideal of sf

F2E25 =  k3=ideal flatten k3;

F2E26 =  X = cy = (k3:Z1):Z2; --the CY threefold, residual to sf in a cubic hypersurface section

F2E27 =  betti X

F2E28 =  betti res X

F2E29 =  (dim X, degree X)

F2E30 =  J = jacobian X;

F2E31 =  minors(4, sub(J, matrix{{1_kk,0,0,0,0,0,0,0}})) == 0

F2E32 =  sub(X, matrix{{1_kk,0,0,0,0,0,0,0}})

F3E0 =  kk = QQ;

F3E1 =  U=kk[y0,y1,y2,y3,y4,y5,y6,y7];

F3E2 =  X1 = ideal(y0,y5,y6,y7); -- the component X1, a P3

F3E3 =  P3a = ideal(y0,y1,y2,y3); --another  P3

F3E4 =  P4 = ideal(y0,y6,y7); --a P4

F3E5 =  P5 = ideal(y6,y7); --a P5

F3E6 =  P6 = ideal(y0); -- a P6

F3E7 =  CI22 = X1 + ideal(random(2,P3a),random(2,P3a));

F3E8 =  CIP3 = intersect(CI22,P3a);  --the union of CI22 and P3a

F3E9 =  CI1222 = trim(

          ideal(y0) +

          ideal(random(2,CIP3),random(2,CIP3),random(2,CIP3)));

F3E10 =  X7 = CI1222:P3a;   -- the 3-fold X7 linked (1,2,2,2) to PL

F3E11 =  (dim X7, degree X7)

F3E12 =  QX7 = ideal random(2,X7);--a quadric hypersurface that contains X7

F3E13 =  Z2a = X1 + QX7;-- quadric that contain X7 intersected with X1

F3E14 =  X7Z2 = intersect(Z2a,X7);-- the union of  Z2 and X7

F3E15 =  Z6 = P4 + QX7 + ideal(random(3,X7Z2));--a complete intersection 2,3 in P4

F3E16 =  X7Z6 = intersect(X7,Z6);  --the union of X7 and the complete intersection 2,3 in P4

F3E17 =  CI1233 = P6 + QX7 + ideal(random(3,X7Z6),random(3,X7Z6));--complete intersection 1233 containing  Z2a and a hyperplane section of X7

F3E18 =  X11 = CI1233:X7;  --a 3-fold of degree 11.

F3E19 =  Z4 = Z6:Z2a;--a Del Pezzo surface in P4

F3E20 =  Y2 = P5+ideal(random(2,Z4));--a quadric 4-fold in P5 that contain Z4

F3E21 =  Z2b = X1+Y2;-- another quadric surface in X1

F3E22 =  Z6b = intersect(Z4,Z2b);-- a complete intersection 2,3 different from Z6a, the union of Z4 and Z2b

F3E23 =  Y3 = P5 + ideal(random(3,Z6b));--a cubic 4-fold in P5 that contain Z6b

F3E24 =  X6 = Y2 + Y3;

F3E25 =  X18 = intersect(X11,X6,X1);--a AG 3-fold of degree 18, with betti table of type 210.

F3E26 =  (dim X18, degree X18)

F3E27 =  betti res X18

F4E0 =  R=QQ[x,y,z,t,Degrees=>{{1,0},{1,0},{0,1},{0,1}}]

F4E1 =  Q=QQ[a,b,c,d]

F4E2 =  seg=map(R,Q, gens (ideal {x,y}* ideal (z,t)))

F4E3 =  NTypes = hashTable{

         N100 => random(R^{3:{0,1}, 3:{1,0}, {0,0}}, R^{3:{0,-1}, 3:{-1,0}, {0,0}}),

         N683 => random(R^{{2,1}, {2,1}, {-1,1}}, R^{{-2,-1}, {-2,-1}, {1,-1}}),

         N550 => random(R^{{2,1}, {1,2}, {0,0}}, R^{{-2,-1}, {-1,-2}, {0,0}}),

         N400 => random(R^{{1,1}, {1,1}, {1,1}}, R^{{-1,-1}, {-1,-1}, {-1,-1}}),

         N300a => random(R^{{1,0}, {0,1}, 2:{1,1},{0,0}}, R^{{-1,0}, {0,-1}, 2:{-1,-1}, {0,0}}),

         N300b => randomBlockMatrix({R^{{1,0},{0,0}},  R^{{0,1}, 2:{1,1}}},{R^{{-1,0},{0,0}},  R^{{0,-1}, 2:{-1,-1}}}, {{0,random},{random,random}}),

         N300c => randomBlockMatrix({R^{{0,1}},R^{{0,0},{1,0}}, R^{ 2:{1,1}}},{R^{{0,-1}},R^{{0,0},{-1,0}}, R^{ 2:{-1,-1}}}, {{0,0,random},{0,random, random},{random, random, random}}),

         N310 => randomBlockMatrix({R^{{0,0}},R^{{0,1},{1,0}}, R^{ 2:{1,1}}},{R^{{0,0}},R^{{0,-1},{-1,0}}, R^{ 2:{-1,-1}}}, {{0,0,random},{0,random, random},{random, random, random}}),

         N430 => randomBlockMatrix({R^{{0,1}},R^{{0,0}},  R^{{0,0}}, R^{{1,1},{2,1}}},{R^{{0,-1}},R^{{0,0}},  R^{{0,0}},R^{ {-1,-1},{-2,-1}}}, {{0,0,random, random},{0,0,0,random},{random,0,random,random},{random, random, random, random}}),

         N320 => random(R^{{1,0}, 2:{0,1}, {2,1},{0,0}}, R^{{-1,0}, 2:{0,-1}, {-2,-1}, {0,0}}),

         N200 => random(R^{2:{1,0}, 2:{0,1}, {1,1}}, R^{2:{-1,0}, 2:{0,-1}, {-1,-1}}),

         N420 => randomBlockMatrix({R^{3:{1,1}},R^{2:{0,0}}},{ R^{3:{-1,-1}},R^{ 2:{0,0}}}, {{random, random},{random,0}}),

         N441a => random(R^{{1,2}, {2,1}, {0,1},{1,0},{-1,-1}}, R^{{-1,-2}, {-2,-1}, {0,-1},{-1,0}, {1,1}}),

         N441b => random(R^{{1,0}, {1,0}, {1,3}}, R^{{-1,0}, {-1,0}, {-1,-3}}),

         N551 => randomBlockMatrix({R^{{1,2}, {2,1},{0,0}}, R^{{1,1},{-1,-1}}},{ R^{{-1,-2}, {-2,-1},{0,0}},R^{{-1,-1},{1,1}}},{{random, random},{random,0}} ),

         N562 => randomBlockMatrix({R^{{1,2}, {2,1},{0,0}},R^{{0,1},{0,-1}}},{ R^{{-1,-2}, {-2,-1},{0,0}}, R^{{0,-1},{0,1}}},{{random, random},{random,0}}),

         };

F4E4 =  BettiPfaffian= N->(

         NN=N-transpose N; -- NN will be a random skew-matrix of the given shape

         K=pfaffians(numrows NN-1,NN);

         I=preimage (seg, K);

         Quartic=(inverseSystem (super basis(4,I)))_0; -- compute the quartic

         Betti=betti resolution inverseSystem Quartic;

         return Betti)

F4E5 =  netList for typeN in keys(NTypes) list {typeN, BettiPfaffian(NTypes#typeN)}

F5E0 =  S = ZZ/101[a..d]

F5E1 =  I = ideal(a^2, a*b^3, c*d)

F5E2 =  f = random(3, I)

F5E3 =  f % I == 0 -- so f is in the ideal I

F5E4 =  degree f == {3}

F6E0 =  K = ZZ/101;

F6E1 =  R = K[x_0..x_3];

F6E2 =  TwoSets3Points=transpose matrix{{1,0,0,0},{0,1,0,0},{1,1,0,0},{0,0,1,1},{0,0,1,0},{0,0,0,1}}**R

F6E3 =  I = pointsIdeal TwoSets3Points

F6E4 =  minimalBetti I

F6E5 =  SevenPointsOnTC=transpose matrix{{1,1,1,1},{1,2,4,8},{1,3,9,27},{1,4,16,64},{1,5,25,125},{1,6,36,216},{1,7,49,343}}**R

F6E6 =  J = pointsIdeal SevenPointsOnTC

F6E7 =  minimalBetti J

F6E8 =  netList(pack(2,apply({3,4,5,6,7,8,9,10},i->(minimalBetti pointsIdeal random(R^4,R^i)))))

F7E0 =  GetInv = (d,k,n)->(R=ZZ/2[x_1..x_k];

         quartics=super basis(d,R);

         MonList=first entries quartics;

         L=subsets(MonList,n);

         J=apply(L, j->(F=sum j;

                    InvSysF=ideal fromDual F;

                    Idegs=degrees source mingens InvSysF;

                         if (not ((member({1},Idegs)))) then minimalBetti InvSysF));

         Jlist = drop(unique J,1);  --get unique betti table, drop empty table from list

         netList pack(4,Jlist))    --format output to look nice

F7E1 =  GetInv(4,4,2)

F7E2 =  R=ZZ/101[x_1..x_4];

F7E3 =  IdealList={

       {x_2*x_4, x_1*x_4, x_1*x_2^2+x_3*x_4^2-x_4^3, x_1^2, x_2^3, x_3^2},

       {x_2*x_3, x_1*x_3, x_2*x_4^2, x_1*x_4^2, x_1*x_2^2-x_3*x_4^2, x_3*x_4^3-x_4^4, x_1^2, x_2^3, x_3^2},

       {x_2*x_4, x_1*x_4, x_3^2*x_4, x_1*x_2*x_3+x_3*x_4^2-x_4^3, x_1^2, x_2^2, x_3^3},

       {x_2*x_4^2, x_1*x_4^2, x_1*x_2*x_4+x_3*x_4^2-x_4^3, x_1*x_2*x_3-x_3*x_4^2, x_1^2, x_2^2, x_3^2},

       {x_2*x_3, x_1*x_3, x_1*x_2-x_3*x_4, x_3*x_4^3-x_4^4, x_2*x_4^3, x_1*x_4^3, x_1^2, x_2^2, x_3^2},

       {x_2*x_4, x_1*x_4, x_2*x_3, x_1*x_3, x_3*x_4^3-x_4^4, x_1^2*x_2^2-x_4^4, x_1^3, x_2^3, x_3^2},

       {x_2*x_3, x_1*x_3, x_2*x_4^2, x_1*x_4^2, x_3^2*x_4-x_4^3, x_1*x_2^2-x_4^3, x_1^2, x_2^3, x_3^3},

       {x_2*x_4^2, x_1*x_4^2, x_3^2*x_4-x_4^3, x_1*x_2*x_4-x_3*x_4^2, x_2*x_3^2, x_1*x_3^2, x_1*x_2*x_3-x_4^3, x_1^2, x_2^2, x_3^3},

       {x_2*x_3, x_1*x_3, x_1*x_2-x_3^2, x_3^2*x_4-x_4^3, x_1^2, x_2^2, x_3^3},

       {x_3*x_4, x_2*x_4, x_1*x_4, x_1*x_2*x_3-x_3^3, x_3^4-x_4^4, x_1^2, x_2^2},

       {x_1*x_4, x_3^2*x_4, x_2*x_3*x_4-x_4^3, x_1*x_3^2-x_3*x_4^2, x_1*x_2*x_3-x_2*x_4^2, x_1^2, x_2^2, x_3^3},

       {x_1*x_4, x_1*x_3, x_3*x_4^2, x_2*x_4^2, x_2^2*x_4, x_2*x_3^2-x_4^3, x_2^2*x_3, x_1*x_2^2-x_3^2*x_4, x_1^2, x_2^4, x_3^3},

       {x_3*x_4, x_2^2*x_4, x_1^2*x_4, x_2*x_3^2, x_1*x_3^2-x_2*x_4^2, x_2^2*x_3-x_1*x_4^2, x_1*x_2*x_3, x_2^3-x_1^2*x_3, x_1*x_2^2, x_1^2*x_2, x_1^3, x_2^4, x_3^3, x_4^3},

       {x_3*x_4 , x_2^2*x_4, x_3^3-x_1*x_2*x_4, x_2*x_3^2, x_2^2*x_3-x_1^2*x_4, x_1*x_2*x_3, x_1^2*x_3, x_2^3-x_1*x_3^2, x_1*x_2^2, x_1^3, x_2^4, x_3^4, x_4^2},

       {x_3*x_4^2, x_2*x_4^2, x_1*x_4^2, x_3^2*x_4,x_2^2*x_4, x_1^2*x_4, x_3^3-x_1*x_2*x_4, x_2*x_3^2, x_1*x_3^2, x_2^2*x_3, x_1*x_2*x_3-x_4^3, x_1^2*x_3, x_2^3-x_1*x_3*x_4, x_1*x_2^2, x_1^2*x_2,x_1^3-x_2*x_3*x_4},

       {x_1^2,x_2^2,x_3^2,x_4^2}};

F7E4 =  netList(pack(4,apply(IdealList,i->minimalBetti ideal i)))

F7E5 =  Qs = apply(IdealList, I -> first flatten entries inverseSystem(5, ideal I))

F7E6 =  for F in Qs list quarticType F

F8E0 =  S=QQ[h_1..h_4];

F8E1 =  SQ=QQ[x0,x1,y0,y1, Degrees=>{{1,0},{1,0},{0,1},{0,1}}];--quadric surface in PP^3

F8E2 =  A=gens kernel matrix{{h_1,h_2,h_3,h_4}};

F8E3 =  B=A++A++A++A++A++A;-- this gives a resolution of 6U

F8E4 =  F_{Q}=x0^4*y0^4+x1^4*y0^4+x0^3*x1*y0*y1^3+x0^2*x1^2*y0^2*y1^2+x1^4*y1^4

F8E5 =  IS23=((gens intersect(inverseSystem(F_{Q}), ((ideal(x0,x1))^2*(ideal(y0,y1))^3)))); --F_{Q}^\perp(2,3)

F8E6 =  ZX=sub((coefficients(

         IS23**matrix{{x0*y0,x1*y0,x0*y1,x1*y1}}

         ,  Monomials=>gens  ((ideal(x0,x1))^3*(ideal(y0,y1))^4)))_1, S)*B;-- the big matrix representing the multiplication map from the resolution of U\otimes F^{\perp}(2,3) to S(3,4)

F8E7 =  Z1=submatrix(ZX,{0,1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18},{1,2,4,6,8,10,13,15,17,19,22,23,25,28,29,32,34,35});

F8E8 =  D1=ideal det Z1;--rank <= 17 locus

F8E9 =  X1=decompose D1

F8E10 =  X=(X1)_5--the ideal generated by X(F_{Q})

F8E11 =  JX=ideal flatten jacobian X;

F8E12 =  JX=ideal mingens JX;

F8E13 =  codim JX

F8E14 =  IX=inverseSystem X;

F8E15 =  betti res IX

F8E16 =  quarticType X_0

F9E0 =  kk = ZZ/101;

F9E1 =  R = kk[x_0..x_3];

F9E2 =  HT = bettiStrataExamples R;

F9E3 =  netList for k in keys HT list (

         IGamma = pointsIdeal((HT#k)_0);

         J = doubling(8, IGamma);

         {k, betti res IGamma, betti res J}

         )

F10E0 =  loadPackage "RandomIdeals"

F10E1 =  kk = ZZ/101;

F10E2 =  R = kk[x_0..x_7];

F10E3 =  T = random(R^1,R^{-1,-1,-1});

F10E4 =  I = ideal(T);

F10E5 =  J = randomElementsFromIdeal({2,2,2},I);

F10E6 =  X=J:I;

F10E7 =  SS=X+I;

F10E8 =  SingSS= radical ideal singularLocus saturate SS;

F10E9 =  degree SingSS

F10E10 =  dim SingSS

F10E11 =  JJ = randomElementsFromIdeal({3},SS);

F10E12 =  IDD=X+JJ;

F10E13 =  PP=IDD:SS;

F10E14 =  BB= randomElementsFromIdeal({5},PP);

F10E15 =  BU=BB+X;

F10E16 =  BT=BU:PP;

F10E17 =  degree BT

F10E18 =  minors(4,(map(R/(decompose SingSS)_0,R)) (jacobian BT))

F11E0 =  setRandomSeed 4332367823

F11E1 =  kk = ZZ/101

F11E2 =  S = kk[a,b,c,d];

F11E3 =  B6 = stronglyStableIdeals(6, S)

F11E4 =  B6 = nondegenerateBorels(6, S)

F11E5 =  B6/minimalBetti

F11E6 =  matrix for J in B6 list for d to 6 list hilbertFunction(d, J)

F11E7 =  I = pointsIdeal randomPoints(S, 6)

F11E8 =  degree I

F11E9 =  hilbertPolynomial(I, Projective => false)

F11E10 =  J = monomialIdeal leadTerm I

F11E11 =  isBorel J

F11E12 =  betti res I

F11E13 =  needsPackage "GroebnerStrata"

F11E14 =  J = B6_1

F11E15 =  J = ideal(a^2,a*b,b^2,a*c,b*c^2,c^3)

F11E16 =  F = groebnerFamily J

F11E17 =  U = ring F;

F11E18 =  T = coefficientRing U

F11E19 =  netList F_*

F11E20 =  L = trim groebnerStratum F;

F11E21 =  assert(dim L == 18)

F11E22 =  elapsedTime isPrime L

F11E23 =  I = pointsIdeal randomPoints(S, 6)

F11E24 =  degree I

F11E25 =  radical I == I

F11E26 =  betti res I

F11E27 =  (CF, H) = nonminimalMaps F;

F11E28 =  U = ring CF

F11E29 =  CF

F11E30 =  betti(CF, Weights=>{1}) -- alas, it is a poor non-minimal resolution

F11E31 =  assert isHomogeneous CF -- but it is homogeneous, as it needs to be.

F11E32 =  keys H

F11E33 =  M1 = H#(2,3) -- rank is 0, 1, or 2.

F11E34 =  M2 = H#(3,4) -- rank is 1 or 2

F11E35 =  M3 = H#(3,5) -- maximal rank, can ignore

F11E36 =  M4 = H#(4,6) -- maximal rank, can ignore

F11E37 =  ideal M1 == minors(2, M2)

F11E38 =  L441 = trim(L + ideal M1);

F11E39 =  elapsedTime compsL441 = decompose L441;

F11E40 =  #compsL441

F11E41 =  compsL441/dim -- two components, of dimensions 14 and 16.

F11E42 =  compsL441/dim == {16, 14}

F11E43 =  pta = randomPointOnRationalVariety compsL441_0

F11E44 =  Fa = sub(F, (vars S) | pta)

F11E45 =  betti res Fa

F11E46 =  netList decompose Fa -- this one is 5 points on a plane, and another point

F11E47 =  CFa = minimalPrimes Fa

F11E48 =  lin = CFa_1_0 -- a linear form, defining a plane.

F11E49 =  CFa/degree

F11E50 =  CFa/(I -> lin % I == 0) -- so 5 points on the plane.

F11E51 =  degree(Fa : (Fa : lin))  -- somewhat simpler(?) way to see the ideal of the 5 points

F11E52 =  ptb = randomPointOnRationalVariety compsL441_1

F11E53 =  Fb = sub(F, (vars S) | ptb)

F11E54 =  betti res Fb

F11E55 =  netList decompose Fb --

F11E56 =  netList for x in subsets(decompose Fb, 3) list intersect(x#0, x#1, x#2)

F11E57 =  pt0 = randomPointOnRationalVariety(compsL441_0)

F11E58 =  pt1 = randomPointOnRationalVariety(compsL441_1)

F11E59 =  I0 = sub(sub(F, (vars ring F) | sub(pt0, ring F)), S)

F11E60 =  I1 = sub(sub(F, (vars ring F) | sub(pt1, ring F)), S)

F11E61 =  betti res I0

F11E62 =  betti res I1

F11E63 =  netList decompose I0

F11E64 =  netList decompose I1

F11E65 =  L430 = (trim minors(2, M1)) + groebnerStratum F;

F11E66 =  C = res(I, FastNonminimal => true)

F11E67 =  betti C

F11E68 =  m1 = submatrixByDegrees(C.dd_2, {3}, {3})

F11E69 =  m2 = submatrixByDegrees(C.dd_3, {4}, {4})

F11E70 =  minimalBetti I

F12E0 =  kk = ZZ/101;

F12E1 =  R = kk[x_0..x_3];

F12E2 =  HT = bettiStrataExamples R;

F12E3 =  netList prepend(

         {"type", "I = ideal of points", "quadrics in I", "Fperp", "doubling of points"},

         sort for k in keys HT list (

         I := pointsIdeal((HT#k)_0);

         Q := ideal super basis(2, I);

         F := quartic (HT#k)_0;

         {k, minimalBetti I,

             minimalBetti Q,

             minimalBetti inverseSystem F,

             minimalBetti doubling(8, I)}

         ))

F13E0 =  kk = ZZ/101;

F13E1 =  R = kk[x_0..x_3];

F13E2 =  HT = bettiStrataExamples(R);

F13E3 =  MGamma = (HT#"[300c]")_0

F13E4 =  IGamma = pointsIdeal MGamma;

F13E5 =  F = quartic MGamma;

F13E6 =  quarticType F

F13E7 =  Fperp = inverseSystem F;

F13E8 =  betti res Fperp

F13E9 =  Q = ideal super basis (2,Fperp);

F13E10 =  betti res Q

F13E11 =  J = ideal(random(2,IGamma),random(2,IGamma),random(3,IGamma));

F13E12 =  betti res J

F13E13 =  Ip = J : IGamma

F13E14 =  betti res (Fperp:Ip)

F13E15 =  l = random(1,R);

F13E16 =  betti res (IGamma+l*Ip)

F14E0 =  kk = ZZ/101;

F14E1 =  randomPoints(kk, 5, 10)

F14E2 =  randomPoints(kk, 5, 10, Normalize => true)

F14E3 =  S = kk[a..d];

F14E4 =  M1 = randomPoints(S, 10)

F14E5 =  M2 = randomPoints(S, 6, Normalize=>true)

F14E6 =  pointsIdeal M1

F14E7 =  pointsIdeal M2

F14E8 =  M3 = randomBlockMatrix({S^2, S^2}, {S^3, S^3}, {{random, 0}, {0, random}})

F14E9 =  pointsIdeal M3

F15E0 =  kk=QQ;

F15E1 =  U=kk[y0,y1,y2,y3,y4,y5,y6,y7];

F15E2 =  P3=ideal(y0,y1,y2,y3);--a P3

F15E3 =  P4=ideal(y1,y2,y3);--a P4

F15E4 =  P6=ideal(y0);--a P6

F15E5 =  M24=matrix{{y1,y2,random(2,U),random(2,U)},{y2,y3,random(2,U),random(2,U)}};--a 2x4 matrix with two columns of linear and two of quadratic forms

F15E6 =  X12=P6+minors(2,M24);--a 3-fold of degree 12 in P6

F15E7 =  Z4=P3+X12;--a quartic surface in X12

F15E8 =  X4=P4+ideal(random(4,Z4));--a quartic 3-fold

F15E9 =  X16=intersect(X12,X4);-- a 3-fold of degree 16 in P7 with betti table of type 441

F15E10 =  betti res X16

F16E0 =  kk = ZZ/101;

F16E1 =  R = kk[x_0..x_3];

F16E2 =  HT = bettiStrataExamples(R);

F16E3 =  MGamma = (HT#"[300b]")_0

F16E4 =  F = quartic MGamma;

F16E5 =  quarticType F

F16E6 =  Fperp = inverseSystem F;

F16E7 =  betti res Fperp

F16E8 =  IGamma = pointsIdeal MGamma;

F16E9 =  degree IGamma

F16E10 =  decompose IGamma -- 7 points, therefore the rank is at most 7

F16E11 =  betti res IGamma

F16E12 =  Q = ideal super basis(2,IGamma);

F16E13 =  betti res Q

F16E14 =  Ip = Q:IGamma;

F16E15 =  betti res Ip

F16E16 =  v = random(2,(Fperp:Ip));

F16E17 =  Fperp == IGamma + v*Ip

F17E0 =  kk=QQ;

F17E1 =  U=kk[y0,y1,y2,y3,y4,y5,y6,y7];

F17E2 =  P5=ideal(y0,y1);--a P5

F17E3 =  P3a=ideal(y0,y1,y2,y3);-- a P3

F17E4 =  P3b=ideal(y0,y1,y2,y4);-- another P3

F17E5 =  P4a=ideal(y0,y2,y3);-- a P4

F17E6 =  P4b=ideal(y1,y2,y4);-- a P4

F17E7 =  X2=ideal(y0,y1,y2,y3*y4);--a reducible quadric

F17E8 =  CI1133=P5+ideal(random(3,X2),random(3,X2));--a complete intersection (1,1,3,3) that contain X2.

F17E9 =  X7=CI1133:X2;  -- a 3-fold of degree 7, linked (1,1,3,3) to X2

F17E10 =  (dim X7, degree X7)

F17E11 =  Z3a=P3a+X7; -- a cubic surface

F17E12 =  Z4a=intersect(Z3a,P3b);-- the union of Z3a and P3b

F17E13 =  X4a=P4a+ideal(random(4,Z4a));-- a quartic 3-fold in P4 that contains a plane in P3b and the cubic surface Z3

F17E14 =  (dim X4a, degree X4a)

F17E15 =  Z3b=X7+P3b;-- a cubic surface

F17E16 =  Z4b=intersect(Z3b,P3a);-- the union of Z3b and P3b

F17E17 =  X4b=P4b+ideal(random(4,Z4b));-- a quartic 3-fold in P4 that contains a plane in P3b and the cubic surface Z3

F17E18 =  (dim X4b, degree X4b)

F17E19 =  X15=intersect(X7,X4a,X4b);--a 3-fold of degree 15, with betti table of type [562], with three components, X7 of degree 7, and X4a and X4b of degree 4.

F17E20 =  (dim X15, degree X15)

F17E21 =  betti res X15

F18E0 =  kk=QQ;

F18E1 =  U=kk[y0,y1,y2,y3,y4,y5,y6,y7];

F18E2 =  P5c=ideal(y0,y1);  -- a P5

F18E3 =  P5a=ideal(y2,y3);  --P5 of S8

F18E4 =  P5b=ideal(y4,y5);   --P5 of S7

F18E5 =  P3ac=P5a+P5c;-- P3 intersection of P5a and P5c

F18E6 =  P3bc=P5b+P5c;

F18E7 =  P1=P5a+P5b+P5c; --a line L, the intersection of all three P5s

F18E8 =  F=matrix{{y0,random(2,U),random(2,P1)},{y1,random(2,U),random(2,P1)}};

F18E9 =  X8=P5a+minors(2,F);-- a 3-fold of degree 8 in P5a

F18E10 =  Z4=P5c+X8; -- a quartic surface in P3ac that contains L

F18E11 =  XY=P5c+ideal(random(2,intersect(P5a,P5b)),random(4,intersect(Z4,P5b)));

F18E12 =  X7=XY:P3bc;--a 3-fold of degree 7 in P5b

F18E13 =  (dim X7, degree X7)

F18E14 =  betti res X7

F18E15 =  X15=intersect(X7,X8);--a 3-fold of degree 15 in P7 with betti table of type [562],  the union of X7 and X8.

F18E16 =  (dim X15, degree X15)

F18E17 =  betti res X15

F19E0 =  S = ZZ/101[a..d]

F19E1 =  I = ideal(a*c, a*b, a^2, c^3, b*c^2, b^2*c, b^3)

F19E2 =  B = betti res I

F19E3 =  smallerBettiTables B

F19E4 =  netList pack(4, oo)

F20E0 =  kk=QQ;

F20E1 =  U=kk[y0,y1,y2,y3,y4,y5,y6,y7];

F20E2 =  P5a=ideal(y0,y1);--a P5 containing P3c

F20E3 =  P5b=ideal(y2,y3);--another P5 containing P3c

F20E4 =  P3=P5a+P5b;--the common P3 of P5a and P5b

F20E5 =  F0=matrix{{random(2,U),random(2,U)},{random(2,U),random(2,U)}};--a 2x2 matrix of quadrics,

F20E6 =  F1=matrix{{y2},{y3}}|F0;--a 2x3 matrix, one columns of linear forms, and two of quadrics,

F20E7 =  X8a=P5a+minors(2,F1);--a 3-fold of degree 8 in P5a linked (1,1,3,3) to P3

F20E8 =  F2=matrix{{y0},{y1}}|F0;--a 2x3 matrix, one columns of linear forms, and two of quadrics,

F20E9 =  X8b=P5b+minors(2,F2);--a 3-fold of degree 8 in P5b linked  (1,1,3,3) to P3

F20E10 =  X16=intersect(X8a,X8b);-- a 3-fold of degree 16 in P7 with betti table of type 441b

F20E11 =  betti res X16

F21E0 =  kk = ZZ/101;

F21E1 =  R = kk[x_0..x_3];

F21E2 =  Q618 = (x_0^2+x_1^2+x_2^2+x_3^2)^2+x_0^4+x_1^4+x_2^4+x_3^4

F21E3 =  minimalBetti inverseSystem Q618

F21E4 =  quarticType Q618

F21E5 =  Q619 = (x_0^2+x_1^2+x_2^2+x_3^2)^2

F21E6 =  minimalBetti inverseSystem Q619

F21E7 =  Q620V = x_0^4-x_1*x_2*x_3*(x_1+x_2+x_3)

F21E8 =  minimalBetti inverseSystem Q620V

F21E9 =  quarticType Q620V

F21E10 =  Q620D = x_0^4+x_1^4+x_2^4+x_3^4-8*x_0*x_1*x_2*x_3

F21E11 =  minimalBetti inverseSystem Q620D

F21E12 =  quarticType Q620D

F21E13 =  x5=x_0+x_1+x_2+x_3

F21E14 =  Q = x_0^4+x_1^4+x_2^4+x_3^4+x5^4-random(kk)*(x_0^2+x_1^2+x_2^2+x_3^2+x5^2)^2;

F21E15 =  minimalBetti inverseSystem Q

F21E16 =  Q = x_0^4+x_1^4+x_2^4+x_3^4+x5^4;

F21E17 =  minimalBetti inverseSystem Q

F21E18 =  quarticType Q

F22E0 =  kk = ZZ/101;

F22E1 =  R = kk[x_0..x_3];

F22E2 =  HT = bettiStrataExamples R;

F22E3 =  netList prepend(

         {"type", "I = ideal of points", "Fperp", "doubling of points"},

         sort for k in keys HT list (

         I := pointsIdeal((HT#k)_0);

         F := quartic (HT#k)_0;

         {k, minimalBetti I,

             minimalBetti inverseSystem F,

             minimalBetti doubling(8, I)}

         ))

F23E0 =  kk = ZZ/101;

F23E1 =  R = kk[x_0..x_3];

F23E2 =  HT = bettiStrataExamples(R);

F23E3 =  MGamma = (HT#"[300a]")_0

F23E4 =  linforms = flatten entries((vars R) * MGamma);

F23E5 =  F = sum for ell in linforms list random(kk)*ell^4

F23E6 =  Fperp = inverseSystem F;

F23E7 =  betti res Fperp

F23E8 =  Q = ideal super basis(2,Fperp);

F23E9 =  Q == pointsIdeal(MGamma)

F24E0 =  S = ZZ/101[a..d];

F24E1 =  Bs = nondegenerateBorels(7, S);

F24E2 =  netList Bs

F24E3 =  netList pack(4, Bs/minimalBetti)

F24E4 =  Bs2 = nondegenerateBorels(7, S, Sort => true);

F24E5 =  netList Bs2

F24E6 =  code methods nondegenerateBorels

F25E0 =  GetQuads = (d,k,n)->(

         R=ZZ/2[x_1..x_k];

         quartics=super basis(d,R);

         MonList=apply(rank source quartics, i->quartics_(0,i));

         L=subsets(MonList,n);

         J=apply(L, j->(F=gens ideal sum j;

         InvSysF=fromDual F;

         Idegs=degrees source mingens ideal InvSysF;

         if (not ((member({1},Idegs)))) then minimalBetti coker super basis(2, ideal InvSysF)));

         Jlist =drop(unique J,1);

         netList pack(4,Jlist))

F25E1 =  GetQuads(4,4,2)

F26E0 =  S = ZZ/101[a..d]

F26E1 =  I = monomialCurveIdeal(S, {2,5,9})

F26E2 =  g = randomHomomorphism({4}, module I, S^1)

F26E3 =  isWellDefined g

F26E4 =  super g

F26E5 =  J = ideal image g

F26E6 =  random(4, I)

F26E7 =  R = S/I

F26E8 =  E = Ext^2(comodule I, S^{{-4}})

F26E9 =  ER = E ** R

F26E10 =  isHomogeneous ER

F26E11 =  f = randomHomomorphism(3, R^1, ER)

F26E12 =  isWellDefined f

F26E13 =  source f == ER

F26E14 =  target f == R^1

F26E15 =  degree f == {3}

F26E16 =  ker f == 0

F26E17 =  J = ideal image f

F27E0 =  kk = QQ;

F27E1 =  U = kk[y0,y1,y2,y3,y4,y5,y6,y7];

F27E2 =  P4a = ideal(y0,y1,y2); --a P4

F27E3 =  P4b = ideal(y4,y5,y6); --another P4

F27E4 =  P5 = ideal(y4,y5);-- a P5 containing P4b

F27E5 =  P6 = ideal(y6);--a P6 containing P4b

F27E6 =  CI222 = ideal(random(2,P4a),random(2,P4a),random(2,P4a));--a complete intersection (2,2,2) containing P4a

F27E7 =  Y7 = CI222:P4a; -- a 4-fold of degree 7 linked (2,2,2) to a P4a

F27E8 =  CI23 = ideal(random(2,Y7),random(3,Y7));--a complete intersection (2,3) that contains Y7

F27E9 =  Z6 = P4b + CI23; --a complete intersection (2,3) in P4b that contain the intersection of P4b and Y7

F27E10 =  X6 = P5 + ideal(random(2,Z6),random(3,Z6));-- a complete intersection (2,3) in P5 with hyperplane section Z6

F27E11 =  Y67 = intersect(Y7,Z6);--the union of the 4-fold Y7 and the Z6

F27E12 =  Y18 = CI23 + random(3,Y67);--a complete intersection (2,3,3) that contains Y7 and Z6

F27E13 =  Y11 = Y18:Y7;-- a 4-fold of degree 11 that contains Z6

F27E14 =  X11 = P6 + Y11; --a 3-fold of degree 11 that contains Z6

F27E15 =  X17 = intersect(X11,X6); -- a AG 3-fold in P7 of type (310)

F27E16 =  (dim X17, degree X17)

F27E17 =  betti res X17

F28E0 =  kk = QQ;

F28E1 =  U = kk[y0,y1,y2,y3,y4,y5,y6,y7];

F28E2 =  u7 = ideal vars U;

F28E3 =  P6 = ideal(y0); -- a P6

F28E4 =  P4 = ideal(y1,y2,y3); --a P4

F28E5 =  q1=(gens u7)*random(kk^8,kk^7);

F28E6 =  q2=(gens u7)*random(kk^8,kk^7);

F28E7 =  q3=(gens P4)*random(kk^3,kk^7);

F28E8 =  q4=(gens P4)*random(kk^3,kk^7);

F28E9 =  q5=(gens P4)*random(kk^3,kk^7);

F28E10 =  q6=(gens P4)*random(kk^3,kk^7);

F28E11 =  q7=(gens P4)*random(kk^3,kk^7);

F28E12 =  F1=transpose q1|transpose q2|transpose q3|transpose q4|

F28E13 =  F = F1-transpose F1

F28E14 =  Y14 = pfaffians (6,F); --a 4-fold of degree 14 that contain P4

F28E15 =  (dim Y14, degree Y14)

F28E16 =  isSubset(Y14, P4)

F28E17 =  Y13 = Y14:P4;--a 4-fold of degree 13

F28E18 =  dim Y13

F28E19 =  degree Y13

F28E20 =  X4 = trim(Y13 + P4);

F28E21 =  X13 = trim(P6 + Y13);--  A 3-fold of degree 13 in  P6

F28E22 =  dim X13

F28E23 =  degree X13

F28E24 =  X = intersect (X4,X13);  --A 3-fold of degree 17 in P7, the union of X13 and X4, with betti table of type 331

F28E25 =  dim X

F28E26 =  degree X

F28E27 =  betti res X

F28E28 =  Z = trim(X13 + X4);

F28E29 =  dim Z -- 3, therefore a surface in projective space

F28E30 =  degree Z

F28E31 =  dim X4

F28E32 =  X4 + ideal(y0) == Z

F29E0 =  S = ZZ/32003[a..d]

F29E1 =  M = randomPoints(S, 6, Normalize => true)

F29E2 =  I = pointsIdeal M

F29E3 =  betti res I

F30E0 =  S = ZZ/101[a..d];

F30E1 =  I = pointsIdeal randomPoints(S, 6)

F30E2 =  betti res I

F30E3 =  doubling(5, I)

F30E4 =  J = doubling(8, I)

F30E5 =  betti res J

F30E6 =  S = ZZ/101[x_0..x_5];

F30E7 =  M = genericSymmetricMatrix(S, 3)

F30E8 =  I = trim minors(2, M)

F30E9 =  doubling(4, I) -- no such map exists

F30E10 =  betti res doubling(6,I)

F30E11 =  betti res doubling(7,I)

F30E12 =  betti res doubling(8,I)

F30E13 =  J = doubling(8, I);

F30E14 =  (dim J, degree J)

F30E15 =  (dim I, degree I)

F30E16 =  S = ZZ/101[x_0..x_8];

F30E17 =  M = genericMatrix(S, 3, 3)

F30E18 =  I = trim minors(2, M)

F30E19 =  betti res doubling(8,I)

F30E20 =  J = doubling(8, I);

F30E21 =  (dim J, degree J)

F30E22 =  (dim I, degree I)

F31E0 =  S = ZZ/101[a..d]

F31E1 =  H = bettiStrataExamples S

F31E2 =  keys H

F31E3 =  netList for k in sort keys H list (

         F := quartic first H#k;

         {k, minimalBetti inverseSystem F, quarticType F}

         )

F31E4 =  quarticType(a^4 + b^4 + c^4 + d^4 - 3*a*b*c*d)

F31E5 =  quarticType(a*b*c*d)

F32E0 =  kk=ZZ/101

F32E1 =  S=kk[x0,x1,x2]

F32E2 =  M=random(S^5,S^{6:-1});--a random (5x6) matrix linear forms in P2

F32E3 =  m5=minors(5,M);--the ideal of 15 points

F32E4 =  m52=saturate m5^2;--the square of the ideal of 15 points, saturated, with no forms of degree 8.

F32E5 =  betti res m52

F32E6 =  kk=ZZ/101

F32E7 =  S=kk[x0,x1,x2,x3,x4,x5,x6,x7];

F32E8 =  M=random(S^3,S^{5:-1});--a random (3x5) matrix linear forms in P7

F32E9 =  m3=minors(3,M);--the ideal of a 4-fold Y,

F32E10 =  M12=submatrix (M, {0,1},{0,1,2,3,4});

F32E11 =  M23=submatrix (M, {1,2},{0,1,2,3,4});

F32E12 =  S1=minors (2,M12);-- a divisor in Y of degree 5

F32E13 =  S2=minors (2,M23);-- another divisor equivalent to S1

F32E14 =  S12=saturate intersect(S1,S2);--the divisor S1+S2 on Y

F32E15 =  betti res S12 --the ten cubics are the same as the ones in the ideal of Y

F33E0 =  S = ZZ/101[a..d]

F33E1 =  M = transpose matrix(S, {{1,0,0,0}, {0,1,0,0}})

F33E2 =  quartic M

F33E3 =  H = bettiStrataExamples S

F33E4 =  keys H

F33E5 =  M = first H#"[420]"

F33E6 =  F = quartic M

F33E7 =  lins := flatten entries((vars S) * M)

F33E8 =  F1 = sum for g in lins list g^4

F33E9 =  F1 == F

F33E10 =  I = inverseSystem F

F33E11 =  (degree I, codim I, regularity(S^1/I))

F33E12 =  minimalBetti I

F34E0 =  kk=QQ;

F34E1 =  U=kk[y0,y1,y2,y3,y4,y5,y6,y7];

F34E2 =  P4=ideal(y0,y1,y2);--a P4

F34E3 =  T3=minors(2,matrix{{y0,y1,y2},{y3,y4,y5}});--a cubic 5-fold scroll with P4 as a ruling

F34E4 =  X2=P4+ideal(random(2,U));-- a quadric 3-fold in T3

F34E5 =  X18=T3+ideal(random(2,X2),random(3,X2));--a 3-fold of degree 18 in T3 that contains X2

F34E6 =  X16=X18:X2;--a 3-fold of degree 16 in T3 with betti table of type 420

F34E7 =  (dim X16, degree X16)

F34E8 =  betti res X16

F35E0 =  S = ZZ/101[a..d]

F35E1 =  randomBlockMatrix({S^3, S^1}, {S^3, S^1}, {{random, random}, {0, 1}})

F35E2 =  S = ZZ/101[a..d]

F35E3 =  randomBlockMatrix({S^3, S^2}, {S^3, S^2, S^{2:-1}}, {{random, random, 0}, {0, 1, random}})

F36E0 =  kk = ZZ/101;

F36E1 =  R = kk[x_0..x_3];

F36E2 =  HT = bettiStrataExamples R;

F36E3 =  netList for k in {"[420]","[430]","[441a]","[441b]"} list (

             if doubling(8,pointsIdeal((HT#k)_0))===null then

             {k, betti res pointsIdeal((HT#k)_0), "No injective map"}

         else

             {k, betti res pointsIdeal((HT#k)_0),

                 betti res doubling(8,pointsIdeal((HT#k)_0))}

         )

F36E4 =  Mpts = randomPoints(R,4,2)|(randomPoints(R,2,4)||(randomPoints(R,2,4)*0));

F36E5 =  IGamma = pointsIdeal(Mpts);

F36E6 =  betti res IGamma

F36E7 =  netList for k in {2,3,4,5,6} list (

         if doubling(k+4,IGamma)===null then {k, "No injective map"}

         else {k, betti res doubling(k+4,IGamma)})

F37E0 =  kk = QQ;

F37E1 =  U = kk[y0,y1,y2,y3,y4,y5,y6,y7];

F37E2 =  P3 = ideal(y0,y1,y2,y3); --a P3

F37E3 =  CI = ideal(y0, random(2, P3), random(2, P3), random(3, P3));

F37E4 =  X11 = CI : P3; -- degree 11, codim 4.

F37E5 =  (codim X11, degree X11)

F37E6 =  s114 = X11 + P3; -- intersect X11 with the P3.  Take a random quartic in this ideal.

F37E7 =  X4 = ideal(y1,y2,y3, random(4, s114));

F37E8 =  X15 = intersect(X4, X11);

F37E9 =  assert isPrime(X4 + X15) -- a quartic in P^3.

F37E10 =  (dim X15, degree X15)

F37E11 =  betti resolution X15

exampleIDS = {"F0E0", "F0E1", "F1E0", "F1E1", "F1E2", "F1E3", "F1E4", "F1E5", "F1E6", "F1E7", "F1E8", "F1E9", "F1E10", "F2E0", "F2E1", "F2E2", "F2E3", "F2E4", "F2E5", "F2E6", "F2E7", "F2E8", "F2E9", "F2E10", "F2E11", "F2E12", "F2E13", "F2E14", "F2E15", "F2E16", "F2E17", "F2E18", "F2E19", "F2E20", "F2E21", "F2E22", "F2E23", "F2E24", "F2E25", "F2E26", "F2E27", "F2E28", "F2E29", "F2E30", "F2E31", "F2E32", "F3E0", "F3E1", "F3E2", "F3E3", "F3E4", "F3E5", "F3E6", "F3E7", "F3E8", "F3E9", "F3E10", "F3E11", "F3E12", "F3E13", "F3E14", "F3E15", "F3E16", "F3E17", "F3E18", "F3E19", "F3E20", "F3E21", "F3E22", "F3E23", "F3E24", "F3E25", "F3E26", "F3E27", "F4E0", "F4E1", "F4E2", "F4E3", "F4E4", "F4E5", "F5E0", "F5E1", "F5E2", "F5E3", "F5E4", "F6E0", "F6E1", "F6E2", "F6E3", "F6E4", "F6E5", "F6E6", "F6E7", "F6E8", "F7E0", "F7E1", "F7E2", "F7E3", "F7E4", "F7E5", "F7E6", "F8E0", "F8E1", "F8E2", "F8E3", "F8E4", "F8E5", "F8E6", "F8E7", "F8E8", "F8E9", "F8E10", "F8E11", "F8E12", "F8E13", "F8E14", "F8E15", "F8E16", "F9E0", "F9E1", "F9E2", "F9E3", "F10E0", "F10E1", "F10E2", "F10E3", "F10E4", "F10E5", "F10E6", "F10E7", "F10E8", "F10E9", "F10E10", "F10E11", "F10E12", "F10E13", "F10E14", "F10E15", "F10E16", "F10E17", "F10E18", "F11E0", "F11E1", "F11E2", "F11E3", "F11E4", "F11E5", "F11E6", "F11E7", "F11E8", "F11E9", "F11E10", "F11E11", "F11E12", "F11E13", "F11E14", "F11E15", "F11E16", "F11E17", "F11E18", "F11E19", "F11E20", "F11E21", "F11E22", "F11E23", "F11E24", "F11E25", "F11E26", "F11E27", "F11E28", "F11E29", "F11E30", "F11E31", "F11E32", "F11E33", "F11E34", "F11E35", "F11E36", "F11E37", "F11E38", "F11E39", "F11E40", "F11E41", "F11E42", "F11E43", "F11E44", "F11E45", "F11E46", "F11E47", "F11E48", "F11E49", "F11E50", "F11E51", "F11E52", "F11E53", "F11E54", "F11E55", "F11E56", "F11E57", "F11E58", "F11E59", "F11E60", "F11E61", "F11E62", "F11E63", "F11E64", "F11E65", "F11E66", "F11E67", "F11E68", "F11E69", "F11E70", "F12E0", "F12E1", "F12E2", "F12E3", "F13E0", "F13E1", "F13E2", "F13E3", "F13E4", "F13E5", "F13E6", "F13E7", "F13E8", "F13E9", "F13E10", "F13E11", "F13E12", "F13E13", "F13E14", "F13E15", "F13E16", "F14E0", "F14E1", "F14E2", "F14E3", "F14E4", "F14E5", "F14E6", "F14E7", "F14E8", "F14E9", "F15E0", "F15E1", "F15E2", "F15E3", "F15E4", "F15E5", "F15E6", "F15E7", "F15E8", "F15E9", "F15E10", "F16E0", "F16E1", "F16E2", "F16E3", "F16E4", "F16E5", "F16E6", "F16E7", "F16E8", "F16E9", "F16E10", "F16E11", "F16E12", "F16E13", "F16E14", "F16E15", "F16E16", "F16E17", "F17E0", "F17E1", "F17E2", "F17E3", "F17E4", "F17E5", "F17E6", "F17E7", "F17E8", "F17E9", "F17E10", "F17E11", "F17E12", "F17E13", "F17E14", "F17E15", "F17E16", "F17E17", "F17E18", "F17E19", "F17E20", "F17E21", "F18E0", "F18E1", "F18E2", "F18E3", "F18E4", "F18E5", "F18E6", "F18E7", "F18E8", "F18E9", "F18E10", "F18E11", "F18E12", "F18E13", "F18E14", "F18E15", "F18E16", "F18E17", "F19E0", "F19E1", "F19E2", "F19E3", "F19E4", "F20E0", "F20E1", "F20E2", "F20E3", "F20E4", "F20E5", "F20E6", "F20E7", "F20E8", "F20E9", "F20E10", "F20E11", "F21E0", "F21E1", "F21E2", "F21E3", "F21E4", "F21E5", "F21E6", "F21E7", "F21E8", "F21E9", "F21E10", "F21E11", "F21E12", "F21E13", "F21E14", "F21E15", "F21E16", "F21E17", "F21E18", "F22E0", "F22E1", "F22E2", "F22E3", "F23E0", "F23E1", "F23E2", "F23E3", "F23E4", "F23E5", "F23E6", "F23E7", "F23E8", "F23E9", "F24E0", "F24E1", "F24E2", "F24E3", "F24E4", "F24E5", "F24E6", "F25E0", "F25E1", "F26E0", "F26E1", "F26E2", "F26E3", "F26E4", "F26E5", "F26E6", "F26E7", "F26E8", "F26E9", "F26E10", "F26E11", "F26E12", "F26E13", "F26E14", "F26E15", "F26E16", "F26E17", "F27E0", "F27E1", "F27E2", "F27E3", "F27E4", "F27E5", "F27E6", "F27E7", "F27E8", "F27E9", "F27E10", "F27E11", "F27E12", "F27E13", "F27E14", "F27E15", "F27E16", "F27E17", "F28E0", "F28E1", "F28E2", "F28E3", "F28E4", "F28E5", "F28E6", "F28E7", "F28E8", "F28E9", "F28E10", "F28E11", "F28E12", "F28E13", "F28E14", "F28E15", "F28E16", "F28E17", "F28E18", "F28E19", "F28E20", "F28E21", "F28E22", "F28E23", "F28E24", "F28E25", "F28E26", "F28E27", "F28E28", "F28E29", "F28E30", "F28E31", "F28E32", "F29E0", "F29E1", "F29E2", "F29E3", "F30E0", "F30E1", "F30E2", "F30E3", "F30E4", "F30E5", "F30E6", "F30E7", "F30E8", "F30E9", "F30E10", "F30E11", "F30E12", "F30E13", "F30E14", "F30E15", "F30E16", "F30E17", "F30E18", "F30E19", "F30E20", "F30E21", "F30E22", "F31E0", "F31E1", "F31E2", "F31E3", "F31E4", "F31E5", "F32E0", "F32E1", "F32E2", "F32E3", "F32E4", "F32E5", "F32E6", "F32E7", "F32E8", "F32E9", "F32E10", "F32E11", "F32E12", "F32E13", "F32E14", "F32E15", "F33E0", "F33E1", "F33E2", "F33E3", "F33E4", "F33E5", "F33E6", "F33E7", "F33E8", "F33E9", "F33E10", "F33E11", "F33E12", "F34E0", "F34E1", "F34E2", "F34E3", "F34E4", "F34E5", "F34E6", "F34E7", "F34E8", "F35E0", "F35E1", "F35E2", "F35E3", "F36E0", "F36E1", "F36E2", "F36E3", "F36E4", "F36E5", "F36E6", "F36E7", "F37E0", "F37E1", "F37E2", "F37E3", "F37E4", "F37E5", "F37E6", "F37E7", "F37E8", "F37E9", "F37E10", "F37E11"}
