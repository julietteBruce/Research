needsPackage "CompleteIntersectionResolutions"

F6E0 =  S = ZZ/101[a,b,c]

F6E1 =  ff = matrix"a3, b3, c3"

F6E2 =  R = S/ideal ff

F6E3 =  M = syzygyModule(2,coker vars R)

F6E4 =  (FF, aug) = layeredResolution(ff,M,5)

F6E5 =  betti FF

F6E6 =  betti res(M, LengthLimit=>5)

F6E7 =  C = chainComplex flatten {{aug} |apply(4, i-> FF.dd_(i+1))}

F6E8 =  apply(4, i ->FF.dd_(i+1))

F6E9 =  apply(5, j-> prune HH_j C == 0)

F6E10 =  MS = pushForward(map(R,S), M);

F6E11 =  (GG, aug) = layeredResolution(ff,MS)

F6E12 =  (GG, aug) = layeredResolution(ff,MS, Verbose =>true)

F6E13 =  betti GG

F6E14 =  betti res MS

F6E15 =  C = chainComplex flatten {{aug} |apply(length GG -1, i-> GG.dd_(i+1))}

F6E16 =  apply(length GG +1 , j-> prune HH_j C == 0)

exampleIDS = {"F6E0", "F6E1", "F6E2", "F6E3", "F6E4", "F6E5", "F6E6", "F6E7", "F6E8", "F6E9", "F6E10", "F6E11", "F6E12", "F6E13", "F6E14", "F6E15", "F6E16"}
