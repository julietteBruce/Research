needsPackage "Complexes"

F76E0 =  S = ZZ/101[a,b,c,d];

F76E1 =  C = freeResolution ideal(b^2-a*c, b*c-a*d, c^2-b*d)

F76E2 =  D = freeResolution ideal(a,b,c)

F76E3 =  f = randomComplexMap(D, C, Cycle => true, InternalDegree => 0)

F76E4 =  Cf = cone f

F76E5 =  g = canonicalMap(Cf, D)

F76E6 =  h = canonicalMap(C[-1], Cf)

F76E7 =  coimage g == D

F76E8 =  prune coimage h == C[-1]

F76E9 =  g1 = canonicalMap(coimage g, source g)

F76E10 =  coimage g1 == coimage g

F76E11 =  coker g1 == 0

F76E12 =  h1 = canonicalMap(coimage h, source h)

F76E13 =  coimage h1 == coimage h

F76E14 =  coker h1 == 0

exampleIDS = {"F76E0", "F76E1", "F76E2", "F76E3", "F76E4", "F76E5", "F76E6", "F76E7", "F76E8", "F76E9", "F76E10", "F76E11", "F76E12", "F76E13", "F76E14"}
