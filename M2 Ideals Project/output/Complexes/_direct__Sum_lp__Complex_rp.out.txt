needsPackage "Complexes"

F10E0 =  S = ZZ/101[a,b,c];

F10E1 =  C1 = freeResolution coker vars S

F10E2 =  C1 ++ complex(S^13)[-2]

F10E3 =  C2 = complex (ideal(a,b,c))

F10E4 =  C1 ++ C2

F10E5 =  assert isWellDefined(C1 ++ C2)

F10E6 =  C3 = directSum(C1,C2,C2[-2])

F10E7 =  assert isWellDefined C3

F10E8 =  C4 = directSum(first => C1, second => C2)

F10E9 =  C4_[first] -- inclusion map C1 --> C4

F10E10 =  C4^[first] -- projection map C4 --> C1

F10E11 =  C4^[first] * C4_[first] == 1

F10E12 =  C4^[second] * C4_[second] == 1

F10E13 =  C4^[first] * C4_[second] == 0

F10E14 =  C4^[second] * C4_[first] == 0

F10E15 =  C4_[first] * C4^[first] + C4_[second] * C4^[second] == 1

F10E16 =  isShortExactSequence(C4^[first], C4_[second])

F10E17 =  isShortExactSequence(C4^[second], C4_[first])

F10E18 =  components C3

F10E19 =  indices C3

F10E20 =  components C4

F10E21 =  indices C4

exampleIDS = {"F10E0", "F10E1", "F10E2", "F10E3", "F10E4", "F10E5", "F10E6", "F10E7", "F10E8", "F10E9", "F10E10", "F10E11", "F10E12", "F10E13", "F10E14", "F10E15", "F10E16", "F10E17", "F10E18", "F10E19", "F10E20", "F10E21"}
