needsPackage "Complexes"

F98E0 =  R = ZZ/101[a..d];

F98E1 =  I = monomialCurveIdeal(R, {1,2,3})

F98E2 =  M = R^1/I

F98E3 =  D = freeResolution M

F98E4 =  C = resolution M

F98E5 =  g = D.dd

F98E6 =  f = chainComplex g

F98E7 =  assert(f == C.dd)

F98E8 =  J = ideal vars R

F98E9 =  C1 = resolution(R^1/J)

F98E10 =  D1 = freeResolution(R^1/J)

F98E11 =  g = randomComplexMap(D1, D, Cycle => true)

F98E12 =  f = chainComplex g

F98E13 =  assert(g == complex f)

F98E14 =  assert(isComplexMorphism g)

exampleIDS = {"F98E0", "F98E1", "F98E2", "F98E3", "F98E4", "F98E5", "F98E6", "F98E7", "F98E8", "F98E9", "F98E10", "F98E11", "F98E12", "F98E13", "F98E14"}
