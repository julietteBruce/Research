needsPackage "Complexes"

F71E0 =  S = ZZ/101[a..c]

F71E1 =  C = freeResolution coker vars S

F71E2 =  D = C[3][-3]

F71E3 =  C === D

F71E4 =  C == D

F71E5 =  (lo,hi) = concentration C

F71E6 =  E = complex for i from lo+1 to hi list 0*dd^C_i

F71E7 =  dd^E

F71E8 =  C == E

F71E9 =  E == 0

F71E10 =  f = id_C

F71E11 =  D = coker f

F71E12 =  D == 0

F71E13 =  C0 = complex S^0

F71E14 =  C1 = C0[4]

F71E15 =  concentration C0 == concentration C1

F71E16 =  C0 == C1

F71E17 =  C0 == 0

F71E18 =  C1 == 0

F71E19 =  R = QQ[a..d];

F71E20 =  f0 = matrix {{-b^2+a*c, b*c-a*d, -c^2+b*d}}

F71E21 =  f1 = map(source f0,, {{d, c}, {c, b}, {b, a}})

F71E22 =  C = complex {f0, f1}

F71E23 =  HH C != complex coker f0

F71E24 =  prune HH C == complex coker f0

exampleIDS = {"F71E0", "F71E1", "F71E2", "F71E3", "F71E4", "F71E5", "F71E6", "F71E7", "F71E8", "F71E9", "F71E10", "F71E11", "F71E12", "F71E13", "F71E14", "F71E15", "F71E16", "F71E17", "F71E18", "F71E19", "F71E20", "F71E21", "F71E22", "F71E23", "F71E24"}
