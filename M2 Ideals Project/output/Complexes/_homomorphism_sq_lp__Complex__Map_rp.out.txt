needsPackage "Complexes"

F26E0 =  R = ZZ/101[a,b,c]

F26E1 =  C = freeResolution ideal"a,b,c"

F26E2 =  D = freeResolution ideal"a2,b2,c2"

F26E3 =  g = randomComplexMap(D, C, InternalDegree => 2)

F26E4 =  isWellDefined g

F26E5 =  f = homomorphism' g

F26E6 =  isWellDefined f

F26E7 =  g = randomComplexMap(D, C, Cycle => true, InternalDegree => 3)

F26E8 =  isWellDefined g

F26E9 =  f = homomorphism' g

F26E10 =  isWellDefined f

F26E11 =  assert isCommutative g

F26E12 =  assert(degree f === 0)

F26E13 =  assert(source f == complex(R^{-3}))

F26E14 =  assert(target g === D)

F26E15 =  assert(homomorphism f == g)

exampleIDS = {"F26E0", "F26E1", "F26E2", "F26E3", "F26E4", "F26E5", "F26E6", "F26E7", "F26E8", "F26E9", "F26E10", "F26E11", "F26E12", "F26E13", "F26E14", "F26E15"}
