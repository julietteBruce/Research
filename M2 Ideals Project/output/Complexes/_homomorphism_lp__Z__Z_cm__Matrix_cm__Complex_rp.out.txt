needsPackage "Complexes"

F13E0 =  R = ZZ/101[a,b,c];

F13E1 =  C = freeResolution ideal"a,b,c"

F13E2 =  D = freeResolution ideal"a2,b2,c2"

F13E3 =  E = Hom(C,D)

F13E4 =  f = random(E_2, R^{-5})

F13E5 =  g = homomorphism(2, f, E)

F13E6 =  assert isWellDefined g

F13E7 =  assert not isCommutative g

F13E8 =  h = randomComplexMap(E, complex R^{-2}, Cycle => true, Degree => -1)

F13E9 =  f = h_0

F13E10 =  g = homomorphism(-1, f, E)

F13E11 =  assert isWellDefined g

F13E12 =  assert isCommutative g

F13E13 =  assert(degree g === -1)

F13E14 =  assert(source g === C)

F13E15 =  assert(target g === D)

F13E16 =  assert(homomorphism' g == h)

exampleIDS = {"F13E0", "F13E1", "F13E2", "F13E3", "F13E4", "F13E5", "F13E6", "F13E7", "F13E8", "F13E9", "F13E10", "F13E11", "F13E12", "F13E13", "F13E14", "F13E15", "F13E16"}
