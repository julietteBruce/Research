needsPackage "FourierMotzkin"

F1E0 =  permutahedron = d -> transpose matrix permutations toList(1..d+1);

F1E1 =  vertices = permutahedron 3

F1E2 =  homogenizePolytope = V -> (

          R := ring V;

          n := numgens source V;

          map(R^1, R^n, {toList(n:1)}) || V);

F1E3 =  H = fourierMotzkin homogenizePolytope vertices

F1E4 =  transpose H#1

F1E5 =  halfspaces = H#0;

F1E6 =  numgens source halfspaces

F1E7 =  inequalityMatrix = transpose submatrix(halfspaces,{1..4},)

F1E8 =  M = inequalityMatrix * vertices

F1E9 =  incidence = matrix table(14,24, (i,j) -> if M_(i,j) == 0 then 1 else 0)

F1E10 =  vertexDegree = map(ZZ^1,ZZ^14,{toList(14:1)}) * incidence

F1E11 =  facets = transpose(incidence * transpose map(ZZ^1,ZZ^24,{toList(24:1)}))

exampleIDS = {"F1E0", "F1E1", "F1E2", "F1E3", "F1E4", "F1E5", "F1E6", "F1E7", "F1E8", "F1E9", "F1E10", "F1E11"}
