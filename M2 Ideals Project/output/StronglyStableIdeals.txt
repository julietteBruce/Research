needsPackage "StronglyStableIdeals"

F0E0 =  lexIdeal(10, 3, CoefficientRing=>ZZ/101)

F1E0 =  QQ[t];

F1E1 =  hp = projectiveHilbertPolynomial(3*t+4)

F1E2 =  mD = macaulayDecomposition hp

F1E3 =  sum mD

F2E0 =  lexIdeal(3, 3, OrderVariables=>Down)

F2E1 =  stronglyStableIdeals(3, 3, OrderVariables=>Up)

F3E0 =  QQ[t];

F3E1 =  S = QQ[x,y,z,w];

F3E2 =  stronglyStableIdeals(4*t, S)

F3E3 =  stronglyStableIdeals(4*t, 4)

F3E4 =  hp = hilbertPolynomial(oo#0)

F3E5 =  stronglyStableIdeals(hp, S)

F3E6 =  stronglyStableIdeals(hp, 4)

F3E7 =  stronglyStableIdeals(5, S)

F3E8 =  stronglyStableIdeals(5, 4)

F4E0 =  QQ[t];

F4E1 =  S = QQ[x,y,z,w];

F4E2 =  lexIdeal(4*t, S)

F4E3 =  lexIdeal(4*t, 5)

F4E4 =  hp = hilbertPolynomial oo

F4E5 =  lexIdeal(hp, S)

F4E6 =  lexIdeal(hp, 3)

F4E7 =  lexIdeal(5, S)

F4E8 =  lexIdeal(5, 3)

F5E0 =  QQ[x,y,z];

F5E1 =  J = ideal(x^2,x*y,y^4);

F5E2 =  isHilbSegment J

F5E3 =  isGenSegment(truncate(gotzmannNumber(hilbertPolynomial J), J))

F6E0 =  lexIdeal(3, 3, OrderVariables=>Down)

F6E1 =  lexIdeal(3, 3, OrderVariables=>Up)

F7E0 =  QQ[t];

F7E1 =  isHilbertPolynomial(3*t+4)

F7E2 =  isHilbertPolynomial((2/3)*t-1)

F7E3 =  isHilbertPolynomial(2*projectiveHilbertPolynomial(2))

F7E4 =  isHilbertPolynomial(2*projectiveHilbertPolynomial(2,-1))

F8E0 =  QQ[x,y,z];

F8E1 =  isGenSegment(ideal(x^2,x*y,y^4))

F8E2 =  isGenSegment(ideal(x^2,x*y^3,y^4))

F9E0 =  QQ[t];

F9E1 =  gotzmannNumber(3*t+4)

F9E2 =  gotzmannDecomposition(3*t+4)

F10E0 =  QQ[t];

F10E1 =  projectiveHilbertPolynomial (3*t+4)

F11E0 =  QQ[t];

F11E1 =  stronglyStableIdeals(3, 3, CoefficientRing=>ZZ/101)

F11E2 =  oo#0

F12E0 =  QQ[t];

F12E1 =  stronglyStableIdeals(4*t, 4, MaxRegularity=>4)

F13E0 =  stronglyStableIdeals(3, 3, OrderVariables=>Down)

F13E1 =  stronglyStableIdeals(3, 3, OrderVariables=>Up)

F14E0 =  QQ[t];

F14E1 =  hp = projectiveHilbertPolynomial(3*t+4)

F14E2 =  gD = gotzmannDecomposition hp

F14E3 =  sum gD

F14E4 =  R = QQ[x,y,z,w];

F14E5 =  completeIntersection22 = ideal(random(2,R),random(2,R));

F14E6 =  hp = hilbertPolynomial completeIntersection22

F14E7 =  gD = gotzmannDecomposition hp

F14E8 =  H = random(1,R);

F14E9 =  fourLines = for i from 1 to 4 list ideal(H,random(1,R));

F14E10 =  twoPoints = for i from 1 to 2 list ideal(H,random(1,R),random(1,R));

F14E11 =  unionLinesPoints = intersect(fourLines|twoPoints);

F14E12 =  hilbertPolynomial unionLinesPoints == hp

F15E0 =  QQ[x,y,z];

F15E1 =  J = ideal(x^2,x*y^3,y^4)

F15E2 =  isRegSegment J

F15E3 =  isGenSegment(truncate(regularity J,J))

F15E4 =  isGenSegment J

exampleIDS = {"F0E0", "F1E0", "F1E1", "F1E2", "F1E3", "F2E0", "F2E1", "F3E0", "F3E1", "F3E2", "F3E3", "F3E4", "F3E5", "F3E6", "F3E7", "F3E8", "F4E0", "F4E1", "F4E2", "F4E3", "F4E4", "F4E5", "F4E6", "F4E7", "F4E8", "F5E0", "F5E1", "F5E2", "F5E3", "F6E0", "F6E1", "F7E0", "F7E1", "F7E2", "F7E3", "F7E4", "F8E0", "F8E1", "F8E2", "F9E0", "F9E1", "F9E2", "F10E0", "F10E1", "F11E0", "F11E1", "F11E2", "F12E0", "F12E1", "F13E0", "F13E1", "F14E0", "F14E1", "F14E2", "F14E3", "F14E4", "F14E5", "F14E6", "F14E7", "F14E8", "F14E9", "F14E10", "F14E11", "F14E12", "F15E0", "F15E1", "F15E2", "F15E3", "F15E4"}
