needsPackage "Macaulay2Doc"

F102E0 =  new Type of BasicList from Function := (A,B,f) -> hashTable { net => f, html => f }; 

F102E1 =  f = s -> "--list of type X--"

F102E2 =  X = new Type of List from f

F102E3 =  class X

F102E4 =  parent X

F102E5 =  peek X

F102E6 =  x = new X from {1,3,11,12}

F102E7 =  class x

F102E8 =  parent x

F102E9 =  peek x

F102E10 =  new Type of BasicList := (type,array) -> (

      		    stderr << "--new " << type << " of "

      			   << array << " being made" << endl;

      		    new MutableHashTable)

F102E11 =  M = new Type of BasicList

F102E12 =  m = new M from {3,4,5}

F102E13 =  class m

F102E14 =  m#1

F102E15 =  - M := reverse

F102E16 =  - m

F102E17 =  new M from ZZ := (M',i) -> 0 .. i

F102E18 =  n = new M from 13

F102E19 =  - n

F102E20 =  new M := (M') -> {"a","b","c"}

F102E21 =  new M

exampleIDS = {"F102E0", "F102E1", "F102E2", "F102E3", "F102E4", "F102E5", "F102E6", "F102E7", "F102E8", "F102E9", "F102E10", "F102E11", "F102E12", "F102E13", "F102E14", "F102E15", "F102E16", "F102E17", "F102E18", "F102E19", "F102E20", "F102E21"}
