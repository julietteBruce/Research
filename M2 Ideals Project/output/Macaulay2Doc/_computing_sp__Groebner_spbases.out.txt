needsPackage "Macaulay2Doc"

F53E0 =  R = ZZ/1277[x,y];

F53E1 =  I = ideal(x^3 - 2*x*y, x^2*y - 2*y^2 + x);

F53E2 =  g = gb I

F53E3 =  gens g

F53E4 =  R = ZZ/1277[x,y,z,w];

F53E5 =  I = ideal(x*y-z^2,y^2-w^2);

F53E6 =  g2 = gb(I,DegreeLimit => 2)

F53E7 =  gens g2

F53E8 =  g3 = gb(I,DegreeLimit => 3);

F53E9 =  gens g3

F53E10 =  g2

F53E11 =  g2 === g3

F53E12 =  I = ideal(x*y-z^2,y^2-w^2)

F53E13 =  gb(I,PairLimit => 2)

F53E14 =  gb(I,PairLimit => 3)

F53E15 =  I = ideal(x*y-z^2,y^2-w^2)

F53E16 =  gb(I,BasisElementLimit => 2)

F53E17 =  gb(I,BasisElementLimit => 3)

F53E18 =  R = ZZ/1277[t,F,G,MonomialOrder => Eliminate 1];

F53E19 =  I = ideal(F - (t^3 + t^2 + 1), G - (t^4 - t))

F53E20 =  transpose gens gb (I, SubringLimit => 1)

F53E21 =  gbTrace = 3

F53E22 =  I = ideal(x*y-z^2,y^2-w^2)

F53E23 =  gb I

F53E24 =  gbTrace = 0

F53E25 =  R = ZZ/1277[x..z];

F53E26 =  I = ideal(x*y+y*z, y^2, x^2);

F53E27 =  g = gb(I, StopBeforeComputation => true)

F53E28 =  gens g

F53E29 =  R = ZZ/1277[a..e];

F53E30 =  T = (degreesRing R)_0

F53E31 =  f = random(R^1,R^{-3,-3,-5,-6});

F53E32 =  time betti gb f

F53E33 =  remove(f.cache,{false,0})

F53E34 =  poincare cokernel f = (1-T^3)*(1-T^3)*(1-T^5)*(1-T^6) -- cache poincare

F53E35 =  time betti gb f

exampleIDS = {"F53E0", "F53E1", "F53E2", "F53E3", "F53E4", "F53E5", "F53E6", "F53E7", "F53E8", "F53E9", "F53E10", "F53E11", "F53E12", "F53E13", "F53E14", "F53E15", "F53E16", "F53E17", "F53E18", "F53E19", "F53E20", "F53E21", "F53E22", "F53E23", "F53E24", "F53E25", "F53E26", "F53E27", "F53E28", "F53E29", "F53E30", "F53E31", "F53E32", "F53E33", "F53E34", "F53E35"}
