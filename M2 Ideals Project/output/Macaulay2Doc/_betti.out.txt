needsPackage "Macaulay2Doc"

F131E0 =  S = QQ[x,y,z,w];

F131E1 =  I = monomialCurveIdeal(S, {1,2,3})

F131E2 =  t = betti res I

F131E3 =  peek oo

F131E4 =  t#(1, {2}, 2)

F131E5 =  R = QQ[a,b,c, Degrees => {-1,-2,-3}];

F131E6 =  heft R

F131E7 =  betti koszul vars R

F131E8 =  betti(oo, Weights => {1})

F131E9 =  R = QQ[a,b,c,d, Degrees => {{1,0},{2,1},{0,1},{-2,1}}];

F131E10 =  heft R

F131E11 =  b = betti res coker vars R

F131E12 =  betti(b, Weights => {1,0})

F131E13 =  betti(b, Weights => {0,1})

F131E14 =  multigraded b

F131E15 =  S = ZZ/10007[x,y];

F131E16 =  G = gb ideal(x^3+y^3, x*y^4);

F131E17 =  gens G

F131E18 =  betti G

F131E19 =  S = ZZ/10007[x,y];

F131E20 =  betti matrix {{x^3, x*y^2}, {y*x, y^2}}

F131E21 =  S = ZZ/10007[x,y];

F131E22 =  betti coker matrix{{x^3, x*y^2}, {y*x^2, y^3}}

F131E23 =  betti coker map(S^{0,-1}, , matrix{{x^2, y}, {y^3, x^2}})

F131E24 =  S = ZZ/10007[x,y];

F131E25 =  I = ideal(x,x^2,y^3);

F131E26 =  betti I

F131E27 =  betti comodule I

F131E28 =  R = ZZ/101[a..h]

F131E29 =  p = genericMatrix(R,a,2,4)

F131E30 =  q = generators gb p

F131E31 =  C = resolution cokernel leadTerm q

F131E32 =  betti C

exampleIDS = {"F131E0", "F131E1", "F131E2", "F131E3", "F131E4", "F131E5", "F131E6", "F131E7", "F131E8", "F131E9", "F131E10", "F131E11", "F131E12", "F131E13", "F131E14", "F131E15", "F131E16", "F131E17", "F131E18", "F131E19", "F131E20", "F131E21", "F131E22", "F131E23", "F131E24", "F131E25", "F131E26", "F131E27", "F131E28", "F131E29", "F131E30", "F131E31", "F131E32"}
