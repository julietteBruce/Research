needsPackage "Macaulay2Doc"

F389E0 =  allowableThreads

F389E1 =  allowableThreads = 4

F389E2 =  R = ZZ/101[x,y,z];

F389E3 =  I = (ideal vars R)^2

F389E4 =  dogb = I -> () -> res quotient module I

F389E5 =  f = dogb I

F389E6 =  t = schedule f

F389E7 =  t

F389E8 =  isReady t

F389E9 =  while not isReady t do sleep 1

F389E10 =  taskResult t

F389E11 =  assert instance(oo,ChainComplex)

F389E12 =  t' = createTask f

F389E13 =  t'

F389E14 =  schedule t';

F389E15 =  t'

F389E16 =  while not isReady t' do sleep 1

F389E17 =  taskResult t'

F389E18 =  F = createTask(() -> "result of F")

F389E19 =  G = createTask(() -> "result of G")

F389E20 =  addStartTask(F,G)

F389E21 =  schedule F

F389E22 =  while not isReady F do sleep 1

F389E23 =  taskResult F

F389E24 =  while not isReady G do sleep 1

F389E25 =  taskResult G

exampleIDS = {"F389E0", "F389E1", "F389E2", "F389E3", "F389E4", "F389E5", "F389E6", "F389E7", "F389E8", "F389E9", "F389E10", "F389E11", "F389E12", "F389E13", "F389E14", "F389E15", "F389E16", "F389E17", "F389E18", "F389E19", "F389E20", "F389E21", "F389E22", "F389E23", "F389E24", "F389E25"}
