needsPackage "Probability"

F0E0 =  X = poissonDistribution 10

F0E1 =  density_X 2

F0E2 =  probability_X 3

F0E3 =  quantile_X 0.4

F0E4 =  random X

F1E0 =  X = uniformDistribution(3, 7)

F1E1 =  density_X 4

F1E2 =  probability_X 5

F1E3 =  quantile_X 0.6

F1E4 =  random X

F1E5 =  uniformDistribution()

F2E0 =  Z = normalDistribution()

F2E1 =  ancestors class Z

F2E2 =  peek Z

F3E0 =  X = betaDistribution(5, 6)

F3E1 =  density_X 0.2

F3E2 =  probability_X 0.3

F3E3 =  quantile_X 0.4

F3E4 =  random X

F4E0 =  X = negativeBinomialDistribution(5, 0.1)

F4E1 =  density_X 20

F4E2 =  probability_X 30

F4E3 =  quantile_X 0.4

F4E4 =  random X

F5E0 =  X = hypergeometricDistribution(5, 6, 4)

F5E1 =  density_X 2

F5E2 =  probability_X 3

F5E3 =  quantile_X 0.4

F5E4 =  random X

F6E0 =  X = chiSquaredDistribution 5

F6E1 =  density_X 2

F6E2 =  probability_X 3

F6E3 =  quantile_X 0.4

F6E4 =  random X

F7E0 =  X = binomialDistribution(5, 0.25)

F7E1 =  density_X 2

F7E2 =  binomial(5, 2) * 0.25^2 * 0.75^3

F7E3 =  Z = normalDistribution()

F7E4 =  density_Z 0

F7E5 =  1/sqrt(2 * pi)

F7E6 =  integrate(density_Z, -1, 1)

F7E7 =  integrate(density_Z, -2, 2)

F7E8 =  integrate(density_Z, -3, 3)

F8E0 =  X = binomialDistribution(10, 0.1)

F8E1 =  density_X 2

F8E2 =  probability_X 3

F8E3 =  quantile_X 0.4

F8E4 =  random X

F8E5 =  Y = bernoulliDistribution 0.1

F9E0 =  X = gammaDistribution(5, 0.6)

F9E1 =  density_X 2

F9E2 =  probability_X 3

F9E3 =  quantile_X 0.4

F9E4 =  random X

F10E0 =  X = geometricDistribution 0.1

F10E1 =  density_X 2

F10E2 =  probability_X 3

F10E3 =  quantile_X 0.4

F10E4 =  random X

F11E0 =  X = exponentialDistribution 0.25

F11E1 =  density_X 2

F11E2 =  probability_X 3

F11E3 =  quantile_X 0.4

F11E4 =  random X

F12E0 =  X = continuousProbabilityDistribution(x -> 2 * x, Support => (0, 1))

F12E1 =  density_X 0.75

F12E2 =  density_X 2

F12E3 =  probability_X 0.75

F12E4 =  quantile_X 0.5625

F12E5 =  random X

F12E6 =  X = continuousProbabilityDistribution(x -> 2 * x, Support => (0, 1),

         DistributionFunction => x -> x^2,

         QuantileFunction => p -> sqrt p,

         Description => "triangular distribution")

F13E0 =  X = tDistribution 5

F13E1 =  density_X 2

F13E2 =  probability_X 3

F13E3 =  quantile_X 0.4

F13E4 =  random X

F14E0 =  X = fDistribution(5, 6)

F14E1 =  density_X 2

F14E2 =  probability_X 3

F14E3 =  quantile_X 0.4

F14E4 =  random X

F15E0 =  X = normalDistribution(30, 5)

F15E1 =  density_X 25

F15E2 =  probability_X 35

F15E3 =  quantile_X 0.75

F15E4 =  random X

F15E5 =  Z = normalDistribution()

F15E6 =  quantile_Z 0.975

F16E0 =  X = discreteProbabilityDistribution(x -> 1/6, Support => (1, 6))

F16E1 =  density_X 3

F16E2 =  density_X 3.5

F16E3 =  density_X 7

F16E4 =  probability_X 3

F16E5 =  quantile_X 0.2

F16E6 =  random X

F16E7 =  X = discreteProbabilityDistribution(x -> 1/6, Support => (1, 6),

         DistributionFunction => x -> x / 6,

         QuantileFunction => p -> 6 * p,

         Description => "six-sided die")

F17E0 =  Z = normalDistribution()

F17E1 =  for i to 10 list random Z

F18E0 =  Z = normalDistribution()

F18E1 =  probability_Z 1.96

F18E2 =  probability_Z(1.96, LowerTail => false)

F19E0 =  Z = normalDistribution()

F19E1 =  quantile_Z 0.95

F19E2 =  probability_Z oo

F19E3 =  X = binomialDistribution(10, 0.25)

F19E4 =  quantile_X 0.75

F19E5 =  probability_X 2

F19E6 =  probability_X 3

F19E7 =  quantile_Z(0.95, LowerTail => false)

F19E8 =  probability_Z(oo, LowerTail => false)

F19E9 =  quantile_X(0.75, LowerTail => false)

F19E10 =  probability_X(2, LowerTail => false)

F19E11 =  probability_X(1, LowerTail => false)

exampleIDS = {"F0E0", "F0E1", "F0E2", "F0E3", "F0E4", "F1E0", "F1E1", "F1E2", "F1E3", "F1E4", "F1E5", "F2E0", "F2E1", "F2E2", "F3E0", "F3E1", "F3E2", "F3E3", "F3E4", "F4E0", "F4E1", "F4E2", "F4E3", "F4E4", "F5E0", "F5E1", "F5E2", "F5E3", "F5E4", "F6E0", "F6E1", "F6E2", "F6E3", "F6E4", "F7E0", "F7E1", "F7E2", "F7E3", "F7E4", "F7E5", "F7E6", "F7E7", "F7E8", "F8E0", "F8E1", "F8E2", "F8E3", "F8E4", "F8E5", "F9E0", "F9E1", "F9E2", "F9E3", "F9E4", "F10E0", "F10E1", "F10E2", "F10E3", "F10E4", "F11E0", "F11E1", "F11E2", "F11E3", "F11E4", "F12E0", "F12E1", "F12E2", "F12E3", "F12E4", "F12E5", "F12E6", "F13E0", "F13E1", "F13E2", "F13E3", "F13E4", "F14E0", "F14E1", "F14E2", "F14E3", "F14E4", "F15E0", "F15E1", "F15E2", "F15E3", "F15E4", "F15E5", "F15E6", "F16E0", "F16E1", "F16E2", "F16E3", "F16E4", "F16E5", "F16E6", "F16E7", "F17E0", "F17E1", "F18E0", "F18E1", "F18E2", "F19E0", "F19E1", "F19E2", "F19E3", "F19E4", "F19E5", "F19E6", "F19E7", "F19E8", "F19E9", "F19E10", "F19E11"}
