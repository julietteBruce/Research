needsPackage "PrimaryDecomposition"

F0E0 =  R = ZZ/101[a..d];

F0E1 =  I = ideal(a*b-c*d, (a*c-b*d)^2);

F0E2 =  associatedPrimes I

F1E0 =  R = ZZ/101[a..d];

F1E1 =  I = ideal(a*b-c*d, (a*c-b*d)^2);

F1E2 =  primaryDecomposition I

F2E0 =  hooks(primaryDecomposition, Ideal)

F2E1 =  Q = QQ[a..d]

F2E2 =  I = ideal(a^2*b,a*c^2,b*d,c*d^2);

F2E3 =  primaryDecomposition(I, Strategy => Monomial)

F2E4 =  primaryDecomposition(I, Strategy => EisenbudHunekeVasconcelos)

F2E5 =  primaryDecomposition(I, Strategy => ShimoyamaYokoyama)

F2E6 =  Q = QQ[x,y];

F2E7 =  I = intersect(ideal(x^2), ideal(y^2))

F2E8 =  primaryDecomposition(I, Strategy => Hybrid{1,1})

F2E9 =  primaryDecomposition(I, Strategy => Hybrid{1,2})

F2E10 =  primaryDecomposition(I, Strategy => Hybrid{2,1})

F2E11 =  primaryDecomposition(I, Strategy => Hybrid{2,2})

F3E0 =  R = QQ[a..i];

F3E1 =  I = permanents(2,genericMatrix(R,a,3,3))

F3E2 =  C = primaryDecomposition I;

F3E3 =  I == intersect C

F3E4 =  #C

F3E5 =  C / toString / print;

F3E6 =  C / codim

F3E7 =  C / degree

F3E8 =  associatedPrimes I / print;

F4E0 =  R = ZZ/32003[a..c];

F4E1 =  I = intersect(ideal(a,b), ideal(b,c), ideal(c,a), ideal(a^2,b^3,c^4));

F4E2 =  topComponents I

F5E0 =  R = QQ[x_0..x_3]

F5E1 =  (I1,I2,I3) = ({1,2,3},{2,3},{4,5}) / monomialCurveIdeal_R

F5E2 =  M = comodule I1 ++ comodule I2 ++ comodule I3

F5E3 =  associatedPrimes M

F5E4 =  C = primaryDecomposition M;

F5E5 =  netList C

F5E6 =  intersect C == 0 and all(C, isPrimary_M)

F5E7 =  C / degree

F5E8 =  I = intersect((ideal(x_0..x_3))^5, (ideal(x_0..x_2))^4, (ideal(x_0..x_1))^3)

F5E9 =  S = R/I

F5E10 =  associatedPrimes S

F5E11 =  comps = primaryDecomposition S

F5E12 =  apply(comps, Q -> ideal mingens(I + ideal gens Q))

F5E13 =  I == intersect oo

F6E0 =  R = ZZ/(101)[x,y];

F6E1 =  I = ideal (x^2,x*y);

F6E2 =  P1 = ideal (x);

F6E3 =  localize(I,P1)

F6E4 =  P2 = ideal (x,y);

F6E5 =  localize(I,P2)

F6E6 =  R = ZZ/31991[x,y,z];

F6E7 =  I = ideal(x^2,x*z,y*z);

F6E8 =  P1 = ideal(x,y);

F6E9 =  localize(I,P1)

F6E10 =  P2 = ideal(x,z);

F6E11 =  localize(I,P2)

F7E0 =  Q = ZZ/101[x,y,z]

F7E1 =  isPrimary ideal(y^6)

F7E2 =  isPrimary(ideal(y^6), ideal(y))

F7E3 =  isPrimary ideal(x^4, y^7)

F7E4 =  isPrimary ideal(x*y, y^2)

F8E0 =  R = QQ[x..z];

F8E1 =  I = monomialIdeal (x*y^3, x*y^2*z)

F8E2 =  w = irreducibleDecomposition I

F8E3 =  assert( I == intersect w )

F9E0 =  R = QQ[x_0..x_7]

F9E1 =  I = intersect(ideal(x_0,x_1,x_2,x_3), ideal(x_4,x_5,x_6,x_7), ideal(x_0,x_2,x_4,x_6), ideal(x_1,x_3,x_5,7))

F9E2 =  elapsedTime regSeqInIdeal I

F9E3 =  R = QQ[h,l,s,x,y,z]

F9E4 =  I = ideal(h*l-l^2-4*l*s+h*y,h^2*s-6*l*s^3+h^2*z,x*h^2-l^2*s-h^3,h^8,l^8,s^8)

F9E5 =  isSubset(I, ideal(s,l,h)) -- implies codim I == 3

F9E6 =  elapsedTime regSeqInIdeal(I, 3, 3, 1)

F10E0 =  R = ZZ/32003[a..d];

F10E1 =  I = intersect(ideal(a*b+a^2,b^2), ideal(a^2,b^2,c^2), ideal(b^3,c^3,d^3))

F10E2 =  removeLowestDimension I

F11E0 =  R = QQ[x_0..x_3]

F11E1 =  (I1,I2,I3) = monomialCurveIdeal_R \ ({1,2,3},{2,3},{4,5})

F11E2 =  M = comodule I1 ++ comodule I2 ++ comodule I3

F11E3 =  elapsedTime kernelOfLocalization(M, I1)

F11E4 =  elapsedTime kernelOfLocalization(M, I2)

F11E5 =  elapsedTime kernelOfLocalization(M, I3)

F12E0 =  R = QQ[a..d]

F12E1 =  M = coker(transpose matrix{{1_R,1,1,1}} | diagonalMatrix vars R)

F12E2 =  associatedPrimes M

F12E3 =  I = intersect(ideal(a^2,b), ideal(a,b,c^5), ideal(b^4,c^4))

F12E4 =  associatedPrimes I

F12E5 =  associatedPrimes comodule I

F12E6 =  R = QQ[x,y,z]/(x^2,x*y)

F12E7 =  associatedPrimes R

F12E8 =  R = QQ[a..f];

F12E9 =  I = monomialIdeal ideal"abc,bcd,af3,a2cd,bd3d,adf,f5"

F12E10 =  ass I

F12E11 =  primaryDecomposition I

F12E12 =  S = QQ[a,b,c,d,e];

F12E13 =  I1 = ideal(a,b,c);

F12E14 =  I2 = ideal(a,b,d);

F12E15 =  I3 = ideal(a,e);

F12E16 =  P = I1*I2*I3

F12E17 =  L1 = associatedPrimes P

F12E18 =  L2 = apply(associatedPrimes monomialIdeal P, J -> ideal J)

F12E19 =  M1 = set apply(L1, I -> sort flatten entries gens I)

F12E20 =  M2 = set apply(L2, I -> sort flatten entries gens I)

F12E21 =  assert(M1 === M2)

F13E0 =  R = ZZ/32003[a..d];

F13E1 =  I = monomialCurveIdeal(R,{1,3,4})

F13E2 =  J = ideal(a^3,b^3,c^3-d^3)

F13E3 =  I = intersect(I,J)

F13E4 =  removeLowestDimension I

F13E5 =  topComponents I

F13E6 =  radical I

F13E7 =  minimalPrimes I

F13E8 =  associatedPrimes I

F13E9 =  primaryDecomposition I

exampleIDS = {"F0E0", "F0E1", "F0E2", "F1E0", "F1E1", "F1E2", "F2E0", "F2E1", "F2E2", "F2E3", "F2E4", "F2E5", "F2E6", "F2E7", "F2E8", "F2E9", "F2E10", "F2E11", "F3E0", "F3E1", "F3E2", "F3E3", "F3E4", "F3E5", "F3E6", "F3E7", "F3E8", "F4E0", "F4E1", "F4E2", "F5E0", "F5E1", "F5E2", "F5E3", "F5E4", "F5E5", "F5E6", "F5E7", "F5E8", "F5E9", "F5E10", "F5E11", "F5E12", "F5E13", "F6E0", "F6E1", "F6E2", "F6E3", "F6E4", "F6E5", "F6E6", "F6E7", "F6E8", "F6E9", "F6E10", "F6E11", "F7E0", "F7E1", "F7E2", "F7E3", "F7E4", "F8E0", "F8E1", "F8E2", "F8E3", "F9E0", "F9E1", "F9E2", "F9E3", "F9E4", "F9E5", "F9E6", "F10E0", "F10E1", "F10E2", "F11E0", "F11E1", "F11E2", "F11E3", "F11E4", "F11E5", "F12E0", "F12E1", "F12E2", "F12E3", "F12E4", "F12E5", "F12E6", "F12E7", "F12E8", "F12E9", "F12E10", "F12E11", "F12E12", "F12E13", "F12E14", "F12E15", "F12E16", "F12E17", "F12E18", "F12E19", "F12E20", "F12E21", "F13E0", "F13E1", "F13E2", "F13E3", "F13E4", "F13E5", "F13E6", "F13E7", "F13E8", "F13E9"}
