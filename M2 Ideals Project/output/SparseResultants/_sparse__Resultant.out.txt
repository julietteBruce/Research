needsPackage "SparseResultants"

F2E0 =  time Res = sparseResultant(matrix{{0,1,1,2},{0,0,1,1}},matrix{{0,1,2,2},{1,0,1,2}},matrix{{0,0,1,1},{0,1,0,1}})

F2E1 =  QQ[c_(1,1)..c_(3,4)][x,y];

F2E2 =  (f,g,h) = (c_(1,1)+c_(1,2)*x*y+c_(1,3)*x^2*y+c_(1,4)*x, c_(2,1)*y+c_(2,2)*x^2*y^2+c_(2,3)*x^2*y+c_(2,4)*x, c_(3,1)+c_(3,2)*y+c_(3,3)*x*y+c_(3,4)*x)

F2E3 =  time Res(f,g,h)

F2E4 =  assert(Res(f,g,h) == sparseResultant(f,g,h))

F2E5 =  time Res = sparseResultant(matrix{{0,0,1,1},{0,1,0,1}},CoefficientRing=>ZZ/3331);

F2E6 =  ZZ/3331[a_0..a_3,b_0..b_3,c_0..c_3][x,y];

F2E7 =  (f,g,h) = (a_0 + a_1*x + a_2*y + a_3*x*y, b_0 + b_1*x + b_2*y + b_3*x*y, c_0 + c_1*x + c_2*y + c_3*x*y)

F2E8 =  time Res(f,g,h)

F2E9 =  assert(Res(f,g,h) == sparseResultant(f,g,h))

F2E10 =  (f,g,h) = genericLaurentPolynomials(1,2,2)

F2E11 =  time (MixedRes,UnmixedRes) = (sparseResultant(f,g,h),sparseResultant(f,g,h,Unmixed=>true));

F2E12 =  quotientRemainder(UnmixedRes,MixedRes)

F2E13 =  assert((denseResultant(2,2,2))(f,g,h) == UnmixedRes and (denseResultant(1,2,2))(f,g,h) == MixedRes)

exampleIDS = {"F2E0", "F2E1", "F2E2", "F2E3", "F2E4", "F2E5", "F2E6", "F2E7", "F2E8", "F2E9", "F2E10", "F2E11", "F2E12", "F2E13"}
