needsPackage "QuaternaryQuartics"

F10E0 =  loadPackage "RandomIdeals"

F10E1 =  kk = ZZ/101;

F10E2 =  R = kk[x_0..x_7];

F10E3 =  T = random(R^1,R^{-1,-1,-1});

F10E4 =  I = ideal(T);

F10E5 =  J = randomElementsFromIdeal({2,2,2},I);

F10E6 =  X=J:I;

F10E7 =  SS=X+I;

F10E8 =  SingSS= radical ideal singularLocus saturate SS;

F10E9 =  degree SingSS

F10E10 =  dim SingSS

F10E11 =  JJ = randomElementsFromIdeal({3},SS);

F10E12 =  IDD=X+JJ;

F10E13 =  PP=IDD:SS;

F10E14 =  BB= randomElementsFromIdeal({5},PP);

F10E15 =  BU=BB+X;

F10E16 =  BT=BU:PP;

F10E17 =  degree BT

F10E18 =  minors(4,(map(R/(decompose SingSS)_0,R)) (jacobian BT))

exampleIDS = {"F10E0", "F10E1", "F10E2", "F10E3", "F10E4", "F10E5", "F10E6", "F10E7", "F10E8", "F10E9", "F10E10", "F10E11", "F10E12", "F10E13", "F10E14", "F10E15", "F10E16", "F10E17", "F10E18"}
