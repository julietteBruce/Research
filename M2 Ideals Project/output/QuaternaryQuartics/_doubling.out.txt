needsPackage "QuaternaryQuartics"

F30E0 =  S = ZZ/101[a..d];

F30E1 =  I = pointsIdeal randomPoints(S, 6)

F30E2 =  betti res I

F30E3 =  doubling(5, I)

F30E4 =  J = doubling(8, I)

F30E5 =  betti res J

F30E6 =  S = ZZ/101[x_0..x_5];

F30E7 =  M = genericSymmetricMatrix(S, 3)

F30E8 =  I = trim minors(2, M)

F30E9 =  doubling(4, I) -- no such map exists

F30E10 =  betti res doubling(6,I)

F30E11 =  betti res doubling(7,I)

F30E12 =  betti res doubling(8,I)

F30E13 =  J = doubling(8, I);

F30E14 =  (dim J, degree J)

F30E15 =  (dim I, degree I)

F30E16 =  S = ZZ/101[x_0..x_8];

F30E17 =  M = genericMatrix(S, 3, 3)

F30E18 =  I = trim minors(2, M)

F30E19 =  betti res doubling(8,I)

F30E20 =  J = doubling(8, I);

F30E21 =  (dim J, degree J)

F30E22 =  (dim I, degree I)

exampleIDS = {"F30E0", "F30E1", "F30E2", "F30E3", "F30E4", "F30E5", "F30E6", "F30E7", "F30E8", "F30E9", "F30E10", "F30E11", "F30E12", "F30E13", "F30E14", "F30E15", "F30E16", "F30E17", "F30E18", "F30E19", "F30E20", "F30E21", "F30E22"}
