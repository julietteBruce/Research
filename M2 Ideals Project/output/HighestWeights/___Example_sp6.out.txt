needsPackage "HighestWeights"

F7E0 =  R=QQ[x_{}, x_{0,1}, x_{0,2}, x_{1,2}, x_{0,3}, x_{1,3}, x_{2,3}, x_{0,4}, x_{1,4}, x_{2,4}, x_{3,4}, x_{0,1,2,3}, x_{0,1,2,4}, x_{0,1,3,4}, x_{0,2,3,4}, x_{1,2,3,4}]

F7E1 =  I=ideal(x_{}*x_{0,1,2,3}-x_{0,1}*x_{2,3}+x_{0,2}*x_{1,3}-x_{0,3}*x_{1,2},

         x_{}*x_{0,1,2,4}-x_{0,1}*x_{2,4}+x_{0,2}*x_{1,4}-x_{0,4}*x_{1,2},

         x_{}*x_{0,1,3,4}-x_{0,1}*x_{3,4}+x_{0,3}*x_{1,4}-x_{0,4}*x_{1,3},

         x_{}*x_{0,2,3,4}-x_{0,2}*x_{3,4}+x_{0,3}*x_{2,4}-x_{0,4}*x_{2,3},

         x_{}*x_{1,2,3,4}-x_{1,2}*x_{3,4}+x_{1,3}*x_{2,4}-x_{1,4}*x_{2,3},

         x_{0,1}*x_{0,2,3,4}-x_{0,2}*x_{0,1,3,4}+x_{0,3}*x_{0,1,2,4}-x_{0,4}*x_{0,1,2,3},

         -x_{0,1}*x_{1,2,3,4}+x_{1,2}*x_{0,1,3,4}-x_{1,3}*x_{0,1,2,4}+x_{1,4}*x_{0,1,2,3},

         x_{0,2}*x_{1,2,3,4}-x_{1,2}*x_{0,2,3,4}+x_{2,3}*x_{0,1,2,4}-x_{2,4}*x_{0,1,2,3},

         -x_{0,3}*x_{1,2,3,4}+x_{1,3}*x_{0,2,3,4}-x_{2,3}*x_{0,1,3,4}+x_{3,4}*x_{0,1,2,3},

         x_{0,4}*x_{1,2,3,4}-x_{1,4}*x_{0,2,3,4}+x_{2,4}*x_{0,1,3,4}-x_{3,4}*x_{0,1,2,4});

F7E2 =  RI=res I; betti RI

F7E3 =  ind = apply(gens R,g->(baseName g)#1)

F7E4 =  makeWeight = J -> apply(5,i->if member(i,J) then 1/2 else -1/2)

F7E5 =  W'=apply(ind,makeWeight)

F7E6 =  M=inverse promote(matrix{{1,0,0,0,0},{-1,1,0,0,0},{0,-1,1,0,0},{0,0,-1,1,1},{0,0,0,-1,1}},QQ)

F7E7 =  D=dynkinType{{"D",5}}

F7E8 =  N=transpose promote(cartanMatrix(rootSystem(D)),QQ)

F7E9 =  W=entries transpose lift(N*M*(transpose matrix W'),ZZ)

F7E10 =  setWeights(R,D,W)

F7E11 =  highestWeightsDecomposition(RI)

F7E12 =  highestWeightsDecomposition(R/I,0,4)

exampleIDS = {"F7E0", "F7E1", "F7E2", "F7E3", "F7E4", "F7E5", "F7E6", "F7E7", "F7E8", "F7E9", "F7E10", "F7E11", "F7E12"}
