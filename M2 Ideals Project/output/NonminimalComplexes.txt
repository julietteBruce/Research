needsPackage "NonminimalComplexes"

F0E0 =  R = QQ[a..d]

F0E1 =  I = ideal(a^3, b^3, c^3, d^3, (a+3*b+7*c-4*d)^3)

F0E2 =  C = res(ideal gens gb I, Strategy=>4.1)

F0E3 =  betti C

F0E4 =  Cs = constantStrands(C, RR_53)

F0E5 =  CR=Cs#8

F0E6 =  SVDBetti C, betti C

F1E0 =  R = QQ[a..d]

F1E1 =  I = ideal(a^3, b^3, c^3, d^3, (a+3*b+7*c-4*d)^3)

F1E2 =  C = res(ideal gens gb I, Strategy=>4.1)

F1E3 =  SVDBetti C, betti C

F1E4 =  Rp=ZZ/32003[gens R]

F1E5 =  betti res sub(I,Rp)

F2E0 =  R = QQ[a..d]

F2E1 =  I = ideal(a^3, b^3, c^3, d^3, (a+3*b+7*c-4*d)^3)

F2E2 =  C = res(ideal gens gb I, Strategy=>4.1)

F2E3 =  betti C

F2E4 =  CR = constantStrand(C, RR_53, 3)

F2E5 =  CR.dd_2

F2E6 =  CR2 = constantStrand(C, RR_1000, 3)

F2E7 =  CR2.dd_2

F2E8 =  kk1 = ZZ/32003

F2E9 =  kk2 = ZZ/1073741909

F2E10 =  Cp1 = constantStrand(C, kk1, 3)

F2E11 =  Cp2 = constantStrand(C, kk2, 3)

F2E12 =  netList {{CR.dd_4, CR2.dd_4}, {Cp1.dd_4, Cp2.dd_4}}

F2E13 =  (clean(1e-14,CR)).dd_4

F2E14 =  netList {(clean(1e-14,CR)).dd_4}==netList {(clean(1e-299,CR2)).dd_4}

F2E15 =  CZ = constantStrand(C, ZZ, 8)

F2E16 =  CZ.dd_4

exampleIDS = {"F0E0", "F0E1", "F0E2", "F0E3", "F0E4", "F0E5", "F0E6", "F1E0", "F1E1", "F1E2", "F1E3", "F1E4", "F1E5", "F2E0", "F2E1", "F2E2", "F2E3", "F2E4", "F2E5", "F2E6", "F2E7", "F2E8", "F2E9", "F2E10", "F2E11", "F2E12", "F2E13", "F2E14", "F2E15", "F2E16"}
