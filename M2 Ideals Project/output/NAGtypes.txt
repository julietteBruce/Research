needsPackage "NAGtypes"

F0E0 =  R = QQ[x,y]; S := polySystem {x^2+y^2-6, 2*x^2-y}

F0E1 =  T := sub(S,CC[x,y])

F0E2 =  ring T

F1E0 =  R = CC[x,y]; S := polySystem {x^2+y^2-6, 2*x^2-y}

F1E1 =  S = polySystem transpose matrix {{x^2+y^2-6, 2*x^2-y}}

F1E2 =  T = polySystem S

F2E0 =  R = CC[x,y]	

F2E1 =  V := numericalAffineSpace R

F2E2 =  C := first components V

F2E3 =  equations C

F2E4 =  slice C

F2E5 =  points C

F3E0 =  toAffineChart(2,{1,2,3,4,5,6}) 

F3E1 =  toAffineChart(2,{1,2,0,4,5,6}) 

F4E0 =  R = CC[x,y]

F4E1 =  w1 := witnessSet(I , ideal(x-y), {point {{0.999999*ii,0.999999*ii}}, point {{-1.000001*ii,-1.000001*ii}}} )

F4E2 =  w0 := witnessSet(I, ideal R, {point {{0.,0.}}})

F4E3 =  V := numericalVariety {w0,w1}

F4E4 =  components V    

F5E0 =  a = point {{0,1}}

F5E1 =  b = point {{0.000000001,1+0.00000000001*ii}}

F5E2 =  c = point {{0.001*ii,1}}

F5E3 =  M = solutionsWithMultiplicity {a,b,c}

F5E4 =  peek M

F6E0 =  loadPackage "NumericalAlgebraicGeometry";

F6E1 =  R = CC[x,y];

F6E2 =  sols = solveSystem{x^2+y^2-3, x^3-y^3-7}

F6E3 =  pt = first sols

F6E4 =  peek pt

F6E5 =  coordinates pt

F6E6 =  status pt

F7E0 =  R = CC[x,y];

F7E1 =  M = matrix{{1,x,x^2-y}}

F7E2 =  p = point matrix{{1,0}};

F7E3 =  D = dualSpace(M,p)

F8E0 =  CC[x,y]

F8E1 =  S = polySystem {x^2+y^2-6, 2*x^2-y}

F8E2 =  p = point {{1.0+3*ii,2.3+ii}};

F8E3 =  evaluate(S,p)

F8E4 =  evaluate(jacobian S, p)

F9E0 =  R = CC[x,y,z]	

F9E1 =  w = projectiveWitnessSet( ideal(x^2+y^2+2*z^2), matrix{{0,0,1}}, matrix{{1,-1,0}}, {point {{0.999999*ii,0.999999*ii,1.}}, point {{ -1.000001*ii,-1.000001*ii,1.}}} )

F9E2 =  peek w

F10E0 =  R = CC[x,y]

F10E1 =  p = point {{1.0+3*ii,2.3+ii}};

F10E2 =  evaluate(S,p)

F10E3 =  evaluate(jacobian S, p)

F11E0 =  R = CC[x,y];

F11E1 =  A = dualSpace(matrix{{y^2,x^2+x*y}},point{{1,1}})

F11E2 =  B = dualSpace(matrix{{x^2+x*y+y^2,y^2+0.00000001}},point{{1,1+0.00000001}})

F11E3 =  b = areEqual(A,B)

F12E0 =  R = CC[x,y];

F12E1 =  M = matrix{{y^2,x^2+x*y}};

F12E2 =  S = polySpace M

F13E0 =  needsPackage "NumericalAlgebraicGeometry"

F13E1 =  R = CC[x,y];

F13E2 =  sols = solveSystem{x^3-y^2, x-y-2}

F13E3 =  sols / isRealPoint

F14E0 =  isGEQ({1,1,1},{1,0,2})

F14E1 =  isGEQ({1,1e-7},{1, 0})

F15E0 =  R = CC[x,y]	

F15E1 =  w = witnessSet( ideal(x^2+y^2+2), ideal(x-y), {point {{0.999999*ii,0.999999*ii}}, point {{-1.000001*ii,-1.000001*ii}}} )

F15E2 =  peek w

F16E0 =  R = CC[x,y,z];

F16E1 =  F = {x*y, x^2 - y, x*z};

F16E2 =  L = generalEquations(2,F)

F17E0 =  areEqual({{-1,1e-7},{1e-7*ii,-1}}, {{-1, 0}, {0, -1}})

F17E1 =  areEqual({3*ii,2*ii,1+ii}, {-6,-4,-2+2*ii}, Projective=>true)  

F17E2 =  A = point {{-1,1e-7}, {1e-7*ii,-1}}

F17E3 =  B = point {{-1,0}, {0, -1}}

F17E4 =  A == B

F18E0 =  R = CC[x,y];

F18E1 =  b = areEqual(polySpace matrix{{y^2,x^2+x*y}}, polySpace matrix{{x^2+x*y+y^2,y^2+0.00000001}})

F19E0 =  R = CC[x,y];

F19E1 =  T = polySpace matrix{{x,y,x-y+1e-10}}

F19E2 =  S = reduceSpace T

F19E3 =  S = reduceSpace(T, Tolerance=>1e-12)

F20E0 =  R = CC[x,y]

F20E1 =  w1 = witnessSet(I , ideal(x-y), {point {{0.999999*ii,0.999999*ii}}, point {{-1.000001*ii,-1.000001*ii}}} )

F20E2 =  w0 = witnessSet(I, ideal R, {point {{0.,0.}}})

F20E3 =  V = numericalVariety {w0,w1}

F21E0 =  R = CC[x,y]

F21E1 =  w1 := witnessSet(I , ideal(x-y), {point {{0.999*ii,0.999*ii}}, point {{-1.001*ii,-1.001*ii}}} )

F21E2 =  w0 := witnessSet(I, ideal R, {point {{0.,0.}}})

F21E3 =  w0' := witnessSet(I, ideal R, {point {{0.,1.}}})

F21E4 =  V := numericalVariety {w0,w1,w0'}

F21E5 =  dim V

F21E6 =  degree V

F22E0 =  p = point({{1+ii,2.3,2*ii}, ConditionNumber=>1000, ErrorBoundEstimate =>0.01});

F22E1 =  project(p,2)

F23E0 =  R = CC[x,y]; S := polySystem {x^2+y^2-6, 2*x^4-y}

F23E1 =  T := homogenize(S,CC[x,y,t],t)

F23E2 =  ring T

F24E0 =  p := point {{1+0.2*ii, 0.5}, SolutionStatus=>Regular, LastT=>1., NumberOfSteps=>10, ConditionNumber=>2.3}

F24E1 =  peek p.cache

F24E2 =  q := point p

F25E0 =  needsPackage "NumericalAlgebraicGeometry"

F25E1 =  R = CC[x,y];

F25E2 =  sols = solveSystem{x^6-y^4, x-y-2}

F25E3 =  realPoints sols

F26E0 =  needsPackage "NumericalAlgebraicGeometry"

F26E1 =  R = CC[x,y];

F26E2 =  s = solveSystem {x^2+y^2-1, x*y}

F26E3 =  sortSolutions s

F27E0 =  R = CC[x,y]

F27E1 =  p = point {{1.001-0.0001*ii,2.+0.0001*ii}};

F27E2 =  evaluate(S,p)

F27E3 =  residual(S,p)

F27E4 =  residual(S,p,Norm=>3)

F27E5 =  residual(S,p,Norm=>infinity)

F28E0 =  needsPackage "NumericalAlgebraicGeometry"

F28E1 =  R = CC[x,y];

F28E2 =  sols = solveSystem{x^2+y^2-3, x^3-y^3-7}

F28E3 =  norm(infinity, first sols)

F28E4 =  norm(2.5, last sols) 

F29E0 =  R = CC[x,y]	

F29E1 =  sliceEquations(matrix{{1,2,3},{4,5,6*ii}}, R)

F29E2 =  projectiveSliceEquations(matrix{{1,2,3},{4,5,6*ii}}, CC[x,y,z])

F30E0 =  R = CC[x,y]	

F30E1 =  I = ideal((x^2+y^2+2)*x,(x^2+y^2+2)*y);

F30E2 =  w1 = witnessSet(I , ideal(x-y), {point {{0.999999*ii,0.999999*ii}}, point {{-1.000001*ii,-1.000001*ii}}} )

F30E3 =  O = point {{0.,0.}}

F30E4 =  numericalVariety {witnessSet(I, ideal R, {O}),w1}

F30E5 =  V = oo

F30E6 =  peek V

F30E7 =  peek w1

F30E8 =  peek O

exampleIDS = {"F0E0", "F0E1", "F0E2", "F1E0", "F1E1", "F1E2", "F2E0", "F2E1", "F2E2", "F2E3", "F2E4", "F2E5", "F3E0", "F3E1", "F4E0", "F4E1", "F4E2", "F4E3", "F4E4", "F5E0", "F5E1", "F5E2", "F5E3", "F5E4", "F6E0", "F6E1", "F6E2", "F6E3", "F6E4", "F6E5", "F6E6", "F7E0", "F7E1", "F7E2", "F7E3", "F8E0", "F8E1", "F8E2", "F8E3", "F8E4", "F9E0", "F9E1", "F9E2", "F10E0", "F10E1", "F10E2", "F10E3", "F11E0", "F11E1", "F11E2", "F11E3", "F12E0", "F12E1", "F12E2", "F13E0", "F13E1", "F13E2", "F13E3", "F14E0", "F14E1", "F15E0", "F15E1", "F15E2", "F16E0", "F16E1", "F16E2", "F17E0", "F17E1", "F17E2", "F17E3", "F17E4", "F18E0", "F18E1", "F19E0", "F19E1", "F19E2", "F19E3", "F20E0", "F20E1", "F20E2", "F20E3", "F21E0", "F21E1", "F21E2", "F21E3", "F21E4", "F21E5", "F21E6", "F22E0", "F22E1", "F23E0", "F23E1", "F23E2", "F24E0", "F24E1", "F24E2", "F25E0", "F25E1", "F25E2", "F25E3", "F26E0", "F26E1", "F26E2", "F26E3", "F27E0", "F27E1", "F27E2", "F27E3", "F27E4", "F27E5", "F28E0", "F28E1", "F28E2", "F28E3", "F28E4", "F29E0", "F29E1", "F29E2", "F30E0", "F30E1", "F30E2", "F30E3", "F30E4", "F30E5", "F30E6", "F30E7", "F30E8"}
