needsPackage "GradedLieAlgebras"

F64E0 =  F = frac(ZZ/7[x])

F64E1 =  L = lieAlgebra({a_1,a_2,a_3},Field => F)/

F64E2 =  L = lieAlgebra({a,b,c},Weights => {{1,-1},{1,4},{2,3}})

F64E3 =  weight b

F64E4 =  ex = a b+(1/3) c

F64E5 =  weight ex

F64E6 =  firstDegree ex

F64E7 =  L1 = lieAlgebra({a,b,c},Weights => {1,1,2})

F64E8 =  describe L1

F64E9 =  L = lieAlgebra({a,b,c},Weights => {{1,-1},{1,4},{2,3}},

            Signs=>{0,1,1})

F64E10 =  ex = a b+(1/3) c

F64E11 =  sign ex

F64E12 =  M = lieAlgebra{a,b,c}

F64E13 =  L = M/{a b}

F64E14 =  a c

F64E15 =  Q = L/{a c}

F64E16 =  ideal(Q)

F64E17 =  oo_1

F64E18 =  ambient Q

F64E19 =  F = lieAlgebra({a,b,c},Weights => {1,1,2},

            Signs=>{1,0,0})

F64E20 =  L = F/{-c+a a,(a b) a}

F64E21 =  dims(1,4,L)

F64E22 =  describe L

F64E23 =  M = minimalPresentation(4,L)

F64E24 =  describe M

F64E25 =  dims(1,4,L)

F64E26 =  peek L#cache

F64E27 =  L#cache.basis#4

F64E28 =  basis(4,L)

F64E29 =  L#cache.gb#4

F64E30 =  a b b a

F64E31 =  dims(1,6,L)

F64E32 =  peek L#cache

F64E33 =  L = lieAlgebra{a,b,c}

F64E34 =  x = (a b c a) (b c)

F64E35 =  Q = L#cache.mbRing

F64E36 =  numgens Q

F64E37 =  indexForm x

F64E38 =  standardForm(oo,L)

exampleIDS = {"F64E0", "F64E1", "F64E2", "F64E3", "F64E4", "F64E5", "F64E6", "F64E7", "F64E8", "F64E9", "F64E10", "F64E11", "F64E12", "F64E13", "F64E14", "F64E15", "F64E16", "F64E17", "F64E18", "F64E19", "F64E20", "F64E21", "F64E22", "F64E23", "F64E24", "F64E25", "F64E26", "F64E27", "F64E28", "F64E29", "F64E30", "F64E31", "F64E32", "F64E33", "F64E34", "F64E35", "F64E36", "F64E37", "F64E38"}
