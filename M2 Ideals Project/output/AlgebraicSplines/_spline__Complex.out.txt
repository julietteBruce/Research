needsPackage "AlgebraicSplines"

F9E0 =  V = {{0,0},{1,0},{0,1},{-1,-1}};

F9E1 =  F = {{0,1,2},{0,2,3},{0,1,3}};

F9E2 =  C = splineComplex(V,F,1);

F9E3 =  prune HH C

F9E4 =  V = {{-1,-1},{1,-1},{0,1},{-2,-2},{2,-2},{0,2}};

F9E5 =  F = {{0,1,2},{0,1,3,4},{1,2,4,5},{0,2,3,5}};

F9E6 =  C = splineComplex(V,F,1);

F9E7 =  prune HH C

F9E8 =  R = (ZZ/4021)[x,y,z];

F9E9 =  V = {{-1,-1},{1,-1},{0,1},{10,10},{-10,10},{0,-10}};

F9E10 =  V'= {{-1,-1},{1,-1},{0,1},{10,10},{-10,10},{1,-10}};

F9E11 =  F = {{0,1,2},{2,3,4},{0,4,5},{1,3,5},{1,2,3},{0,2,4},{0,1,5}};

F9E12 =  C = splineComplex(V,F,1,BaseRing=>R);

F9E13 =  C' = splineComplex(V',F,1,BaseRing=>R);

F9E14 =  prune HH C

F9E15 =  prune HH C'

F9E16 =  R = QQ[x,y,z];

F9E17 =  V = {{-1,-1},{1,-1},{0,1},{10,10},{-10,10},{0,-10}};

F9E18 =  F = {{0,1,2},{2,3,4},{0,4,5},{1,3,5},{1,2,3},{0,2,4},{0,1,5}};

F9E19 =  Id = idealsComplex(V,F,1,BaseRing=>R);

F9E20 =  C = cellularComplex(V,F,BaseRing=>R);

F9E21 =  phi = inducedMap(C,Id);

F9E22 =  SC = splineComplex(V,F,1,BaseRing=>R);

F9E23 =  SC == (coker phi)

F9E24 =  V = {{1, 0, 0}, {-1, 0, 0}, {0, 1, 0}, {0, -1, 0}, {0, 0, 1}, {0, 0, -1}, {-2, -2, -2}, {-2, 2, -2}, {2, 2, -2}, {2, -2, -2}, {-2, -2, 2}, {-2, 2, 2}, {2, 2, 2}, {2, -2, 2}};

F9E25 =  F = {{0, 1, 2, 3, 4, 5}, {0, 8, 9, 12, 13}, {1, 6, 7, 10, 11}, {2, 7, 8, 11, 12}, {3, 6, 9, 10, 13}, {4, 10, 11, 12, 13}, {5, 6, 7, 8, 9}, {0, 2, 8, 12}, {0, 3, 9, 13}, {0, 4, 12, 13}, {0, 5, 8, 9}, {1, 2, 7, 11}, {1, 3, 6, 10}, {1, 4, 10, 11}, {1, 5, 6, 7}, {2, 4, 11, 12}, {3, 4, 10, 13}, {3, 5, 6, 9}, {2, 5, 7, 8}, {0, 2, 4, 12}, {0, 2, 5, 8}, {0, 3, 4, 13}, {0, 3, 5, 9}, {1, 2, 4, 11}, {1, 2, 5, 7}, {1, 3, 4, 10}, {1, 3, 5, 6}};

F9E26 =  C = splineComplex(V,F,1);

F9E27 =  associatedPrimes annihilator HH_2 C

exampleIDS = {"F9E0", "F9E1", "F9E2", "F9E3", "F9E4", "F9E5", "F9E6", "F9E7", "F9E8", "F9E9", "F9E10", "F9E11", "F9E12", "F9E13", "F9E14", "F9E15", "F9E16", "F9E17", "F9E18", "F9E19", "F9E20", "F9E21", "F9E22", "F9E23", "F9E24", "F9E25", "F9E26", "F9E27"}
