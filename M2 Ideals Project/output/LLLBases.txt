needsPackage "LLLBases"

F0E0 =  m = matrix {{1, 0}, {1, 1}, {1, 2}, {1, 3}}

F0E1 =  isLLL m

F0E2 =  n = LLL m

F0E3 =  isLLL n

F0E4 =  m = matrix {{1, 0}, {1, 1}, {1, 2}, {1, 3}}

F0E5 =  isLLL(m, Threshold=>1)

F1E0 =  A = matrix randomMutableMatrix(10,10,.5,100000)

F1E1 =  (B,U) = LLL(A, ChangeMatrix=>true)

F1E2 =  B == A*U

F2E0 =  s = apply(5,i->372*(random 1000000))

F2E1 =  (g,z) = gcdLLL s

F2E2 =  matrix{s} * z

F3E0 =  m1 = map(ZZ^50, ZZ^50, (j,i) -> (i+1)^8 * (j+1)^4 + i + j + 2);

F3E1 =  m = syz m1;

F3E2 =  time LLL m;

F3E3 =  time LLL(m, Strategy=>CohenEngine);

F3E4 =  time LLL(m, Strategy=>CohenTopLevel);

F3E5 =  time LLL(m, Strategy=>{Givens,RealFP});

F3E6 =  time LLL(m, Strategy=>{Givens,RealQP});

F3E7 =  time LLL(m, Strategy=>{Givens,RealXD});

F3E8 =  time LLL(m, Strategy=>{Givens,RealRR});

F3E9 =  time LLL(m, Strategy=>{BKZ,Givens,RealQP});

F4E0 =  m1 = map(ZZ^10, ZZ^10, (j,i) -> (i+1)^3 * (j+1)^2 + i + j + 2)

F4E1 =  m = syz m1

F4E2 =  LLL m

F4E3 =  (n,c) = LLL(m, Strategy => NTL, ChangeMatrix=>true)

F4E4 =  m * c == n

exampleIDS = {"F0E0", "F0E1", "F0E2", "F0E3", "F0E4", "F0E5", "F1E0", "F1E1", "F1E2", "F2E0", "F2E1", "F2E2", "F3E0", "F3E1", "F3E2", "F3E3", "F3E4", "F3E5", "F3E6", "F3E7", "F3E8", "F3E9", "F4E0", "F4E1", "F4E2", "F4E3", "F4E4"}
