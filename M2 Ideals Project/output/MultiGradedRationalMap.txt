needsPackage "MultiGradedRationalMap"

F0E0 =  R = QQ[x,y,z]

F0E1 =  I = ideal(random(4, R), random(4, R), random(4, R));

F0E2 =  betti res I

F0E3 =  degreeOfMap I

F0E4 =  upperBoundDegreeSingleGraded I

F0E5 =  A = matrix{ {x, x^2 + y^2},

                 {-y, y^2 + z*x},

                 {0, x^2}

               };

F0E6 =  I = minors(2, A) -- a birational map

F0E7 =  degreeOfMap I

F0E8 =  upperBoundDegreeSingleGraded I

F0E9 =  A = matrix{ {x^2, x^2 + y^2},

                  {-y^2, y^2 + z*x},

                  {0, x^2}

                };

F0E10 =  I = minors(2, A) -- a non birational map

F0E11 =  degreeOfMap I

F0E12 =  upperBoundDegreeSingleGraded I

F0E13 =  A = matrix{ {x^3, x^2 + y^2},

                  {-y^3, y^2 + z*x},

                  {0, x^2}

                };

F0E14 =  I = minors(2, A) -- a non birational map

F0E15 =  degreeOfMap I

F0E16 =  upperBoundDegreeSingleGraded I

F1E0 =  R = QQ[x,y,z]

F1E1 =  A = matrix{ {x, x^6 + y^6 + z*x^5},

                 {-y, y^6 + z*x^3*y^2},

                 {0, x^6 + x*y^4*z}

               };

F1E2 =  I = minors(2, A) -- a birational map

F1E3 =  prune Hm1Rees0 I

F1E4 =  A = matrix{ {x^2, x^2 + y^2},

                 {-y^2, y^2 + z*x},

                 {0, x^2}

               };

F1E5 =  I = minors(2, A) -- a non birational map

F1E6 =  Hm1Rees0 I

F2E0 =  R = QQ[x,y,u,v, Degrees => {{1,0}, {1,0}, {0,1}, {0,1}}]

F2E1 =  I = ideal(x*u, y*u, y*v) -- a birational map

F2E2 =  isBiratMap I

F2E3 =  I = ideal(x*u, y*v, x*v + y*u) -- a non birational map

F2E4 =  isBiratMap I

F2E5 =  A = matrix{ {x^5*u,  x^2*v^2},

                 {y^5*v, x^2*u^2},

                 {0,     y^2*v^2}

               };

F2E6 =  I = minors(2, A)  -- a non birational

F2E7 =  isBiratMap I

F2E8 =  I = ideal(x*u^2, y*u^2, x*v^2) -- a non birational map

F2E9 =  isBiratMap I

F2E10 =  R = QQ[x,y,z,w]

F2E11 =  A = matrix{ {x + y,  x, x},

                  {3*z - 4*w, y, z},

                  {w,  z, z + w},

                  {y - z,  w, x + y}

                };

F2E12 =  I = minors(3, A) -- a birational map

F2E13 =  isBiratMap I

F2E14 =  I = ideal(random(2, R), random(2, R), random(2, R), random(2, R)); -- a non birational

F2E15 =  isBiratMap I

F3E0 =  R = QQ[x,y,z]

F3E1 =  I = ideal(random(4, R), random(4, R), random(4, R));

F3E2 =  betti res I

F3E3 =  degreeOfMap I

F3E4 =  A = matrix{ {x, x^2 + y^2},

                 {-y, y^2 + z*x},

                 {0, x^2}

               };

F3E5 =  I = minors(2, A) -- a birational map

F3E6 =  degreeOfMap I

F3E7 =  A = matrix{ {x^2, x^2 + y^2},

                 {-y^2, y^2 + z*x},

                 {0, x^2}

               };

F3E8 =  I = minors(2, A) -- a non birational map

F3E9 =  degreeOfMap I

F3E10 =  A = matrix{ {x^3, x^2 + y^2},

                  {-y^3, y^2 + z*x},

                  {0, x^2}

                };

F3E11 =  I = minors(2, A) -- a non birational map

F3E12 =  degreeOfMap I

F3E13 =  A = matrix{ {x^3, x^4},

                  {-y^3, y^4},

                  {z^3, x^4}

                };

F3E14 =  I = minors(2, A) -- a non birational map

F3E15 =  degreeOfMap I

F3E16 =  R = QQ[x,y,z,v,w]

F3E17 =  I = ideal(random(1, R), random(1, R), random(1, R), random(1, R), random(1, R));

F3E18 =  degreeOfMap(I, Strategy=>SatSpecialFibStrategy)

F3E19 =  I = ideal(29*x^3 + 55*x*y*z, 7*y^3, 14*z^3, 17*v^3, 12*w^3)

F3E20 =  degreeOfMap(I, Strategy=>SatSpecialFibStrategy)

F4E0 =  R = QQ[x,y,u,v, Degrees => {{1,0}, {1,0}, {0,1}, {0,1}}]

F4E1 =  I = ideal(x*u, y*u, y*v) -- a birational map

F4E2 =  partialJDRs I

F4E3 =  I = ideal(x*u, y*v, x*v + y*u) -- a non birational map

F4E4 =  partialJDRs I

F4E5 =  A = matrix{ {x^5*u,  x^2*v^2},

                 {y^5*v, x^2*u^2},

                 {0,     y^2*v^2}

               };

F4E6 =  I = minors(2, A)  -- a non birational

F4E7 =  partialJDRs I

F4E8 =  I = ideal(x*u^2, y*u^2, x*v^2) -- non birational map

F4E9 =  partialJDRs I

F4E10 =  R = QQ[x,y,z,w]

F4E11 =  A = matrix{ {x + y,  x, x},

                  {3*z - 4*w, y, z},

                  {w,  z, z + w},

                  {y - z,  w, x + y}

                };

F4E12 =  I = minors(3, A) -- a birational map

F4E13 =  partialJDRs I

F4E14 =  I = ideal(random(2, R), random(2, R), random(2, R), random(2, R)); -- a non birational

F4E15 =  partialJDRs I

F5E0 =  R = QQ[x,y,z]

F5E1 =  A = matrix{ {x, x^5 + y^5},

                 {-y, y^5 + z*x^2*y^2},

                 {0, x^5}

               };

F5E2 =  I = minors(2, A) -- a birational map

F5E3 =  satSpecialFiberIdeal I

F5E4 =  A = matrix{ {x^3, x^2 + y^2},

                 {-y^3, y^2 + z*x},

                 {0, x^2}

               };

F5E5 =  I = minors(2, A) -- a non birational map

F5E6 =  satSpecialFiberIdeal I

F5E7 =  R = QQ[x,y,u,v, Degrees => {{1,0}, {1,0}, {0,1}, {0,1}}]

F5E8 =  I = ideal(x*u, y*u, y*v) -- a birational map

F5E9 =  satSpecialFiberIdeal(I, 5)

F5E10 =  I = ideal(x*u, y*v, x*v + y*u) -- a non birational map

F5E11 =  satSpecialFiberIdeal(I, 5)

F6E0 =  R = QQ[x,y,u,v, Degrees => {{1,0}, {1,0}, {0,1}, {0,1}}]

F6E1 =  I = ideal(x*u, y*u, y*v) -- a birational map

F6E2 =  degreeOfMapIter(I, 5)

F6E3 =  I = ideal(x*u, y*v, x*v + y*u) -- a non birational map

F6E4 =  degreeOfMapIter(I, 5)

F6E5 =  A = matrix{ {x^5*u,  x^2*v^2},

                 {y^5*v, x^2*u^2},

                 {0,     y^2*v^2}

               };

F6E6 =  I = minors(2, A)  -- a non birational

F6E7 =  degreeOfMapIter(I, 5)

F7E0 =  R = QQ[x,y,u,v, Degrees => {{1,0}, {1,0}, {0,1}, {0,1}}]

F7E1 =  I = ideal(x*u, y*u, y*v) -- a birational map

F7E2 =  jacobianDualRank I

F7E3 =  I = ideal(x*u, y*v, x*v + y*u) -- a non birational map

F7E4 =  jacobianDualRank I

F7E5 =  A = matrix{ {x^5*u,  x^2*v^2},

                 {y^5*v, x^2*u^2},

                 {0,     y^2*v^2}

               };

F7E6 =  I = minors(2, A)  -- a non birational

F7E7 =  jacobianDualRank I

F7E8 =  I = ideal(x*u^2, y*u^2, x*v^2) -- non birational map

F7E9 =  jacobianDualRank I

F7E10 =  R = QQ[x,y,z,w]

F7E11 =  A = matrix{ {x + y,  x, x},

                  {3*z - 4*w, y, z},

                  {w,  z, z + w},

                  {y - z,  w, x + y}

                };

F7E12 =  I = minors(3, A) -- a birational map

F7E13 =  jacobianDualRank I

F7E14 =  I = ideal(random(2, R), random(2, R), random(2, R), random(2, R)); -- a non birational

F7E15 =  jacobianDualRank I

F8E0 =  R = QQ[x,y,z]

F8E1 =  A = matrix{ {x, x^2 + y^2},

                 {-y, y^2 + z*x},

                 {0, x^2}

               };

F8E2 =  I = minors(2, A) -- a birational map

F8E3 =  gensSatSpecialFib I

F8E4 =  gensSatSpecialFib(I, 5)

F8E5 =  A = matrix{ {x^3, x^2 + y^2},

                 {-y^3, y^2 + z*x},

                 {0, x^2}

               };

F8E6 =  I = minors(2, A) -- a non birational map

F8E7 =  gensSatSpecialFib I

F8E8 =  gensSatSpecialFib(I, 5)

F8E9 =  R = QQ[x,y,u,v, Degrees => {{1,0}, {1,0}, {0,1}, {0,1}}]

F8E10 =  I = ideal(x*u, y*v, x*v + y*u) -- a non birational map

F8E11 =  gensSatSpecialFib(I, 5)

exampleIDS = {"F0E0", "F0E1", "F0E2", "F0E3", "F0E4", "F0E5", "F0E6", "F0E7", "F0E8", "F0E9", "F0E10", "F0E11", "F0E12", "F0E13", "F0E14", "F0E15", "F0E16", "F1E0", "F1E1", "F1E2", "F1E3", "F1E4", "F1E5", "F1E6", "F2E0", "F2E1", "F2E2", "F2E3", "F2E4", "F2E5", "F2E6", "F2E7", "F2E8", "F2E9", "F2E10", "F2E11", "F2E12", "F2E13", "F2E14", "F2E15", "F3E0", "F3E1", "F3E2", "F3E3", "F3E4", "F3E5", "F3E6", "F3E7", "F3E8", "F3E9", "F3E10", "F3E11", "F3E12", "F3E13", "F3E14", "F3E15", "F3E16", "F3E17", "F3E18", "F3E19", "F3E20", "F4E0", "F4E1", "F4E2", "F4E3", "F4E4", "F4E5", "F4E6", "F4E7", "F4E8", "F4E9", "F4E10", "F4E11", "F4E12", "F4E13", "F4E14", "F4E15", "F5E0", "F5E1", "F5E2", "F5E3", "F5E4", "F5E5", "F5E6", "F5E7", "F5E8", "F5E9", "F5E10", "F5E11", "F6E0", "F6E1", "F6E2", "F6E3", "F6E4", "F6E5", "F6E6", "F6E7", "F7E0", "F7E1", "F7E2", "F7E3", "F7E4", "F7E5", "F7E6", "F7E7", "F7E8", "F7E9", "F7E10", "F7E11", "F7E12", "F7E13", "F7E14", "F7E15", "F8E0", "F8E1", "F8E2", "F8E3", "F8E4", "F8E5", "F8E6", "F8E7", "F8E8", "F8E9", "F8E10", "F8E11"}
