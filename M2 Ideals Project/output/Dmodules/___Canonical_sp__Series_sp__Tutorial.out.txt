needsPackage "Dmodules"

F82E0 =  needsPackage "Dmodules"

F82E1 =  R1 = QQ[z]

F82E2 =  W1 = makeWA R1

F82E3 =  a=1/2

F82E4 =  b=3

F82E5 =  c=5/3

F82E6 =  J = ideal(z*(1-z)*dz^2+(c-(a+b+1)*z)*dz-a*b) -- the Gauss hypergeometric equation, exponents 0, 1-c

F82E7 =  cssExpts(J,{1})

F82E8 =  inw(J,{-1,1})

F82E9 =  distraction(oo,QQ[s])

F82E10 =  factor oo_0

F82E11 =  c=1  -- Now we have a single exponent of multiplicity 2

F82E12 =  J = ideal(z*(1-z)*dz^2+(c-(a+b+1)*z)*dz-a*b)

F82E13 =  cssExpts(J,{1})

F82E14 =  cssExptsMult(J,{1})

F82E15 =  R2 = QQ[x_1..x_3]

F82E16 =  W2 = makeWA R2

F82E17 =  gens W2

F82E18 =  thetaRing = QQ[t_1,t_2,t_3] -- sets variable names t_i = x_i\dx_i

F82E19 =  f1= x_1*dx_1 -- this element already belongs to thetaRing

F82E20 =  genToDistractionGens(f1,thetaRing)  -- checks out

F82E21 =  f2 = x_1^3*dx_1^3 -- this is a descending factorial in the theta variables

F82E22 =  genToDistractionGens(f2,thetaRing)

F82E23 =  factor oo	  -- now it looks like a descending factorial

F82E24 =  f = x_1^2*x_2^2*x_3*dx_1*dx_2^2*dx_3^2

F82E25 =  genToDistractionGens(f,thetaRing)

F82E26 =  A = matrix{{1,1,1},{0,1,2}}

F82E27 =  I = gkz(A,{10,8})

F82E28 =  holonomicRank(I)

F82E29 =  cssExpts(I,{1,0,0})

exampleIDS = {"F82E0", "F82E1", "F82E2", "F82E3", "F82E4", "F82E5", "F82E6", "F82E7", "F82E8", "F82E9", "F82E10", "F82E11", "F82E12", "F82E13", "F82E14", "F82E15", "F82E16", "F82E17", "F82E18", "F82E19", "F82E20", "F82E21", "F82E22", "F82E23", "F82E24", "F82E25", "F82E26", "F82E27", "F82E28", "F82E29"}
