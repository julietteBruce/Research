needsPackage "SubalgebraBases"

F0E0 =  R = QQ[x,y];

F0E1 =  S = subring {x+y, x*y, x*y^2};

F0E2 =  f = x^3;

F0E3 =  f - (f%S)

F0E4 =  h = groebnerSubductionQuotient(f, S)

F1E0 =  R = QQ[x,y,z];

F1E1 =  S = subring({x^2, y^2, z^2, x^2+y^2});

F1E2 =  SB = sagbi S;

F1E3 =  numgens SB

F2E0 =  R = QQ[x,y];

F2E1 =  S = subring {x^2 - x*y, x^4};

F2E2 =  f1 = x^2*y^2 - 2*x^3*y;

F2E3 =  groebnerMembershipTest(f1, S)

F2E4 =  f2 = x^10;

F2E5 =  groebnerMembershipTest(f2, S)

F3E0 =  R = QQ[x,y,z];

F3E1 =  S = subring({x^2, y^2, z^2});

F3E2 =  gens S

F4E0 =  R = QQ[x1, x2, x3];

F4E1 =  S = subring {x1+x2+x3, x1*x2+x1*x3+x2*x3, x1*x2*x3, (x1-x2)*(x1-x3)*(x2-x3)} --usual invariants of A_3

F4E2 =  f = x1 + x2 + 2*x3

F4E3 =  f % S

F4E4 =  g = x1^2*x2 + x2^2*x3 + x3^2*x1

F4E5 =  g % S

F5E0 =  R = QQ[x,y,z];

F5E1 =  S = sagbi {x^2, y^2, z^2}

F5E2 =  ring S

F5E3 =  Q = R / ideal(x^3 - y);

F5E4 =  S' = sagbi {x^3, y^2}

F5E5 =  ring S'

F6E0 =  R = QQ[x,y];

F6E1 =  I = ideal(x^3 + x*y^2 + y^3);

F6E2 =  Q = R/I;

F6E3 =  S1 = subring {x^2, x*y};

F6E4 =  S2 = subring {x, y^2};

F6E5 =  S = subringIntersection(S1, S2);

F6E6 =  gens S

F6E7 =  isSAGBI S

F7E0 =  gndR = QQ[(t_1..t_3)|(w_1..w_3)|(v_1..v_3), MonomialOrder => Lex];

F7E1 =  translation := matrix {{w_1}, {w_2}, {w_3}, {t_1*w_2+t_2*w_3+v_1}, {-t_1*w_1+t_3*w_3+v_2}, {-t_2*w_1-t_3*w_2+v_3}};

F7E2 =  sag := sagbi transpose translation;

F7E3 =  netList first entries gens sag

F7E4 =  R = QQ[x_1..x_9, MonomialOrder => Lex];

F7E5 =  eqns := {x_1^2+x_2^2+x_3^2-1, x_1*x_4+x_2*x_5+x_3*x_6, x_1*x_7+x_2*x_8+x_3*x_9, x_1*x_4+x_2*x_5+x_3*x_6,

              x_4^2+x_5^2+x_6^2-1, x_4*x_7+x_5*x_8+x_6*x_9, x_1*x_7+x_2*x_8+x_3*x_9, x_4*x_7+x_5*x_8+x_6*x_9,

              x_7^2+x_8^2+x_9^2-1, x_1*x_5*x_9-x_1*x_6*x_8-x_2*x_4*x_9+x_2*x_6*x_7+x_3*x_4*x_8-x_3*x_5*x_7-1};

F7E6 =  sag1 = subring sagbi eqns;

F7E7 =  SB = sagbi(sag1, Limit => 100);

F7E8 =  isSAGBI SB

F7E9 =  netList first entries gens SB

F8E0 =  R = QQ[x];

F8E1 =  S = subring {x^4+x^3, x^2+x}

F8E2 =  SB = sagbi S;

F8E3 =  gens SB

F8E4 =  (x^3+x^2)%S

F9E0 =  R = QQ[x,y,z];

F9E1 =  S = sagbi {x^2, y^2, z^2}

F9E2 =  ambient S

F9E3 =  Q = R / ideal(x^3 - y);

F9E4 =  S' = sagbi {x^3, y^2}

F9E5 =  ambient S'

F10E0 =  R = QQ[x,y,z];

F10E1 =  S = subring({x^2, y^2, z^2, x^2+y^2});

F10E2 =  numgens S

F11E0 =  R = QQ[x,y,z];

F11E1 =  S = subring {x+y+z,x*y+x*z+y*z, x*y*z, (x-y)*(x-z)*(y-z)};

F11E2 =  isSAGBI S

F11E3 =  sagbi(S, Limit => 5)

F11E4 =  isSAGBI S

F11E5 =  S' = subring {x+y+z,x*y+x*z+y*z, x*y*z};

F11E6 =  isSAGBI S'

F11E7 =  sagbi(S', Limit => 5)

F11E8 =  isSAGBI S'

F12E0 =  R = QQ[t_(1,1)..t_(3,3),MonomialOrder=>Lex];

F12E1 =  M = genericMatrix(R,3,3);

F12E2 =  A = subring gens minors(2, M);

F12E3 =  isSAGBI A

F12E4 =  S = sagbi A;

F12E5 =  gS = gens S

F12E6 =  isSAGBI gS

F12E7 =  R=QQ[x,y];

F12E8 =  A = subring matrix{{x+y,x*y,x*y^2}};

F12E9 =  gens sagbi(A,Limit=>3)

F12E10 =  gens sagbi(A,Limit=>10)

F13E0 =  R = QQ[x,y,z];

F13E1 =  S = subring({x^2, y^2, z^2});

F13E2 =  ambient S

F13E3 =  Q = R / ideal(x^3 - y);

F13E4 =  S' = subring({x^3, y^2});

F13E5 =  ambient S'

F14E0 =  R = QQ[x,y];

F14E1 =  S = subring({x^2, y^2, x*y}, GeneratorSymbol => f)

F15E0 =  R = QQ[x,y];

F15E1 =  S = subring {x+y, x*y, x*y^2};

F15E2 =  f = x^4;

F15E3 =  subduction(S, f)

F16E0 =  R = ZZ/2[x,y];

F16E1 =  Q = R / ideal(x + y^5);

F16E2 =  S = subring {x+y, x*y, x*y^2};

F16E3 =  f = x^2*y^3 + x^4 + y^4;

F16E4 =  f % S

F16E5 =  g = f // S

F16E6 =  M = map(Q, subductionQuotientRing S, gens S);

F16E7 =  M g == f

F17E0 =  R = QQ[x,y];

F17E1 =  S = subring {x*y, x^2*y, x^3*y};

F17E2 =  gens S

F17E3 =  SB = sagbi(S, Limit => 3);

F17E4 =  gens SB

F17E5 =  isSAGBI S

F17E6 =  isSAGBI SB

exampleIDS = {"F0E0", "F0E1", "F0E2", "F0E3", "F0E4", "F1E0", "F1E1", "F1E2", "F1E3", "F2E0", "F2E1", "F2E2", "F2E3", "F2E4", "F2E5", "F3E0", "F3E1", "F3E2", "F4E0", "F4E1", "F4E2", "F4E3", "F4E4", "F4E5", "F5E0", "F5E1", "F5E2", "F5E3", "F5E4", "F5E5", "F6E0", "F6E1", "F6E2", "F6E3", "F6E4", "F6E5", "F6E6", "F6E7", "F7E0", "F7E1", "F7E2", "F7E3", "F7E4", "F7E5", "F7E6", "F7E7", "F7E8", "F7E9", "F8E0", "F8E1", "F8E2", "F8E3", "F8E4", "F9E0", "F9E1", "F9E2", "F9E3", "F9E4", "F9E5", "F10E0", "F10E1", "F10E2", "F11E0", "F11E1", "F11E2", "F11E3", "F11E4", "F11E5", "F11E6", "F11E7", "F11E8", "F12E0", "F12E1", "F12E2", "F12E3", "F12E4", "F12E5", "F12E6", "F12E7", "F12E8", "F12E9", "F12E10", "F13E0", "F13E1", "F13E2", "F13E3", "F13E4", "F13E5", "F14E0", "F14E1", "F15E0", "F15E1", "F15E2", "F15E3", "F16E0", "F16E1", "F16E2", "F16E3", "F16E4", "F16E5", "F16E6", "F16E7", "F17E0", "F17E1", "F17E2", "F17E3", "F17E4", "F17E5", "F17E6"}
