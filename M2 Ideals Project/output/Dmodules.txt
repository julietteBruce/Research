needsPackage "package_directory/Dmodules/example-output"

F0E0 =  W = QQ[x,y,Dx,Dy, WeylAlgebra => {x=>Dx,y=>Dy}]

F0E1 =  M = W^1/(ideal(x*Dx+1, Dy))

F0E2 =  f = x^2-y^3

F0E3 =  DlocalizeMap(M, f)

F1E0 =  R = QQ[x_1,x_2,D_1,D_2,WeylAlgebra=>{x_1=>D_1,x_2=>D_2}]

F1E1 =  I = ideal(x_1, D_2-1) 

F1E2 =  DrestrictionComplex(I,{1,0})

F2E0 =  W = QQ[x,dx, WeylAlgebra=>{x=>dx}]

F2E1 =  AnnIFs (ideal dx, x^2)

F3E0 =  W = QQ[X, dX, Y, dY, Z, dZ, WeylAlgebra=>{X=>dX, Y=>dY, Z=>dZ}]

F3E1 =  I = ideal (X*(Y-Z), X*Y*Z)

F3E2 =  h = localCohom (2,I)

F3E3 =  Dprune h

F4E0 =  W = QQ[y,t,Dy,Dt, WeylAlgebra => {y=>Dy, t=>Dt}];

F4E1 =  I = ideal(2*t*Dy+Dt, t*Dt+2*y*Dy+2); -- annihilator of 1/(t^2-y)

F4E2 =  DintegrationIdeal(I, {1,4})

F5E0 =  R = QQ[x_1,x_2,D_1,D_2,WeylAlgebra=>{x_1=>D_1,x_2=>D_2}]

F5E1 =  I = ideal(x_1, D_2-1) 

F5E2 =  Dintegration(I,{1,0})

F6E0 =  W = QQ[x,y,Dx,Dy, WeylAlgebra => {x=>Dx,y=>Dy}]

F6E1 =  M = W^1/(ideal(x*Dx+1, Dy))

F6E2 =  f = x^2-y^3

F6E3 =  DlocalizeAll(M, f)

F7E0 =  makeWA(QQ[x])

F7E1 =  I = ideal((x+1)*dx+5)

F7E2 =  RatSols I

F8E0 =  R = QQ[x_1,x_2,D_1,D_2,WeylAlgebra=>{x_1=>D_1,x_2=>D_2}]

F8E1 =  I = ideal(x_1, D_2-1) 

F8E2 =  DrestrictionClasses(I,{1,0})

F9E0 =  R = QQ[x_1,x_2,D_1,D_2,WeylAlgebra=>{x_1=>D_1,x_2=>D_2}]

F9E1 =  I = ideal(x_1, D_2-1) 

F9E2 =  Drestriction(I,{1,0})

F10E0 =  R = QQ[x_1,x_2,D_1,D_2,WeylAlgebra=>{x_1=>D_1,x_2=>D_2}]

F10E1 =  I = ideal(x_1*D_1+3*x_2*D_2-1, D_1^3-D_2)

F10E2 =  Dresolution(I,{-1,-1,1,1})

F11E0 =  makeWA(QQ[x,y])

F11E1 =  I = ideal (x*dx+2*y*dy-3, dx^2-dy)

F11E2 =  inw(I, {1,3,3,-1})

F11E3 =  inw(I, {-1,-3,1,3})

F12E0 =  W = makeWA ( QQ[x_1..x_3] ) 

F12E1 =  AnnFs {x_2^2-x_1*x_3, x_1^3-x_3^2}

F13E0 =  R = QQ[x_1,x_2,D_1,D_2,WeylAlgebra=>{x_1=>D_1,x_2=>D_2}]

F13E1 =  I = ideal(x_1, D_2-1)

F13E2 =  bFunction(I,{1, 0})

F14E0 =  R = QQ[x,y,z]

F14E1 =  I = ideal(x^2-y*z) 

F14E2 =  m = diffOps(I, 3)

F14E3 =  putWeylAlgebra m

F15E0 =  makeWA(QQ[x])

F15E1 =  I = ideal(dx^2, (x-1)*dx-1)

F15E2 =  PolySols I

F16E0 =  W = QQ[y,t,Dy,Dt, WeylAlgebra => {y=>Dy, t=>Dt}];

F16E1 =  I = ideal(2*t*Dy+Dt, t*Dt+2*y*Dy+2); -- annihilator of 1/(t^2-y)

F16E2 =  DrestrictionIdeal(I, {1,4})

F17E0 =  D = makeWA(QQ[x,y])

F17E1 =  S = extractDiffsAlgebra D

F17E2 =  describe S

F18E0 =  f = reiffen(4,5)

F18E1 =  As = AnnFs f

F18E2 =  A = sub(As, {last gens ring As => -1});

F18E3 =  (kappa,A') = kappaAnnF1PlanarCurve f

F18E4 =  A == sub(A', ring A)

F19E0 =  R = QQ[x_1..x_4];

F19E1 =  multiplierIdeal(ideal {x_1^3 - x_2^2, x_2^3 - x_3^2}, 31/18)

F20E0 =  W = QQ[x,y,Dx,Dy, WeylAlgebra => {x=>Dx,y=>Dy}]

F20E1 =  createDpairs W 

F20E2 =  W.dpairVars

F20E3 =  W.dpairInds

F21E0 =  S=QQ[x,y];

F21E1 =  f=x*y*(x-y);

F21E2 =  logCohomology(f)

F22E0 =  R = QQ[x_1..x_4];

F22E1 =  isInMultiplierIdeal(x_1, ideal {x_1^3 - x_2^2, x_2^3 - x_3^2}, 31/18)

F22E2 =  isInMultiplierIdeal(x_1*x_2, ideal {x_1^3 - x_2^2, x_2^3 - x_3^2}, 31/18)

F23E0 =  W = QQ[X, dX, Y, dY, Z, dZ, WeylAlgebra=>{X=>dX, Y=>dY, Z=>dZ}]

F23E1 =  I = ideal (X*(Y-Z), X*Y*Z)

F23E2 =  h = localCohom({1,2}, I)

F23E3 =  pruneLocalCohom h

F24E0 =  R = QQ[x,y,z]

F24E1 =  I = ideal(x^2-y*z)

F24E2 =  diffOps(I, 3)

F25E0 =  R = QQ[x, dx, WeylAlgebra => {x=>dx}]

F25E1 =  f = x^7

F25E2 =  b = globalB(ideal dx, f)

F25E3 =  factorBFunction b.Bpolynomial 

F26E0 =  W = QQ[x, D, WeylAlgebra=>{x=>D}]

F26E1 =  M = W^1/ideal(x*(D-1))

F26E2 =  N = W^1/ideal((D-1)^2)

F26E3 =  DExt(M,N)

F27E0 =  makeWA(QQ[x])

F27E1 =  I = ideal(x*dx-2)

F27E2 =  holonomicRank I

F27E3 =  WeylClosure I

F28E0 =  makeWA(QQ[x,y])

F28E1 =  f = x^2-y^3

F28E2 =  g = 2*x*y

F28E3 =  I = RatAnn (g,f)

F29E0 =  W = QQ[X, dX, Y, dY, Z, dZ, WeylAlgebra=>{X=>dX, Y=>dY, Z=>dZ}]

F29E1 =  I = ideal (X*(Y-Z), X*Y*Z)

F29E2 =  h = localCohom({1,2}, I, W^1 / ideal{dX,dY,dZ})

F29E3 =  pruneLocalCohom h

F30E0 =  W = QQ[x, D, WeylAlgebra=>{x=>D}]

F30E1 =  M = W^1/ideal(x*D+5)

F30E2 =  RatExt M

F31E0 =  I = AppellF1({1,0,-3,2})

F31E1 =  Ddual I

F32E0 =  makeWA(QQ[x,y])

F32E1 =  I = ideal (x*dx+2*y*dy-3, dx^2-dy)

F32E2 =  charIdeal I

F33E0 =  R = QQ[x,y]

F33E1 =  f = x^2-y^3 

F33E2 =  deRham f

F33E3 =  deRham(1,f)

F34E0 =  makeWA(QQ[x,y])

F34E1 =  I = ideal (x*dx+2*y*dy-3, dx^2-dy)

F34E2 =  Ddim I

F35E0 =  W = makeWA(QQ[x_1..x_3]);

F35E1 =  factorBFunction generalB ({x_2^2-x_1*x_3, x_1^3-x_3^2}, x_2)

F36E0 =  makeWA(QQ[x,y])

F36E1 =  L = x^2*dy + y*dy^2 + 3*dx^5*dy

F36E2 =  Dtransposition L

F37E0 =  R1 = QQ[z]

F37E1 =  W1 = makeWA R1

F37E2 =  a=1/2

F37E3 =  b=3

F37E4 =  c=5/3

F37E5 =  J = ideal(z*(1-z)*dz^2+(c-(a+b+1)*z)*dz-a*b) -- the Gauss hypergeometric equation, exponents 0, 1-c

F37E6 =  cssExpts(J,{1})

F37E7 =  K = inw(J,{-1,1})

F37E8 =  distraction(K,QQ[s])

F38E0 =  R = QQ[x]

F38E1 =  f = x^10

F38E2 =  b = globalBFunction f

F38E3 =  factorBFunction b

F39E0 =  A =  (QQ [a,b,c]) [x, y, Dx, Dy, WeylAlgebra => {x=>Dx, y=>Dy}]

F39E1 =  paramBpoly(a*x^2 + b*x*y + c*y^2, "quadratic")

F40E0 =  R1 = QQ[z]

F40E1 =  W1 = makeWA R1

F40E2 =  a=1/2

F40E3 =  b=3

F40E4 =  c=5/3

F40E5 =  J = ideal(z*(1-z)*dz^2+(c-(a+b+1)*z)*dz-a*b) -- the Gauss hypergeometric equation, exponents 0, 1-c

F40E6 =  cssExpts(J,{1})

F40E7 =  K = inw(J,{-1,1})

F40E8 =  distraction(K,QQ[s])

F41E0 =  R = QQ[x_1..x_4, z, d_1..d_4, Dz, WeylAlgebra => toList(1..4)/(i -> x_i => d_i) | {z=>Dz}]

F41E1 =  f = x_1 + x_2 * z + x_3 * z^2 + x_4 * z^3

F41E2 =  AnnFs f

F42E0 =  R = QQ[x_1..x_4]

F42E1 =  W = makeWA R

F42E2 =  describe W

F43E0 =  R = QQ[x_1..x_4];

F43E1 =  multiplierIdeal(ideal {x_1^3 - x_2^2, x_2^3 - x_3^2}, 31/18)

F44E0 =  w = {1,4/5,-2,3/2}

F44E1 =  I = AppellF1 w

F45E0 =  R = QQ[x_1,x_2,D_1,D_2,WeylAlgebra=>{x_1=>D_1,x_2=>D_2}]

F45E1 =  I = ideal(x_1, D_2-1) 

F45E2 =  DrestrictionAll(I,{1,0})

F46E0 =  makeWA(QQ[x,y])

F46E1 =  f = x^2-y^3

F46E2 =  I = PolyAnn f

F47E0 =  makeWA(QQ[x,y])

F47E1 =  I = ideal (x*dx+2*y*dy-3, dx^2-dy)

F47E2 =  holonomicRank I

F48E0 =  W = QQ[x,y,Dx,Dy, WeylAlgebra => {x=>Dx,y=>Dy}]

F48E1 =  M = W^1/(ideal(x*Dx+1, Dy))

F48E2 =  f = x^2-y^3

F48E3 =  Mf = Dlocalize(M, f)

F49E0 =  D = makeWA(QQ[x_1..x_3])

F49E1 =  A = matrix{{1,1,1},{0,1,2}}

F49E2 =  b = {3,4}

F49E3 =  I = gkz(A,b,D)

F49E4 =  isHolonomic I

F50E0 =  W = QQ[x, D, WeylAlgebra=>{x=>D}]

F50E1 =  M = W^1/ideal(x^2*D^2)

F50E2 =  PolyExt(M)

F51E0 =  R1 = QQ[z]

F51E1 =  W1 = makeWA R1

F51E2 =  a=1/2

F51E3 =  b=3

F51E4 =  c=5/3

F51E5 =  J = ideal(z*(1-z)*dz^2+(c-(a+b+1)*z)*dz-a*b) -- the Gauss hypergeometric equation, exponents 0, 1-c

F51E6 =  cssExpts(J,{1})

F52E0 =  R = QQ[x_1,x_2,D_1,D_2,WeylAlgebra=>{x_1=>D_1,x_2=>D_2}]

F52E1 =  I = ideal(x_1, D_2-1) 

F52E2 =  DintegrationClasses(I,{1,0})

F53E0 =  A = matrix{{1,1,1},{0,1,2}}

F53E1 =  b = {3,4}

F53E2 =  I = gkz (A,b)

F53E3 =  describe ring I

F53E4 =  D = makeWA(QQ[x_1..x_3])

F53E5 =  gkz(A,b,D)

F53E6 =  toricIdealPartials(A,D)

F53E7 =  eulerOperators(A,b,D)

F54E0 =  reiffen(4,5)

F55E0 =  R = QQ[x,y]

F55E1 =  f = x^2*(x+y+1)

F55E2 =  P = ideal(x,y)

F55E3 =  b = localBFunction(f,P)

F55E4 =  factorBFunction b

F56E0 =  A =  QQ[x_1,x_2,a_1,a_2]

F56E1 =  cc = {ideal A => 1} -- the characteristic ideal of R = CC[x_1,x_2] 

F56E2 =  cc1 = BMM(cc,x_1)   -- cc of R_{x_1}

F56E3 =  cc12 = BMM(cc1,x_2) -- cc of R_{x_1x_2}

F57E0 =  R = QQ[x_1..x_4];

F57E1 =  jumpingCoefficients ideal {x_1^3 - x_2^2, x_2^3 - x_3^2}

F58E0 =  R = QQ[x_1,x_2,D_1,D_2,WeylAlgebra=>{x_1=>D_1,x_2=>D_2}]

F58E1 =  I = ideal(x_1, D_2-1) 

F58E2 =  DintegrationComplex(I,{1,0})

F59E0 =  makeWA(QQ[x,y])

F59E1 =  L = x^2*dy + y*dy^2 + 3*dx^5*dy

F59E2 =  Fourier L

F60E0 =  W = makeWA(QQ[x,y])

F60E1 =  M = matrix{{x,dx},{1,1}} 

F60E2 =  Dprune M

F60E3 =  Dprune coker M

F60E4 =  M = matrix{{x,dx},{x,y}}

F60E5 =  Dprune M

F61E0 =  R = QQ[x,y]

F61E1 =  f = x^2-y^3 

F61E2 =  deRhamAll f

F62E0 =  W = QQ[x, D, WeylAlgebra=>{x=>D}]

F62E1 =  M = W^1/ideal(D-1)

F62E2 =  N = W^1/ideal((D-1)^2)

F62E3 =  DHom(M,N)

F63E0 =  W =  QQ[x_1..x_6, a_1..a_6];

F63E1 =  I = minors(2, matrix{{x_1, x_2, x_3}, {x_4, 0, 0}});

F63E2 =  cc = {ideal W => 1};

F64E0 =  D1 = QQ[z,dz, WeylAlgebra=>{z=>dz}]

F64E1 =  dz*z

F64E2 =  R = QQ[x_1..x_4]

F64E3 =  D4 = makeWA R

F64E4 =  describe D4

F64E5 =  use D1

F64E6 =  a = 1, b = 2, c = 3

F64E7 =  g = z*(1-z)*dz^2 + (c-(a+b+1)*z)*dz -a*b

F64E8 =  I = ideal g

F64E9 =  holonomicRank I

F64E10 =  use D4

F64E11 =  A = matrix{{1,1,1,1},{0,1,3,4}}

F64E12 =  b = {1,2}

F64E13 =  H = gkz(A,b, D4)

F64E14 =  isHolonomic H

F64E15 =  holonomicRank H

F64E16 =  holonomicRank sub(gkz(A,{1,0}), vars D4)

F64E17 =  charIdeal H

F64E18 =  singLocus H

F64E19 =  A1 = matrix{{1,1,1,1},{0,1,2,3}}, b1={0,0}

F64E20 =  H1 = sub(gkz(A1,b1),vars D4)

F64E21 =  factor (singLocus H1)_0

F65E0 =  W =  QQ[x_1..x_6, a_1..a_6];

F65E1 =  I = minors(2, matrix{{x_1, x_2, x_3}, {x_4, 0, 0}});

F65E2 =  cc = {ideal W => 1};

F66E0 =  W = QQ[X, dX, Y, dY, Z, dZ, WeylAlgebra=>{X=>dX, Y=>dY, Z=>dZ}]

F66E1 =  I = ideal (X*(Y-Z), X*Y*Z)

F66E2 =  h = localCohom(2, I, W^1 / ideal{dX,dY,dZ})

F66E3 =  pruneLocalCohom h

F67E0 =  R = QQ[t_1..t_5];

F67E1 =  I = ideal(R_0+R_1+R_2+R_3+R_4, R_0+R_1-R_3, R_1+R_2-R_3, R_0*R_2, R_1*R_3);

F67E2 =  netList solveFrobeniusIdeal I

F68E0 =  W = QQ[X, dX, Y, dY, Z, dZ, WeylAlgebra=>{X=>dX, Y=>dY, Z=>dZ}]

F68E1 =  I = ideal (X*(Y-Z), X*Y*Z)

F68E2 =  h = localCohom(I, W^1 / ideal{dX,dY,dZ})

F68E3 =  pruneLocalCohom h

F69E0 =  makeWA(QQ[x_1..x_4])

F69E1 =  stafford ideal (dx_1,dx_2,dx_3,dx_4)

F70E0 =  makeWA(QQ[x,y])

F70E1 =  I = ideal (x*dx+2*y*dy-3, dx^2-dy)

F70E2 =  singLocus I

F71E0 =  R = QQ[x, dx, WeylAlgebra => {x=>dx}]

F71E1 =  f = x^10

F71E2 =  b = globalBFunction f

F71E3 =  factorBFunction b

F72E0 =  W = QQ[X, dX, Y, dY, Z, dZ, WeylAlgebra=>{X=>dX, Y=>dY, Z=>dZ}]

F72E1 =  I = ideal (X*(Y-Z), X*Y*Z)

F72E2 =  h = localCohom I

F72E3 =  pruneLocalCohom h

F73E0 =  R1 = QQ[z]

F73E1 =  W1 = makeWA R1

F73E2 =  a=1/2

F73E3 =  b=3

F73E4 =  c=5/3

F73E5 =  J = ideal(z*(1-z)*dz^2+(c-(a+b+1)*z)*dz-a*b) -- the Gauss hypergeometric equation, exponents 0, 1-c

F73E6 =  cssExpts(J,{1})

F73E7 =  c=1  -- Now we have a single exponent of multiplicity 2

F73E8 =  J = ideal(z*(1-z)*dz^2+(c-(a+b+1)*z)*dz-a*b)

F73E9 =  cssExpts(J,{1})

F73E10 =  cssExptsMult(J,{1})

F74E0 =  R = QQ[x, dx, WeylAlgebra => {x=>dx}]

F74E1 =  M = cokernel matrix {{x^2, 0, 0}, {0, dx^3, 0}, {0, 0, x^3}}

F74E2 =  factorBFunction bFunction(M, {1}, {0,0,0})

F74E3 =  factorBFunction bFunction(M, {1}, {1,2,3})

F75E0 =  W = makeWA(QQ[x_1,x_2])

F75E1 =  b = 2

F75E2 =  I = ideal(x_1*dx_1*(x_1*dx_1+b), x_1*dx_1*(x_2*dx_2+b),

         x_2*dx_2*(x_1*dx_1+b), x_2*dx_2*(x_2*dx_2+b))

F75E3 =  isTorusFixed I

F76E0 =  makeWA(QQ[x])

F76E1 =  M = matrix {{dx,0,0},{0,dx,0},{0,0,dx}} -- coker M = QQ[x]^3

F76E2 =  h = makeCyclic M

F77E0 =  makeWA(QQ[x,y])

F77E1 =  I = ideal (x*dx+2*y*dy-3, dx^2-dy)

F77E2 =  gbw(I, {1,3,3,-1})

F77E3 =  gbw(I, {-1,-3,1,3})

F78E0 =  QQ[x_1..x_3];

F78E1 =  I = ideal (x_2^2-x_1*x_3, x_1^3-x_3^2);

F78E2 =  lct I

F79E0 =  D = makeWA(QQ[x,y])

F79E1 =  R = extractVarsAlgebra D

F79E2 =  describe R

F80E0 =  R = QQ[x_1,x_2,D_1,D_2,WeylAlgebra=>{x_1=>D_1,x_2=>D_2}]

F80E1 =  I = ideal(x_1, D_2-1) 

F80E2 =  DintegrationAll(I,{1,0})

F81E0 =  R = QQ[x,y,z]

F81E1 =  D = makeWeylAlgebra R

F81E2 =  makeWA(QQ[x,y,z])

F82E0 =  needsPackage "Dmodules"

F82E1 =  R1 = QQ[z]

F82E2 =  W1 = makeWA R1

F82E3 =  a=1/2

F82E4 =  b=3

F82E5 =  c=5/3

F82E6 =  J = ideal(z*(1-z)*dz^2+(c-(a+b+1)*z)*dz-a*b) -- the Gauss hypergeometric equation, exponents 0, 1-c

F82E7 =  cssExpts(J,{1})

F82E8 =  inw(J,{-1,1})

F82E9 =  distraction(oo,QQ[s])

F82E10 =  factor oo_0

F82E11 =  c=1  -- Now we have a single exponent of multiplicity 2

F82E12 =  J = ideal(z*(1-z)*dz^2+(c-(a+b+1)*z)*dz-a*b)

F82E13 =  cssExpts(J,{1})

F82E14 =  cssExptsMult(J,{1})

F82E15 =  R2 = QQ[x_1..x_3]

F82E16 =  W2 = makeWA R2

F82E17 =  gens W2

F82E18 =  thetaRing = QQ[t_1,t_2,t_3] -- sets variable names t_i = x_i\dx_i

F82E19 =  f1= x_1*dx_1 -- this element already belongs to thetaRing

F82E20 =  genToDistractionGens(f1,thetaRing)  -- checks out

F82E21 =  f2 = x_1^3*dx_1^3 -- this is a descending factorial in the theta variables

F82E22 =  genToDistractionGens(f2,thetaRing)

F82E23 =  factor oo	  -- now it looks like a descending factorial

F82E24 =  f = x_1^2*x_2^2*x_3*dx_1*dx_2^2*dx_3^2

F82E25 =  genToDistractionGens(f,thetaRing)

F82E26 =  A = matrix{{1,1,1},{0,1,2}}

F82E27 =  I = gkz(A,{10,8})

F82E28 =  holonomicRank(I)

F82E29 =  cssExpts(I,{1,0,0})

F83E0 =  R = QQ[x_1,x_2]

F83E1 =  f = x_1^2-x_2^3

F83E2 =  A1 = kOrderAnnFa(1,f,-1)

F83E3 =  As = kOrderAnnFs(1,f)

F84E0 =  A = matrix{{1,1,1},{0,1,2}}

F84E1 =  D = makeWA(QQ[x_1..x_3])

F84E2 =  toricIdealPartials(A,D)

exampleIDS = {"F0E0", "F0E1", "F0E2", "F0E3", "F1E0", "F1E1", "F1E2", "F2E0", "F2E1", "F3E0", "F3E1", "F3E2", "F3E3", "F4E0", "F4E1", "F4E2", "F5E0", "F5E1", "F5E2", "F6E0", "F6E1", "F6E2", "F6E3", "F7E0", "F7E1", "F7E2", "F8E0", "F8E1", "F8E2", "F9E0", "F9E1", "F9E2", "F10E0", "F10E1", "F10E2", "F11E0", "F11E1", "F11E2", "F11E3", "F12E0", "F12E1", "F13E0", "F13E1", "F13E2", "F14E0", "F14E1", "F14E2", "F14E3", "F15E0", "F15E1", "F15E2", "F16E0", "F16E1", "F16E2", "F17E0", "F17E1", "F17E2", "F18E0", "F18E1", "F18E2", "F18E3", "F18E4", "F19E0", "F19E1", "F20E0", "F20E1", "F20E2", "F20E3", "F21E0", "F21E1", "F21E2", "F22E0", "F22E1", "F22E2", "F23E0", "F23E1", "F23E2", "F23E3", "F24E0", "F24E1", "F24E2", "F25E0", "F25E1", "F25E2", "F25E3", "F26E0", "F26E1", "F26E2", "F26E3", "F27E0", "F27E1", "F27E2", "F27E3", "F28E0", "F28E1", "F28E2", "F28E3", "F29E0", "F29E1", "F29E2", "F29E3", "F30E0", "F30E1", "F30E2", "F31E0", "F31E1", "F32E0", "F32E1", "F32E2", "F33E0", "F33E1", "F33E2", "F33E3", "F34E0", "F34E1", "F34E2", "F35E0", "F35E1", "F36E0", "F36E1", "F36E2", "F37E0", "F37E1", "F37E2", "F37E3", "F37E4", "F37E5", "F37E6", "F37E7", "F37E8", "F38E0", "F38E1", "F38E2", "F38E3", "F39E0", "F39E1", "F40E0", "F40E1", "F40E2", "F40E3", "F40E4", "F40E5", "F40E6", "F40E7", "F40E8", "F41E0", "F41E1", "F41E2", "F42E0", "F42E1", "F42E2", "F43E0", "F43E1", "F44E0", "F44E1", "F45E0", "F45E1", "F45E2", "F46E0", "F46E1", "F46E2", "F47E0", "F47E1", "F47E2", "F48E0", "F48E1", "F48E2", "F48E3", "F49E0", "F49E1", "F49E2", "F49E3", "F49E4", "F50E0", "F50E1", "F50E2", "F51E0", "F51E1", "F51E2", "F51E3", "F51E4", "F51E5", "F51E6", "F52E0", "F52E1", "F52E2", "F53E0", "F53E1", "F53E2", "F53E3", "F53E4", "F53E5", "F53E6", "F53E7", "F54E0", "F55E0", "F55E1", "F55E2", "F55E3", "F55E4", "F56E0", "F56E1", "F56E2", "F56E3", "F57E0", "F57E1", "F58E0", "F58E1", "F58E2", "F59E0", "F59E1", "F59E2", "F60E0", "F60E1", "F60E2", "F60E3", "F60E4", "F60E5", "F61E0", "F61E1", "F61E2", "F62E0", "F62E1", "F62E2", "F62E3", "F63E0", "F63E1", "F63E2", "F64E0", "F64E1", "F64E2", "F64E3", "F64E4", "F64E5", "F64E6", "F64E7", "F64E8", "F64E9", "F64E10", "F64E11", "F64E12", "F64E13", "F64E14", "F64E15", "F64E16", "F64E17", "F64E18", "F64E19", "F64E20", "F64E21", "F65E0", "F65E1", "F65E2", "F66E0", "F66E1", "F66E2", "F66E3", "F67E0", "F67E1", "F67E2", "F68E0", "F68E1", "F68E2", "F68E3", "F69E0", "F69E1", "F70E0", "F70E1", "F70E2", "F71E0", "F71E1", "F71E2", "F71E3", "F72E0", "F72E1", "F72E2", "F72E3", "F73E0", "F73E1", "F73E2", "F73E3", "F73E4", "F73E5", "F73E6", "F73E7", "F73E8", "F73E9", "F73E10", "F74E0", "F74E1", "F74E2", "F74E3", "F75E0", "F75E1", "F75E2", "F75E3", "F76E0", "F76E1", "F76E2", "F77E0", "F77E1", "F77E2", "F77E3", "F78E0", "F78E1", "F78E2", "F79E0", "F79E1", "F79E2", "F80E0", "F80E1", "F80E2", "F81E0", "F81E1", "F81E2", "F82E0", "F82E1", "F82E2", "F82E3", "F82E4", "F82E5", "F82E6", "F82E7", "F82E8", "F82E9", "F82E10", "F82E11", "F82E12", "F82E13", "F82E14", "F82E15", "F82E16", "F82E17", "F82E18", "F82E19", "F82E20", "F82E21", "F82E22", "F82E23", "F82E24", "F82E25", "F82E26", "F82E27", "F82E28", "F82E29", "F83E0", "F83E1", "F83E2", "F83E3", "F84E0", "F84E1", "F84E2"}
