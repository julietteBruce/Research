needsPackage "Schubert2"

F73E0 =  X = abstractVariety(2,QQ[r,D,d_1,K,c_2,d_2,Degrees=>{0,3:1,2:2}])

F73E1 =  X.TangentBundle = abstractSheaf(X,Rank=>2,ChernClass=>1-K+c_2)

F73E2 =  todd X

F73E3 =  chi OO_X

F73E4 =  E = abstractSheaf(X,Rank => r, ChernClass => 1+d_1+d_2)

F73E5 =  chi ( E - rank E * OO_X )

F73E6 =  chi ( OO(D) - OO_X )

F73E7 =  chi OO_D

F73E8 =  p_a = D -> 1 - chi OO_D;

F73E9 =  p_a D

F73E10 =  Y = abstractProjectiveSpace'_2 base n

F73E11 =  factor p_a (n*h)

F73E12 =  Z = abstractProjectiveSpace'_(1,VariableName => k) abstractProjectiveSpace'_1 base(m,n)

F73E13 =  factor p_a (m*h + n*k)

exampleIDS = {"F73E0", "F73E1", "F73E2", "F73E3", "F73E4", "F73E5", "F73E6", "F73E7", "F73E8", "F73E9", "F73E10", "F73E11", "F73E12", "F73E13"}
