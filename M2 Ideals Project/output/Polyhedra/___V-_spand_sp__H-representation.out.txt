needsPackage "Polyhedra"

F34E0 =  C = coneFromVData matrix {{1,0,0},{1,1,0},{1,0,1},{1,1,1}}

F34E1 =  rays C

F34E2 =  facets C

F34E3 =  (facets C) * (rays C)

F34E4 =  (hyperplanes C) * (rays C)

F34E5 =  (facets C) * (linealitySpace C)

F34E6 =  P = hypercube(2,0,1)

F34E7 =  V = vertices P

F34E8 =  (A, b) = facets P

F34E9 =  A * V

F34E10 =  for i from 0 to numColumns V - 1 do (

            test := b - A*V_{i};

            << "Vertex " << i << " " << (flatten entries V_{i}) << ": " << all(flatten entries test, e -> e>= 0) << endl;

         )

F34E11 =  P = convexHull(matrix{{1,0},{0,1},{2,2}}, matrix {{1},{1},{2}})

F34E12 =  vertices P

F34E13 =  rays P

F34E14 =  (A, b) = facets P

F34E15 =  A * (vertices P)

F34E16 =  A * (rays P)

F34E17 =  (E, v) = hyperplanes P

F34E18 =  E * (rays P)

F34E19 =  E * (vertices P)

F34E20 =  C == coneFromVData(rays C, linealitySpace C)

F34E21 =  C == coneFromRays(rays C, linealitySpace C)

F34E22 =  C == coneFromHData(facets C, hyperplanes C)

F34E23 =  C == coneFromInequalities(facets C, hyperplanes C)

F34E24 =  P == convexHull (vertices P, rays P, linealitySpace P)

F34E25 =  F = facets P

F34E26 =  H = hyperplanes P

F34E27 =  P == polyhedronFromHData(F#0, F#1, H#0, H#1)

F34E28 =  P == polyhedronFromInequalities(F#0, F#1, H#0, H#1)

exampleIDS = {"F34E0", "F34E1", "F34E2", "F34E3", "F34E4", "F34E5", "F34E6", "F34E7", "F34E8", "F34E9", "F34E10", "F34E11", "F34E12", "F34E13", "F34E14", "F34E15", "F34E16", "F34E17", "F34E18", "F34E19", "F34E20", "F34E21", "F34E22", "F34E23", "F34E24", "F34E25", "F34E26", "F34E27", "F34E28"}
