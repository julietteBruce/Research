needsPackage "NoetherNormalization"

F0E0 =  R = QQ[x_1..x_4];

F0E1 =  I = ideal(x_2^2+x_1*x_2+1, x_1*x_2*x_3*x_4+1);

F0E2 =  (f,J,X) = noetherNormalization I

F0E3 =  R = QQ[x_1..x_5, MonomialOrder => Lex];

F0E4 =  I = ideal(x_2*x_1-x_5^3, x_5*x_1^3);

F0E5 =  (f,J,X) = noetherNormalization I

F0E6 =  transpose gens gb J

F0E7 =  R = ZZ/2[a,b];

F0E8 =  I = ideal(a^2*b+a*b^2+1);

F0E9 =  (f,J,X) = noetherNormalization I

F0E10 =  R = QQ[x_1..x_4];

F0E11 =  I = ideal(x_2^2+x_1*x_2+1, x_1*x_2*x_3*x_4+1);

F0E12 =  (f,J,X) = noetherNormalization(I,Verbose => true)

F0E13 =  R = QQ[x_1..x_4]; 

F0E14 =  I = ideal(x_2^2+x_1*x_2+1, x_1*x_2*x_3*x_4+1);

F0E15 =  (f,J,X) = noetherNormalization(I,Verbose => true,LimitList => {5,10})

F0E16 =  R = QQ[x_1..x_4];

F0E17 =  I = ideal(x_2^2+x_1*x_2+1, x_1*x_2*x_3*x_4+1);

F0E18 =  (f,J,X) = noetherNormalization(I,Verbose => true,RandomRange => 2)

exampleIDS = {"F0E0", "F0E1", "F0E2", "F0E3", "F0E4", "F0E5", "F0E6", "F0E7", "F0E8", "F0E9", "F0E10", "F0E11", "F0E12", "F0E13", "F0E14", "F0E15", "F0E16", "F0E17", "F0E18"}
