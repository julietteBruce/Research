needsPackage "SimplicialComplexes"

F29E0 =  S = ZZ[a..e];

F29E1 =  Δ = simplicialComplex monomialIdeal (a*b*c*d*e)

F29E2 =  skeleton (-2, Δ)

F29E3 =  assert (skeleton (-2, Δ) === simplicialComplex monomialIdeal 1_S)

F29E4 =  skeleton (-1, Δ)

F29E5 =  assert (skeleton (-1, Δ) === simplicialComplex {1_S})

F29E6 =  skeleton (0, Δ)

F29E7 =  assert (skeleton (0, Δ) === simplicialComplex gens S)

F29E8 =  skeleton (1, Δ)

F29E9 =  assert (skeleton (1, Δ) === simplicialComplex apply (subsets (gens S, 2), product))

F29E10 =  skeleton (2, Δ)

F29E11 =  assert (skeleton (2, Δ) === simplicialComplex apply (subsets (gens S, 3), product))

F29E12 =  skeleton (3, Δ)

F29E13 =  assert (skeleton (3, Δ) === Δ)

F29E14 =  fVector Δ

F29E15 =  R = ZZ/101[a..f];

F29E16 =  Γ = simplicialComplex {e, c*d, b*d, a*b*c}

F29E17 =  skeleton (-7, Γ)

F29E18 =  assert (skeleton (-7, Γ) === simplicialComplex monomialIdeal 1_R)

F29E19 =  skeleton (-1, Γ)

F29E20 =  assert (skeleton (-1, Γ) === simplicialComplex {1_R})

F29E21 =  skeleton (0, Γ)

F29E22 =  assert (skeleton (0, Γ) === simplicialComplex {a, b, c, d, e})

F29E23 =  skeleton (1, Γ)

F29E24 =  assert (skeleton (1, Γ) === simplicialComplex {e, c*d, b*d, b*c, a*c, a*b})

F29E25 =  skeleton (2, Γ)

F29E26 =  assert (skeleton (2, Γ) === Γ)

exampleIDS = {"F29E0", "F29E1", "F29E2", "F29E3", "F29E4", "F29E5", "F29E6", "F29E7", "F29E8", "F29E9", "F29E10", "F29E11", "F29E12", "F29E13", "F29E14", "F29E15", "F29E16", "F29E17", "F29E18", "F29E19", "F29E20", "F29E21", "F29E22", "F29E23", "F29E24", "F29E25", "F29E26"}
