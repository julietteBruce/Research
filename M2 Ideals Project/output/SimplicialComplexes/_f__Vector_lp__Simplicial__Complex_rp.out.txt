needsPackage "SimplicialComplexes"

F54E0 =  S = ZZ[x_0..x_6];

F54E1 =  netList for n from -1 to 6 list fVector simplexComplex(n, S)

F54E2 =  assert all(1..7, i -> (fVector simplexComplex(6,S))#i === binomial(7,i))

F54E3 =  S = ZZ[x_1..x_16];

F54E4 =  fVector bartnetteSphereComplex S

F54E5 =  fVector bjornerComplex S

F54E6 =  fVector dunceHatComplex S

F54E7 =  fVector poincareSphereComplex S

F54E8 =  fVector rudinBallComplex S

F54E9 =  irrelevant = simplicialComplex monomialIdeal gens S

F54E10 =  fVector irrelevant

F54E11 =  assert(fVector irrelevant === {1})

F54E12 =  void = simplicialComplex monomialIdeal 1_S

F54E13 =  fVector void

F54E14 =  assert(fVector void === {0})

exampleIDS = {"F54E0", "F54E1", "F54E2", "F54E3", "F54E4", "F54E5", "F54E6", "F54E7", "F54E8", "F54E9", "F54E10", "F54E11", "F54E12", "F54E13", "F54E14"}
