needsPackage "SimplicialComplexes"

F44E0 =  S = QQ[a..g];

F44E1 =  torus = smallManifold(2, 7, 6, S)

F44E2 =  C = chainComplex torus

F44E3 =  fVector torus

F44E4 =  prune HH C

F44E5 =  assert(prune HH_1 C == QQ^2)

F44E6 =  assert(prune HH_2 C == QQ^1)

F44E7 =  prune HH torus

F44E8 =  R = ZZ[a..h];

F44E9 =  Δ = kleinBottleComplex R

F44E10 =  C' = chainComplex Δ

F44E11 =  C'.dd

F44E12 =  fVector Δ

F44E13 =  prune HH C'

F44E14 =  prune HH Δ

F44E15 =  assert(prune HH_1 C' == ZZ^1/ideal(2) ++ ZZ^1)

F44E16 =  S = QQ[a..d];

F44E17 =  Γ = simplicialComplex{a*b*c, b*c*d};

F44E18 =  C = chainComplex Γ

F44E19 =  C.dd

F44E20 =  R = QQ[x_0..x_3];

F44E21 =  hC = chainComplex(Γ, Labels => {x_0*x_1, x_3, x_1*x_2, x_0*x_2})

F44E22 =  hC.dd

F44E23 =  prune homology hC

F44E24 =  hC' = chainComplex(Γ, Labels => {x_3, x_0*x_1, x_1*x_2, x_0*x_2})

F44E25 =  hC'.dd

F44E26 =  prune HH hC'

exampleIDS = {"F44E0", "F44E1", "F44E2", "F44E3", "F44E4", "F44E5", "F44E6", "F44E7", "F44E8", "F44E9", "F44E10", "F44E11", "F44E12", "F44E13", "F44E14", "F44E15", "F44E16", "F44E17", "F44E18", "F44E19", "F44E20", "F44E21", "F44E22", "F44E23", "F44E24", "F44E25", "F44E26"}
