needsPackage "SimplicialComplexes"

F4E0 =  S = ZZ[a..e];

F4E1 =  Δ = simplicialComplex monomialIdeal (a*b*c*d*e)

F4E2 =  monomialIdeal Δ

F4E3 =  facets Δ

F4E4 =  dim Δ

F4E5 =  assert (dim Δ === 3 and numgens ideal Δ === 1 and isPure Δ)

F4E6 =  R = QQ[a..f];

F4E7 =  Γ = simplicialComplex monomialIdeal (a*b*c*d*e, f)

F4E8 =  monomialIdeal Γ

F4E9 =  facets Γ

F4E10 =  assert((for F in facets Γ list sub(F,S)) === facets Δ)

F4E11 =  S' = ZZ/101[a..e];

F4E12 =  Δ' = simplicialComplex monomialIdeal (a*d, b*c*d, a*e, b*e, c*e, d*e)

F4E13 =  monomialIdeal Δ'

F4E14 =  facets Δ'

F4E15 =  dim Δ'

F4E16 =  assert (dim Δ' === 2 and not isPure Δ')

F4E17 =  irrelevant = simplicialComplex monomialIdeal gens S

F4E18 =  monomialIdeal irrelevant

F4E19 =  facets irrelevant

F4E20 =  void = simplicialComplex monomialIdeal 1_R

F4E21 =  monomialIdeal void

F4E22 =  facets void

F4E23 =  assert (facets irrelevant === {1_S} and facets void === {})

F4E24 =  chainComplex Δ

F4E25 =  chainComplex Γ

F4E26 =  chainComplex Δ'

F4E27 =  Bowtie = simplicialComplex ideal {a*d, b*d, a*e, b*e}

exampleIDS = {"F4E0", "F4E1", "F4E2", "F4E3", "F4E4", "F4E5", "F4E6", "F4E7", "F4E8", "F4E9", "F4E10", "F4E11", "F4E12", "F4E13", "F4E14", "F4E15", "F4E16", "F4E17", "F4E18", "F4E19", "F4E20", "F4E21", "F4E22", "F4E23", "F4E24", "F4E25", "F4E26", "F4E27"}
