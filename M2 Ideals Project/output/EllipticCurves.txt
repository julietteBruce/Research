needsPackage "EllipticCurves"

F0E0 =  E=ellCurve({1,2,3,4,6},GF(29))

F0E1 =  Discriminant(E)

F1E0 =  ellCurve(3,8,GF(13))

F2E0 =  E=ellCurve({1,2,3,4,6},GF(29))

F2E1 =  jInvariant(E)

F3E0 =  S=ZZ/7[x,y]

F3E1 =  I=ideal(y^2-x^3-x-1)

F3E2 =  isElliptic(I)

F4E0 =  E=ellCurve(3,8,GF(13))

F4E1 =  P=ellPoint({1,5,1},E)

F5E0 =  ellCurve({1,2,3,4,6},GF(29))

F5E1 =  ellCurve({0,-1,1,-10,-20},QQ)

F6E0 =  E=ellCurve(3,8,GF(13))

F6E1 =  jInvariant(E)

F7E0 =  E=ellCurve(3,8,GF(13))

F7E1 =  Discriminant(E)

F8E0 =  E=ellCurve(3,8,GF(13))

F8E1 =  P=ellPoint({1,5,1},E)

F8E2 =  Q=ellPoint({2,3,1},E)

F8E3 =  P+Q

F9E0 =  E=ellCurve(3,8,GF(13))

F9E1 =  isOnEllCurve({1,5,1},E)

F10E0 =  E=ellCurve({1,2,3,4,6},GF(29))

F10E1 =  P=ellPoint({1,5,1},E)

F11E0 =  ellCurveFromjInv(46/3)

F12E0 =  E=ellCurve({1,2,3,4,6},GF(29))

F12E1 =  isOnEllCurve({1,5,1},E)

F13E0 =  toWeierstrass({-1,0,+1,0,0,+1,0,-1,0,+2},{1,2,1},ZZ/13)

F14E0 =  E=ellCurve({1,2,3,4,6},GF(29))

F14E1 =  bruteForceRationalPoints(E)

F15E0 =  E=ellCurve(3,8,GF(13))

F15E1 =  P=ellPoint({1,5,1},E)

F15E2 =  4*P

F16E0 =  E=ellCurve(3,8,GF(13))

F16E1 =  bruteForceRationalPoints(E)

F17E0 =  E=ellCurve(3,8,GF(13))

F17E1 =  bruteForceGroupOrder(E)

F18E0 =  E=ellCurve(3,8,GF(13))

F18E1 =  P=ellPoint({1,5,1},E)

F18E2 =  -P

F19E0 =  E=ellCurve({1,2,3,4,6},GF(29))

F19E1 =  bruteForceGroupOrder(E)

F20E0 =  E=ellCurve({1,2,3,4,6},GF(29))

F20E1 =  toShortWForm(E)

F21E0 =  E=ellCurve(3,8,GF(13))

F21E1 =  P=ellPoint({1,5,1},E)

F21E2 =  Q=ellPoint({2,3,1},E)

F21E3 =  P-Q

exampleIDS = {"F0E0", "F0E1", "F1E0", "F2E0", "F2E1", "F3E0", "F3E1", "F3E2", "F4E0", "F4E1", "F5E0", "F5E1", "F6E0", "F6E1", "F7E0", "F7E1", "F8E0", "F8E1", "F8E2", "F8E3", "F9E0", "F9E1", "F10E0", "F10E1", "F11E0", "F12E0", "F12E1", "F13E0", "F14E0", "F14E1", "F15E0", "F15E1", "F15E2", "F16E0", "F16E1", "F17E0", "F17E1", "F18E0", "F18E1", "F18E2", "F19E0", "F19E1", "F20E0", "F20E1", "F21E0", "F21E1", "F21E2", "F21E3"}
