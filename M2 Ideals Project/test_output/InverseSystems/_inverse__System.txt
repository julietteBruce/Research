needsPackage "InverseSystems"

F4E0 =  setRandomSeed 0

F4E1 =  kk = QQ

F4E2 =  S = kk[a,b,c]

F4E3 =  map(S,S,0_S*vars S)

F4E4 =  p = (a+b)^2

F4E5 =  q = toDividedPowers p

F4E6 =  p' = fromDividedPowers q

F4E7 =  p'==p

F4E8 =  kk = ZZ/101

F4E9 =  S = kk[a..d]

F4E10 =  f1 = matrix"a2b2+c2d2"; -- gives 1,4,6,4,1

F4E11 =  f2 = matrix"a2b2+b2c2+c2d2"

F4E12 =  f3 = matrix"a2b2+b2c2+c2d2+c2a2"; -- gives 1,4,8,4,1

F4E13 =  f4 = matrix"a2b2+b2c2+c2d2+c2a2+a2d2"; --gives 1,4,8,4,1

F4E14 =  f5 = matrix"a2b2+b2c2+c2d2+c2a2+a2d2+b2d2+b4"; --gives 1,4,9,4,1

F4E15 =  f6 = matrix"a2b2+b2c2+c2d2+c2a2+a2d2+b2d2"; --gives 1,4,10,4,1

F4E16 =  F = {f1,f2,f3,f4,f5,f6};

F4E17 =  netList (F/(f->betti res inverseSystem f))

