needsPackage "TateOnProducts"

F19E0 =  (S,E) = productOfProjectiveSpaces{1,1}

F19E1 =  low = {-4,-4}

F19E2 =  T1= (dual res( trim (ideal vars E)^2,LengthLimit=>8))[1];

F19E3 =  T2=res(coker upperCorner(T1,{4,3}),LengthLimit=>13)[7];

F19E4 =  T=trivialHomologicalTruncation (T2,-5,6);

F19E5 =  cohomologyMatrix(T,low,high)

F19E6 =  c =  -{2,1};

F19E7 =  cT=cornerComplex(T,c);

F19E8 =  betti cT

F19E9 =  cohomologyMatrix(cT,low,high)

F19E10 =  fqT=firstQuadrantComplex(T,c);

F19E11 =  lqT=lastQuadrantComplex(T,c);

F19E12 =  cohomologyMatrix(fqT,low,high)

F19E13 =  cohomologyMatrix(lqT,low,high)

F19E14 =  betti fqT

F19E15 =  betti lqT

F19E16 =  betti cT

F19E17 =  betti (cT.dd_(-sum c-1))

F19E18 =  c = {-1,-1}

F19E19 =  cT=cornerComplex(T,c);

F19E20 =  betti cT

F19E21 =  cohomologyMatrix(cT,low,high)

F19E22 =  fqT=firstQuadrantComplex(T,c);

F19E23 =  lqT=lastQuadrantComplex(T,c);

F19E24 =  cohomologyMatrix(fqT,low,high)

F19E25 =  cohomologyMatrix(lqT,low,high)

F19E26 =  betti fqT

F19E27 =  betti lqT

F19E28 =  betti cT

F19E29 =  betti (cT.dd_1)

F19E30 =  (S,E)=productOfProjectiveSpaces{2,1}

F19E31 =  M=beilinson(E^{-{1,1}})

F19E32 =  c={1,1}

F19E33 =  low={-3,-3},high={4,4}

F19E34 =  cohomologyMatrix(M,low,high)

F19E35 =  C=cornerComplex(M,c,low,high)

F19E36 =  cohomologyMatrix(C,low,high)

F19E37 =  cohomologyMatrix(C,2*low,2*high)

F19E38 =  betti C

F19E39 =  C.dd_(-sum c +1)

