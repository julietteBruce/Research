needsPackage "NormalToricVarieties"

F5E0 =  PP2 = toricProjectiveSpace 2;

F5E1 =  h0 = hilbertPolynomial PP2

F5E2 =  factor h0

F5E3 =  h1 = hilbertPolynomial (ring PP2, Projective => false)

F5E4 =  assert (h0 === sub(h1, (ring h1)_0 => (ring h0)_0))

F5E5 =  PP3 = toricProjectiveSpace 3;

F5E6 =  h2 = hilbertPolynomial PP3

F5E7 =  factor h2

F5E8 =  h3 = hilbertPolynomial (ring PP3, Projective => false)

F5E9 =  assert (h2 === sub(h3, (ring h3)_0 => (ring h2)_0))

F5E10 =  X = toricProjectiveSpace (2) ** toricProjectiveSpace (3);

F5E11 =  h3 = hilbertPolynomial X

F5E12 =  factor h3

F5E13 =  a = random (9)

F5E14 =  FFa = hirzebruchSurface a;

F5E15 =  h4 = hilbertPolynomial FFa

F5E16 =  R = ring h4;

F5E17 =  assert (h4 == R_0 * R_1 + (a/2)*R_1^2 + R_0 + ((a+2)/2)*R_1 + 1)

