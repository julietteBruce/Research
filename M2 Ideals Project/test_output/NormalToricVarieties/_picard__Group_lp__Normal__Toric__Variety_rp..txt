needsPackage "NormalToricVarieties"

F55E0 =  PP3 = toricProjectiveSpace 3;

F55E1 =  assert (isSmooth PP3 and isProjective PP3)

F55E2 =  picardGroup PP3

F55E3 =  assert (picardGroup PP3 === classGroup PP3 and isFreeModule picardGroup PP3)

F55E4 =  X = smoothFanoToricVariety (4,90);

F55E5 =  assert (isSmooth X and isProjective X and isFano X)

F55E6 =  picardGroup X

F55E7 =  assert (fromCDivToPic X === fromWDivToCl X and isFreeModule picardGroup X)

F55E8 =  U = normalToricVariety ({{4,-1},{0,1}},{{0},{1}});

F55E9 =  assert (isSmooth U and not isComplete U and # max U =!= 1)

F55E10 =  picardGroup U

F55E11 =  assert (classGroup U	=== picardGroup U and not isFreeModule picardGroup U)

F55E12 =  AA3 = affineSpace 3

F55E13 =  assert (isSimplicial AA3 and isSmooth AA3 and # max AA3 === 1)

F55E14 =  picardGroup AA3

F55E15 =  assert (picardGroup AA3 == 0 and isFreeModule picardGroup AA3)

F55E16 =  Q = normalToricVariety ({{1,0,0},{0,1,0},{0,0,1},{1,1,-1}},{{0,1,2,3}});

F55E17 =  assert (not isSimplicial Q and not isComplete Q and # max Q === 1)

F55E18 =  picardGroup Q

F55E19 =  assert (picardGroup Q == 0 and isFreeModule picardGroup Q)

F55E20 =  Y = normalToricVariety (id_(ZZ^3) | -id_(ZZ^3));

F55E21 =  assert (not isSimplicial Y and isProjective Y)

F55E22 =  picardGroup Y

F55E23 =  assert (rank picardGroup Y === 1 and isFreeModule picardGroup Y)

