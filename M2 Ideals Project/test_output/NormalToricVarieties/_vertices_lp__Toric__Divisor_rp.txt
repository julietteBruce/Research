needsPackage "NormalToricVarieties"

F47E0 =  PP2 = toricProjectiveSpace 2;

F47E1 =  assert (null === vertices (-PP2_0))

F47E2 =  vertices (0*PP2_0)

F47E3 =  assert isAmple PP2_0

F47E4 =  V1 = vertices (PP2_0)

F47E5 =  X1 = normalToricVariety V1;

F47E6 =  assert (set rays X1 === set rays PP2 and max X1 === max PP2)

F47E7 =  assert isAmple (2*PP2_0)

F47E8 =  V2 = vertices (2*PP2_0)

F47E9 =  X2 = normalToricVariety V2;

F47E10 =  assert (rays X2 === rays X1 and max X2 === max X1)

F47E11 =  FF2 = hirzebruchSurface 2;

F47E12 =  assert not isAmple FF2_2

F47E13 =  V3 = vertices FF2_2

F47E14 =  normalToricVariety V3  -- a degenerated version of the projective line

F47E15 =  assert isDegenerate normalToricVariety V3

F47E16 =  assert not isAmple FF2_3

F47E17 =  V4 = vertices FF2_3

F47E18 =  normalToricVariety V4 -- a weighted projective space

F47E19 =  vertices FF2_1

F47E20 =  assert isAmple (FF2_2 + FF2_3)

F47E21 =  V5 = vertices (FF2_2 + FF2_3)

F47E22 =  X3 = normalToricVariety V5 -- isomorphic Hirzebruch surface

F47E23 =  assert (set rays X3 === set rays FF2)

