needsPackage "NormalToricVarieties"

F37E0 =  rayList = {{1,0},{0,1},{-1,1},{-1,0},{0,-1}}

F37E1 =  coneList = {{0,1},{1,2},{2,3},{3,4},{0,4}}

F37E2 =  X = normalToricVariety (rayList, coneList)

F37E3 =  rays X

F37E4 =  max X

F37E5 =  dim X

F37E6 =  assert (isWellDefined X and isProjective X and isSmooth X)

F37E7 =  PP4 = toricProjectiveSpace 4;

F37E8 =  rays PP4

F37E9 =  max PP4

F37E10 =  dim PP4

F37E11 =  ring PP4

F37E12 =  PP4' = normalToricVariety (rays PP4, max PP4, CoefficientRing => ZZ/32003, Variable => y)

F37E13 =  ring PP4'

F37E14 =  assert (isWellDefined PP4 and isProjective PP4 and isSmooth PP4)

F37E15 =  PP2 = toricProjectiveSpace 2;

F37E16 =  A = fromWDivToCl PP2

F37E17 =  source A == weilDivisorGroup PP2

F37E18 =  target A == classGroup PP2

F37E19 =  degrees ring PP2

F37E20 =  deg = matrix {toList (3:-1)}

F37E21 =  X = normalToricVariety (rays PP2, max PP2, WeilToClass => deg);

F37E22 =  A' = fromWDivToCl X

F37E23 =  source A' == weilDivisorGroup X

F37E24 =  target A' == classGroup X

F37E25 =  degrees ring X

F37E26 =  (matrix A') * (matrix rays X)

F37E27 =  assert (isWellDefined X and isProjective X and isSmooth X)

F37E28 =  rayList = {{1,0},{0,1},{-1,1},{-1,0},{0,-1}};

F37E29 =  coneList = {{0,1},{1,2},{2,3},{3,4},{0,4}};

F37E30 =  Y = normalToricVariety (rayList, coneList);

F37E31 =  fromWDivToCl Y

F37E32 =  nefGenerators Y

F37E33 =  deg = matrix{{1,-1,1,0,0},{0,1,-1,1,0},{0,0,1,-1,1}}

F37E34 =  Y' = normalToricVariety (rays Y, max Y, WeilToClass => deg);

F37E35 =  fromWDivToCl Y'

F37E36 =  nefGenerators Y'

F37E37 =  assert (isWellDefined Y and isWellDefined Y')

