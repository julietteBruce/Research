needsPackage "TestIdeals"

F3E0 =  R = ZZ/5[x,y,z]/(x^2 + y*z);

F3E1 =  isFRegular(R)

F3E2 =  R = ZZ/7[x,y,z]/(x^3 + y^3 + z^3);

F3E3 =  isFRegular(R)

F3E4 =  R = ZZ/5[x,y];

F3E5 =  f = y^2 - x^3;

F3E6 =  isFRegular(1/2, f)

F3E7 =  isFRegular(5/6, f)

F3E8 =  isFRegular(4/5, f)

F3E9 =  isFRegular(4/5 - 1/100000, f)

F3E10 =  R = ZZ/7[x,y,z]/((x - 1)^3 + (y + 1)^3 + z^3);

F3E11 =  isFRegular(R)

F3E12 =  isFRegular(R, AtOrigin => true)

F3E13 =  S = ZZ/13[x,y,z]/(x^3 + y^3 + z^3);

F3E14 =  isFRegular(S)

F3E15 =  isFRegular(S, AtOrigin => true)

F3E16 =  R = ZZ/13[x,y];

F3E17 =  f = (y - 2)^2 - (x - 3)^3;

F3E18 =  isFRegular(5/6, f)

F3E19 =  isFRegular(5/6, f, AtOrigin => true)

F3E20 =  g = y^2 - x^3;

F3E21 =  isFRegular(5/6, g)

F3E22 =  isFRegular(5/6, g, AtOrigin => true)

F3E23 =  S = ZZ/7[x,y,z,u,v,w];

F3E24 =  I = minors(2, matrix {{x, y, z}, {u, v, w}});

F3E25 =  debugLevel = 1;

F3E26 =  time isFRegular(S/I, QGorensteinIndex => infinity, DepthOfSearch => 1)

F3E27 =  time isFRegular(S/I, QGorensteinIndex => infinity, DepthOfSearch => 2)

F3E28 =  debugLevel = 0;

