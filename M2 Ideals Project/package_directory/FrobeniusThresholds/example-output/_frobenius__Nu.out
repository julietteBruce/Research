-- -*- M2-comint -*- hash: -1507626838

i1 : R = ZZ/11[x,y];

i2 : I = ideal(x^2 + y^3, x*y);

o2 : Ideal of R

i3 : J = ideal(x^2, y^3);

o3 : Ideal of R

i4 : frobeniusNu(1, I, J)

o4 = 24

i5 : f = x*y*(x^2 + y^2);

i6 : frobeniusNu(3, f, J)

o6 = 1330

i7 : frobeniusNu(1, 0_R, J)

o7 = 0

i8 : frobeniusNu(1, 1_R, J)

o8 = infinity

o8 : InfiniteNumber

i9 : R = ZZ/17[x,y,z];

i10 : f = x^3 + y^4 + z^5;

i11 : frobeniusNu(2, f)

o11 = 220

i12 : frobeniusNu(2, f, ideal(x, y, z))

o12 = 220

i13 : R = ZZ/17[x,y,z];

i14 : f = x^3 + y^4 + z^5; -- a diagonal polynomial

i15 : time frobeniusNu(3, f)
     -- used 0.00636186 seconds

o15 = 3756

i16 : time frobeniusNu(3, f, UseSpecialAlgorithms => false)
     -- used 0.31488 seconds

o16 = 3756

i17 : R = ZZ/5[x,y,z];

i18 : f = x^3 + y^3 + z^3 + x*y*z;

i19 : time frobeniusNu(4, f) -- ContainmentTest is set to FrobeniusRoot, by default
     -- used 0.322889 seconds

o19 = 499

i20 : time frobeniusNu(4, f, ContainmentTest => StandardPower)
     -- used 2.26048 seconds

o20 = 499

i21 : R = ZZ/3[x,y];

i22 : M = ideal(x, y);

o22 : Ideal of R

i23 : frobeniusNu(3, M^5)

o23 = 10

i24 : frobeniusNu(3, M^5, ContainmentTest => FrobeniusPower)

o24 = 8

i25 : R = ZZ/5[x,y,z];

i26 : f = x^2*y^4 + y^2*z^7 + z^2*x^8;

i27 : time frobeniusNu(5, f) -- uses binary search (default)
     -- used 0.644837 seconds

o27 = 1124

i28 : time frobeniusNu(5, f, Search => Linear)
     -- used 1.21811 seconds

o28 = 1124

i29 : M = ideal(x, y, z);

o29 : Ideal of R

i30 : time frobeniusNu(2, M, M^2) -- uses binary search (default)
     -- used 2.51481 seconds

o30 = 97

i31 : time frobeniusNu(2, M, M^2, Search => Linear) -- but linear search gets luckier
     -- used 0.903972 seconds

o31 = 97

i32 : R = ZZ/7[x,y];

i33 : f = (x - 1)^3 - (y - 2)^2;

i34 : frobeniusNu(1, f)

o34 = infinity

o34 : InfiniteNumber

i35 : frobeniusNu(1, f, AtOrigin => false)

o35 = 5

i36 : R = ZZ/5[x,y,z];

i37 : f = x^2*y^4 + y^2*z^7 + z^2*x^8;

i38 : frobeniusNu(5, f, ReturnList => true)

o38 = {0, 1, 8, 44, 224, 1124}

o38 : List

i39 : frobeniusNu(5, f, Verbose => true)
nuInternal: using comparison test FrobeniusRoot
ν(1) = 0
ν(p^1) = 1
ν(p^2) = 8
ν(p^3) = 44
ν(p^4) = 224
ν(p^5) = 1124

o39 = 1124

i40 : 
