-- -*- M2-comint -*- hash: 118850188

i1 : methods BettiTally

o1 = {0 => (**, BettiTally, BettiTally)        }
     {1 => (*, QQ, BettiTally)                 }
     {2 => (*, ZZ, BettiTally)                 }
     {3 => (++, BettiTally, BettiTally)        }
     {4 => (==, BettiTally, BettiTally)        }
     {5 => (^, Ring, BettiTally)               }
     {6 => (betti, BettiTally)                 }
     {7 => (codim, BettiTally)                 }
     {8 => (degree, BettiTally)                }
     {9 => (dual, BettiTally)                  }
     {10 => (hilbertPolynomial, ZZ, BettiTally)}
     {11 => (hilbertSeries, ZZ, BettiTally)    }
     {12 => (lift, BettiTally, ZZ)             }
     {13 => (mathML, BettiTally)               }
     {14 => (multigraded, BettiTally)          }
     {15 => (net, BettiTally)                  }
     {16 => (pdim, BettiTally)                 }
     {17 => (poincare, BettiTally)             }
     {18 => (regularity, BettiTally)           }
     {19 => (SPACE, BettiTally, Array)         }
     {20 => (SPACE, BettiTally, ZZ)            }
     {21 => (texMath, BettiTally)              }

o1 : NumberedVerticalList

i2 : methods resolution

o2 = {0 => (resolution, Ideal)        }
     {1 => (resolution, Matrix)       }
     {2 => (resolution, Module)       }
     {3 => (resolution, MonomialIdeal)}

o2 : NumberedVerticalList

i3 : methods symbol @@

o3 = {0 => ((@@, =), Thing, Thing)     }
     {1 => ((@@, =), Type, Type)       }
     {2 => (@@, Expression, Expression)}
     {3 => (@@, Expression, Holder)    }
     {4 => (@@, Expression, Thing)     }
     {5 => (@@, Function, Function)    }
     {6 => (@@, Holder, Expression)    }
     {7 => (@@, Holder, Holder)        }
     {8 => (@@, Thing, Expression)     }
     {9 => (@@, Thing, Thing)          }

o3 : NumberedVerticalList

i4 : methods( symbol ++, Module)

o4 = {0 => (++, GradedModule, Module)}
     {1 => (++, Module, GradedModule)}
     {2 => (++, Module, Module)      }

o4 : NumberedVerticalList

i5 : methods( Matrix, Matrix )

o5 = {0 => (%, Matrix, Matrix)                                   }
     {1 => (**, Matrix, Matrix)                                  }
     {2 => (*, Matrix, Matrix)                                   }
     {3 => (++, Matrix, Matrix)                                  }
     {4 => (+, Matrix, Matrix)                                   }
     {5 => (-*Function*-, Matrix, Matrix)                        }
     {6 => (-*Function*-, Matrix, Matrix)                        }
     {7 => (-*Function*-, Matrix, Matrix)                        }
     {8 => (-*Function*-, Matrix, Matrix, List)                  }
     {9 => (-, Matrix, Matrix)                                   }
     {10 => (//, Matrix, Matrix)                                 }
     {11 => (==, Matrix, Matrix)                                 }
     {12 => (\\, Matrix, Matrix)                                 }
     {13 => (|, Matrix, Matrix)                                  }
     {14 => (||, Matrix, Matrix)                                 }
     {15 => (basisPolyhedron, Matrix, Matrix)                    }
     {16 => (checkDegrees, Matrix, Matrix)                       }
     {17 => (computeFacetsFromRayData, Matrix, Matrix)           }
     {18 => (computeRaysFromFacetData, Matrix, Matrix)           }
     {19 => (coneFromHData, Matrix, Matrix)                      }
     {20 => (coneFromMinimalHData, Matrix, Matrix)               }
     {21 => (coneFromMinimalVData, Matrix, Matrix)               }
     {22 => (coneFromVData, Matrix, Matrix)                      }
     {23 => (contract', Matrix, Matrix)                          }
     {24 => (contract, Matrix, Matrix)                           }
     {25 => (convexHull, Matrix, Matrix)                         }
     {26 => (convexHull, Matrix, Matrix, Matrix)                 }
     {27 => (diagInvariants, Matrix, Matrix, Ring)               }
     {28 => (diff', Matrix, Matrix)                              }
     {29 => (diff, Matrix, Matrix)                               }
     {30 => (fan, Matrix, Matrix, List)                          }
     {31 => (fan, Matrix, Matrix, Sequence)                      }
     {32 => (fourierMotzkin, Matrix, Matrix)                     }
     {33 => (fourierMotzkinWrapper, Matrix, Matrix)              }
     {34 => (Hom, Matrix, Matrix)                                }
     {35 => (homology, Matrix, Matrix)                           }
     {36 => (intersection, Matrix, Matrix)                       }
     {37 => (intersection, Matrix, Matrix, Matrix, Matrix)       }
     {38 => (isIsomorphic, Matrix, Matrix)                       }
     {39 => (jacobianDual, Matrix, Matrix, Matrix)               }
     {40 => (makeRaysUniqueAndPrimitive, Matrix, Matrix)         }
     {41 => (markedGB, Matrix, Matrix)                           }
     {42 => (modulo, Matrix, Matrix)                             }
     {43 => (pointInSameDirection, Matrix, Matrix, Matrix)       }
     {44 => (polyhedralComplex, Matrix, Matrix, List)            }
     {45 => (polyhedralComplex, Matrix, Matrix, Matrix, List)    }
     {46 => (polyhedronFromHData, Matrix, Matrix)                }
     {47 => (polyhedronFromHData, Matrix, Matrix, Matrix, Matrix)}
     {48 => (quotient', Matrix, Matrix)                          }
     {49 => (quotient, Matrix, Matrix)                           }
     {50 => (quotientRemainder', Matrix, Matrix)                 }
     {51 => (quotientRemainder, Matrix, Matrix)                  }
     {52 => (randomMinimalDegreeHomomorphism, Matrix, Matrix, ZZ)}
     {53 => (rayCorrespondenceMap, Matrix, Matrix)               }
     {54 => (rayCorrespondenceMap, Matrix, Matrix, Matrix)       }
     {55 => (regularSubdivision, Matrix, Matrix)                 }
     {56 => (remainder', Matrix, Matrix)                         }
     {57 => (remainder, Matrix, Matrix)                          }
     {58 => (scalarProduct, Matrix, Matrix)                      }
     {59 => (solve, Matrix, Matrix)                              }
     {60 => (spanSmoothCone, Matrix, Matrix)                     }
     {61 => (spanSmoothCone, Matrix, Matrix, ZZ)                 }
     {62 => (subquotient, Matrix, Matrix)                        }
     {63 => (subquotient, Module, Matrix, Matrix)                }
     {64 => (substitute, Matrix, Matrix)                         }
     {65 => (tensor, Matrix, Matrix)                             }
     {66 => (truncationPolyhedron, Matrix, Matrix)               }
     {67 => (writeFMInput, File, Matrix, Matrix)                 }

o5 : NumberedVerticalList

i6 : 
