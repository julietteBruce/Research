-- -*- M2-comint -*- hash: -1055082911

i1 : kk=ZZ/101;

i2 : g=1;

i3 : rNP=randNicePencil(kk,g);

i4 : qq=rNP.quadraticForm;

i5 : S=rNP.qqRing;

i6 : P=kk[drop(gens S,-2)]

o6 = P

o6 : PolynomialRing

i7 : qs=sub(diff(matrix{{S_(2*g+2), S_(2*g+3)}}, qq), P)

o7 = | x_0y_0-z_1^2 -5x_0^2+12x_0z_1-18y_0z_1-30z_1^2-12x_0z_2+10y_0z_2+6z_1z
     ------------------------------------------------------------------------
     _2-48z_2^2 |

             1       2
o7 : Matrix P  <--- P

i8 : CI=P/ideal qs

o8 = CI

o8 : QuotientRing

i9 : cM=cliffordModule(rNP.matFact1,rNP.matFact2,rNP.baseRing)

o9 = CliffordModule{...6...}

o9 : CliffordModule

i10 : betti (F=cliffordModuleToCIResolution(cM,S,CI))

              0  1  2 3 4 5
o10 = total: 20 16 12 8 5 5
          0: 20 16 12 8 4 1
          1:  .  .  . . 1 4

o10 : BettiTally

i11 : cMu=cliffordModule(rNP.matFactu1,rNP.matFactu2,rNP.baseRing)

o11 = CliffordModule{...6...}

o11 : CliffordModule

i12 : f=cMu.hyperellipticBranchEquation

           3       2 2        3      4
o12 = - 12s t - 50s t  - 16s*t  + 47t

o12 : kk[s, t]

i13 : L=randomLineBundle(0,f);

i14 : betti (FL=cliffordModuleToCIResolution(tensorProduct(cM,L),S,CI))

              0 1 2 3 4  5
o14 = total: 12 8 4 4 8 12
         -1: 12 8 4 . .  .
          0:  . . . 4 8 12

o14 : BettiTally

i15 : betti (FuL=cliffordModuleToCIResolution(tensorProduct(cMu,L),S,CI))

             0 1 2 3 4 5
o15 = total: 7 5 3 2 3 5
         -1: 7 5 3 1 . .
          0: . . . 1 3 5

o15 : BettiTally

i16 : 
