-- -*- M2-comint -*- hash: -460064283

i1 : kk=ZZ/101

o1 = kk

o1 : QuotientRing

i2 : S=kk[vars(0..5)]

o2 = S

o2 : PolynomialRing

i3 : L=for n from 1 to 100 list res randomSquareFreeMonomialIdeal(10:3,S);

i4 : tally apply(L, F -> length F)

o4 = Tally{3 => 34}
           4 => 66

o4 : Tally

i5 : tally apply(L, F -> regularity F - ((max flatten degrees F_2) - 2))

o5 = Tally{0 => 94}
           1 => 6

o5 : Tally

i6 : L=for n from 1 to 500 list res randomSquareFreeMonomialIdeal(10:3,S);

i7 : scan(L, F -> if 1<(regularity F - (max flatten degrees F_2) + 2) then print F.dd_1)

i8 : 
