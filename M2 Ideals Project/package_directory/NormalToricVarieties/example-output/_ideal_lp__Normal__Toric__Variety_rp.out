-- -*- M2-comint -*- hash: -662435835

i1 : PP4 = toricProjectiveSpace 4;

i2 : B = ideal PP4

o2 = ideal (x , x , x , x , x )
             4   3   2   1   0

o2 : Ideal of QQ[x ..x ]
                  0   4

i3 : assert (isMonomialIdeal B and B == radical B)

i4 : monomialIdeal PP4

o4 = monomialIdeal (x , x , x , x , x )
                     0   1   2   3   4

o4 : MonomialIdeal of QQ[x ..x ]
                          0   4

i5 : assert (B == monomialIdeal PP4)

i6 : C = normalToricVariety ({{1,0,0},{0,1,0},{0,0,1},{1,1,-1}}, {{0,1,2,3}});

i7 : ideal C

o7 = ideal 1

o7 : Ideal of QQ[x ..x ]
                  0   3

i8 : assert (monomialIdeal C == 1)

i9 : monomialIdeal affineSpace 3

o9 = monomialIdeal 1

o9 : MonomialIdeal of QQ[x ..x ]
                          0   2

i10 : assert (ideal affineSpace 3 == 1)

i11 : X = toricProjectiveSpace (2) ** toricProjectiveSpace (3);

i12 : S = ring X;

i13 : B = ideal X

o13 = ideal (x x , x x , x x , x x , x x , x x , x x , x x , x x , x x ,
              2 6   2 5   2 4   2 3   1 6   1 5   1 4   1 3   0 6   0 5 
      -----------------------------------------------------------------------
      x x , x x )
       0 4   0 3

o13 : Ideal of S

i14 : primaryDecomposition B

o14 = {ideal (x , x , x ), ideal (x , x , x , x )}
               2   1   0           6   5   4   3

o14 : List

i15 : dual monomialIdeal B

o15 = monomialIdeal (x x x , x x x x )
                      0 1 2   3 4 5 6

o15 : MonomialIdeal of S

i16 : Y = smoothFanoToricVariety (2,3);

i17 : dual monomialIdeal Y

o17 = monomialIdeal (x x , x x , x x , x x , x x )
                      0 2   0 3   1 3   1 4   2 4

o17 : MonomialIdeal of QQ[x ..x ]
                           0   4

i18 : sort apply (max Y, s -> select (# rays Y, i -> not member (i,s)))

o18 = {{0, 1, 2}, {0, 1, 4}, {0, 3, 4}, {1, 2, 3}, {2, 3, 4}}

o18 : List

i19 : primaryDecomposition dual monomialIdeal Y

o19 = {monomialIdeal (x , x , x ), monomialIdeal (x , x , x ), monomialIdeal
                       0   1   2                   0   1   4                
      -----------------------------------------------------------------------
      (x , x , x ), monomialIdeal (x , x , x ), monomialIdeal (x , x , x )}
        0   3   4                   1   2   3                   2   3   4

o19 : List

i20 : code (monomialIdeal, NormalToricVariety)

o20 = -- code for method: monomialIdeal(NormalToricVariety)
      ../../macaulay2-20230205-25510-hsiem6/M2-release-1.21/M2/Macaulay2/packages/NormalToricVarieties/Sheaves.m2:32:56-33:25: --source code:
      monomialIdeal NormalToricVariety := MonomialIdeal => X ->
          monomialIdeal ideal X

i21 : 
