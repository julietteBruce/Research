-- -*- M2-comint -*- hash: -1872423165

i1 : PP4 = weightedProjectiveSpace {1,1,1,1};

i2 : rays PP4

o2 = {{-1, -1, -1}, {1, 0, 0}, {0, 1, 0}, {0, 0, 1}}

o2 : List

i3 : max PP4

o3 = {{0, 1, 2}, {0, 1, 3}, {0, 2, 3}, {1, 2, 3}}

o3 : List

i4 : dim PP4

o4 = 3

i5 : assert (isWellDefined PP4 and isProjective PP4 and isSmooth PP4)

i6 : X = weightedProjectiveSpace {1,2,3};

i7 : rays X

o7 = {{-2, -3}, {1, 0}, {0, 1}}

o7 : List

i8 : max X

o8 = {{0, 1}, {0, 2}, {1, 2}}

o8 : List

i9 : dim X

o9 = 2

i10 : ring X

o10 = QQ[x ..x ]
          0   2

o10 : PolynomialRing

i11 : assert (isWellDefined X and isProjective X and isSimplicial X and not isSmooth X)

i12 : Y = weightedProjectiveSpace ({1,2,2,3,4}, CoefficientRing => ZZ/32003, Variable => y);

i13 : rays Y

o13 = {{-2, -2, -3, -4}, {1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0,
      -----------------------------------------------------------------------
      1}}

o13 : List

i14 : max Y

o14 = {{0, 1, 2, 3}, {0, 1, 2, 4}, {0, 1, 3, 4}, {0, 2, 3, 4}, {1, 2, 3, 4}}

o14 : List

i15 : dim Y

o15 = 4

i16 : ring Y

        ZZ
o16 = -----[y ..y ]
      32003  0   4

o16 : PolynomialRing

i17 : assert (isWellDefined Y and isProjective Y and isSimplicial Y and not isSmooth Y)

i18 : classGroup PP4

        1
o18 = ZZ

o18 : ZZ-module, free

i19 : degrees ring PP4

o19 = {{1}, {1}, {1}, {1}}

o19 : List

i20 : classGroup X

        1
o20 = ZZ

o20 : ZZ-module, free

i21 : degrees ring X

o21 = {{1}, {2}, {3}}

o21 : List

i22 : classGroup Y

        1
o22 = ZZ

o22 : ZZ-module, free

i23 : degrees ring Y

o23 = {{1}, {2}, {2}, {3}, {4}}

o23 : List

i24 : 
