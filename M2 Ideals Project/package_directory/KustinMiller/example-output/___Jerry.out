-- -*- M2-comint -*- hash: 1072822207

i1 : R = QQ [x_1..x_3, z_1..z_4]

o1 = R

o1 : PolynomialRing

i2 : I = ideal(-z_2*z_3+z_1*x_1,-z_2*z_4+z_1*x_2,-z_3*z_4+z_1*x_3,-z_3*x_2+z_2*x_3,z_4*x_1-z_3*x_2)

o2 = ideal (x z  - z z , x z  - z z , x z  - z z , x z  - x z , - x z  +
             1 1    2 3   2 1    2 4   3 1    3 4   3 2    2 3     2 3  
     ------------------------------------------------------------------------
     x z )
      1 4

o2 : Ideal of R

i3 : cI=res I

      1      5      5      1
o3 = R  <-- R  <-- R  <-- R  <-- 0
                                  
     0      1      2      3      4

o3 : ChainComplex

i4 : betti cI

            0 1 2 3
o4 = total: 1 5 5 1
         0: 1 . . .
         1: . 5 5 .
         2: . . . 1

o4 : BettiTally

i5 : J = ideal (z_1..z_4)

o5 = ideal (z , z , z , z )
             1   2   3   4

o5 : Ideal of R

i6 : cJ=res J

      1      4      6      4      1
o6 = R  <-- R  <-- R  <-- R  <-- R  <-- 0
                                         
     0      1      2      3      4      5

o6 : ChainComplex

i7 : betti cJ

            0 1 2 3 4
o7 = total: 1 4 6 4 1
         0: 1 4 6 4 1

o7 : BettiTally

i8 : cc=kustinMillerComplex(cI,cJ,QQ[T]);

i9 : S=ring cc

o9 = S

o9 : PolynomialRing

i10 : cc

       1      9      16      9      1
o10 = S  <-- S  <-- S   <-- S  <-- S
                                    
      0      1      2       3      4

o10 : ChainComplex

i11 : betti cc

             0 1  2 3 4
o11 = total: 1 9 16 9 1
          0: 1 .  . . .
          1: . 9 16 9 .
          2: . .  . . 1

o11 : BettiTally

i12 : isExactRes cc

o12 = true

i13 : print cc.dd_1
| x_1z_1-z_2z_3 x_2z_1-z_2z_4 x_3z_1-z_3z_4 x_3z_2-x_2z_3 x_2z_3-x_1z_4 Tz_1-x_1z_4 -x_1x_2+Tz_2 -x_1x_3+Tz_3 -x_2x_3+Tz_4 |

i14 : print cc.dd_2
{2} | -x_2 -x_3 0    0    z_4  0    0    0    0    0    0    T    0    0    0    0    |
{2} | x_1  0    -x_3 z_3  -z_3 -x_1 0    0    0    0    0    0    T    0    0    0    |
{2} | 0    x_1  x_2  -z_2 0    0    -x_1 0    -x_2 0    0    0    0    T    0    0    |
{2} | 0    -z_3 -z_4 z_1  0    0    0    -x_1 0    -x_2 0    0    0    0    T    0    |
{2} | -z_2 -z_3 0    0    z_1  0    0    0    -z_4 -x_2 -x_3 x_1  0    0    0    T    |
{2} | 0    0    0    0    0    z_2  z_3  0    z_4  0    0    -x_1 -x_2 -x_3 0    0    |
{2} | 0    0    0    0    0    -z_1 0    z_3  0    z_4  0    z_3  z_4  0    -x_3 0    |
{2} | 0    0    0    0    0    0    -z_1 -z_2 0    0    z_4  0    0    z_4  x_2  -x_2 |
{2} | 0    0    0    0    0    0    0    0    -z_1 -z_2 -z_3 0    0    0    0    x_1  |

i15 : print cc.dd_3
{3} | 0    -z_4 0    x_3  -T   0    0    0    0    |
{3} | 0    0    -z_4 -x_2 0    -T   0    0    0    |
{3} | 0    0    z_3  x_1  0    0    -T   x_1  0    |
{3} | -x_1 -x_2 0    0    0    0    0    -T   0    |
{3} | 0    -x_2 -x_3 0    0    0    0    0    -T   |
{3} | -z_3 -z_4 0    0    0    0    0    -x_3 0    |
{3} | z_2  0    -z_4 0    0    0    0    x_2  -x_2 |
{3} | -z_1 0    0    -z_4 x_2  0    0    -z_4 0    |
{3} | 0    z_2  z_3  0    0    0    0    0    x_1  |
{3} | 0    -z_1 0    z_3  -x_1 0    0    0    0    |
{3} | 0    0    -z_1 -z_2 0    -x_1 0    0    0    |
{3} | 0    0    0    0    -x_2 -x_3 0    0    z_4  |
{3} | 0    0    0    0    x_1  0    -x_3 z_3  -z_3 |
{3} | 0    0    0    0    0    x_1  x_2  -z_2 0    |
{3} | 0    0    0    0    0    -z_3 -z_4 z_1  0    |
{3} | 0    0    0    0    -z_2 -z_3 0    0    z_1  |

i16 : print cc.dd_4
{4} | -x_2x_3+Tz_4   |
{4} | x_1x_3-Tz_3    |
{4} | -x_1x_2+Tz_2   |
{4} | -Tz_1+x_1z_4   |
{4} | -x_3z_1+z_3z_4 |
{4} | x_2z_1-z_2z_4  |
{4} | -x_1z_1+z_2z_3 |
{4} | x_2z_3-x_1z_4  |
{4} | -x_3z_2+x_2z_3 |

i17 : 
