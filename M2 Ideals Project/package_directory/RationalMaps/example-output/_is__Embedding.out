-- -*- M2-comint -*- hash: -145811529

i1 : R = ZZ/7[x,y];

i2 : S = ZZ/7[a,b,c];

i3 : h = map(R, S, {x^2, x*y, y^2});

o3 : RingMap R <--- S

i4 : isEmbedding(h, Verbosity=>1)
isEmbedding: About to find the image of the map.  If you know the image, 
        you may want to use the AssumeDominant option if this is slow.
inverseOfMapSimis: About to check rank, if this is very slow, you may want to try turning QuickRank=>false.
inverseOfMapSimis: rank found, we computed enough of the Groebner basis.

o4 = true

i5 : R=QQ[x,y,z];

i6 : S=QQ[a,b];

i7 : h=rationalMapping(R, S, {y,z});

i8 : isEmbedding(h, Verbosity=>0)

o8 = false

i9 : R=QQ[x,y,z]/(x^2+y^2-z^2);

i10 : S=QQ[a,b];

i11 : h=map(R,S, {y,z});

o11 : RingMap R <--- S

i12 : isRegularMap(h)

o12 = true

i13 : isEmbedding(h, Verbosity=>0)

o13 = false

i14 : R = ZZ/103[x,y,z];

i15 : T = ZZ/103[u,v];

i16 : P2 = Proj R;

i17 : P1 = Proj T;

i18 : phi = rationalMapping(P2, P1, {u^3, u^2*v, v^3});

i19 : isEmbedding(phi, Verbosity=>0)

o19 = false

i20 : P5ring = ZZ/103[a..f];

i21 : M = matrix{{a,b,c},{d,e,f}};

                   2            3
o21 : Matrix P5ring  <--- P5ring

i22 : blowUpSubvar = Proj(P5ring/(minors(2, M)+ideal(b - d)));

i23 : tau = rationalMapping(P2, blowUpSubvar,{a, b, c}); --the blowup

i24 : tauInverse = tau^-1; --the inverse blowup

i25 : isEmbedding(tauInverse*phi, Verbosity => 0)

o25 = true

i26 : 
