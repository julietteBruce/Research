-- -*- M2-comint -*- hash: -9127469

i1 : R = QQ[x,y,z];

i2 : D = divisor({1,2,3}, {ideal(x), ideal(y), ideal(z)})

o2 = Div(x) + 2*Div(y) + 3*Div(z)

o2 : WeilDivisor on R

i3 : E = divisor(x*y^2*z^3)

o3 = Div(x) + 2*Div(y) + 3*Div(z)

o3 : WeilDivisor on R

i4 : F = divisor(ideal(x*y^2*z^3))

o4 = Div(x) + 2*Div(y) + 3*Div(z)

o4 : WeilDivisor on R

i5 : G = divisor({{1, ideal(x)}, {2, ideal(y)}, {3, ideal(z)}})

o5 = Div(x) + 2*Div(y) + 3*Div(z)

o5 : WeilDivisor on R

i6 : H = divisor(x) + 2*divisor(y) + 3*divisor(z)

o6 = Div(x) + 2*Div(y) + 3*Div(z)

o6 : WeilDivisor on R

i7 : R = QQ[x,y,z]/ideal(x^2-y*z);

i8 : D = divisor({2}, {ideal(x,y)})

o8 = 2*Div(x, y)

o8 : WeilDivisor on R

i9 : E = divisor(y)

o9 = 2*Div(y, x)

o9 : WeilDivisor on R

i10 : R = QQ[x,y,z];

i11 : S = QQ[x3,x2y, x2z, xy2, xyz, xz2, y3, y2z, yz2, z3];

i12 : f = map(R, S, {x^3, x^2*y, x^2*z, x*y^2, x*y*z, x*z^2, y^3, y^2*z, y*z^2, z^3});

o12 : RingMap R <--- S

i13 : A = S/(ker f);

i14 : D = divisor(x3)

o14 = 3*Div(xz2, xyz, xy2, x2z, x2y, x3)

o14 : WeilDivisor on A

i15 : E = divisor(y2z)

o15 = 2*Div(yz2, y2z, y3, xyz, xy2, x2y) + Div(z3, yz2, y2z, xz2, xyz, x2z)

o15 : WeilDivisor on A

i16 : R = ZZ/7[x,y];

i17 : D = divisor({-1/2, 2/1}, {ideal(y^2-x^3), ideal(x)}, CoefficientType=>QQ)

o17 = -1/2*Div(-x^3+y^2) + 2*Div(x)

o17 : QWeilDivisor on R

i18 : D = (-1/2)*divisor(y^2-x^3) + (2/1)*divisor(x)

o18 = -1/2*Div(-x^3+y^2) + 2*Div(x)

o18 : QWeilDivisor on R

i19 : R = ZZ/11[x,y,u,v]/ideal(x*y-u*v);

i20 : D = divisor({1.1, -3.14159}, {ideal(x,u), ideal(x, v)}, CoefficientType=>RR)

o20 = 1.1*Div(x, u) + -3.14159*Div(x, v)

o20 : RWeilDivisor on R

i21 : D = 1.1*divisor(ideal(x,u)) - 3.14159*divisor(ideal(x,v))

o21 = 1.1*Div(x, u) + -3.14159*Div(x, v)

o21 : RWeilDivisor on R

i22 : R = QQ[x,y];

i23 : divisor(x)

o23 = Div(x)

o23 : WeilDivisor on R

i24 : divisor(x/y)

o24 = Div(x) + -Div(y)

o24 : WeilDivisor on R

i25 : R = QQ[x,y,z]/ideal(x^2-y*z);

i26 : M = (ideal(y*x,y*z))*R^1;

i27 : divisor(M)

o27 = -Div(z, x)

o27 : WeilDivisor on R

i28 : divisor(M, IsGraded=>true)

o28 = -2*Div(z, x) + -Div(y, x)

o28 : WeilDivisor on R

i29 : R = QQ[x,y,u,v]/ideal(x*y-u*v);

i30 : M = (ideal(x,u))*R^1;

i31 : matr = map(M, R^1, {{1},{0}});

o31 : Matrix

i32 : divisor(matr)

o32 = Div(v, x)

o32 : WeilDivisor on R

i33 : divisor(M, Section=>matr)

o33 = Div(v, x)

o33 : WeilDivisor on R

i34 : R = QQ[x,y,u,v]/ideal(x*y-u*v)

o34 = R

o34 : QuotientRing

i35 : D = divisor(ideal(x,u), Section=>x)

o35 = Div(v, x)

o35 : WeilDivisor on R

i36 : R = QQ[x];

i37 : D = divisor(R^1, Section=>matrix{{x^2}})

o37 = 2*Div(x)

o37 : WeilDivisor on R

i38 : 
