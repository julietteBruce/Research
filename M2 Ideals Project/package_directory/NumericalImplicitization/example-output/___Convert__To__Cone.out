-- -*- M2-comint -*- hash: -1181263817

i1 : R = CC[t]

o1 = R

o1 : PolynomialRing

i2 : F = {t, t^4, t^6}

          4   6
o2 = {t, t , t }

o2 : List

i3 : I = ideal 0_R

o3 = ideal 0

o3 : Ideal of R

i4 : (numericalHilbertFunction(F, I, 3, Verbose => false)).hilbertFunctionValue == 0
-- warning: experimental computation over inexact field begun
--          results not reliable (one warning given per session)

o4 = true

i5 : T = numericalHilbertFunction(F, I, 3, ConvertToCone => true)
Sampling image points ...
     -- used .0117259 seconds
Creating interpolation matrix ...
     -- used .0105323 seconds
Performing normalization preconditioning ...
     -- used .00453864 seconds
Computing numerical kernel ...
     -- used .000505331 seconds

o5 = a "numerical interpolation table", indicating
     the space of degree 3 forms in the ideal of the image has dimension 3

o5 : NumericalInterpolationTable

i6 : extractImageEquations(T, AttemptZZ => true)

o6 = | -y_0^2y_2+y_1^2y_3 -y_1^3+y_2^2y_3 -y_0^2y_1+y_2y_3^2 |

                          1                    3
o6 : Matrix (CC  [y ..y ])  <--- (CC  [y ..y ])
               53  0   3            53  0   3

i7 : 
