-- -*- M2-comint -*- hash: -666111196

i1 : R=QQ[x_{}, x_{0,1}, x_{0,2}, x_{1,2}, x_{0,3}, x_{1,3}, x_{2,3}, x_{0,4}, x_{1,4}, x_{2,4}, x_{3,4}, x_{0,1,2,3}, x_{0,1,2,4}, x_{0,1,3,4}, x_{0,2,3,4}, x_{1,2,3,4}]

o1 = R

o1 : PolynomialRing

i2 : I=ideal(x_{}*x_{0,1,2,3}-x_{0,1}*x_{2,3}+x_{0,2}*x_{1,3}-x_{0,3}*x_{1,2},
         x_{}*x_{0,1,2,4}-x_{0,1}*x_{2,4}+x_{0,2}*x_{1,4}-x_{0,4}*x_{1,2},
         x_{}*x_{0,1,3,4}-x_{0,1}*x_{3,4}+x_{0,3}*x_{1,4}-x_{0,4}*x_{1,3},
         x_{}*x_{0,2,3,4}-x_{0,2}*x_{3,4}+x_{0,3}*x_{2,4}-x_{0,4}*x_{2,3},
         x_{}*x_{1,2,3,4}-x_{1,2}*x_{3,4}+x_{1,3}*x_{2,4}-x_{1,4}*x_{2,3},
         x_{0,1}*x_{0,2,3,4}-x_{0,2}*x_{0,1,3,4}+x_{0,3}*x_{0,1,2,4}-x_{0,4}*x_{0,1,2,3},
         -x_{0,1}*x_{1,2,3,4}+x_{1,2}*x_{0,1,3,4}-x_{1,3}*x_{0,1,2,4}+x_{1,4}*x_{0,1,2,3},
         x_{0,2}*x_{1,2,3,4}-x_{1,2}*x_{0,2,3,4}+x_{2,3}*x_{0,1,2,4}-x_{2,4}*x_{0,1,2,3},
         -x_{0,3}*x_{1,2,3,4}+x_{1,3}*x_{0,2,3,4}-x_{2,3}*x_{0,1,3,4}+x_{3,4}*x_{0,1,2,3},
         x_{0,4}*x_{1,2,3,4}-x_{1,4}*x_{0,2,3,4}+x_{2,4}*x_{0,1,3,4}-x_{3,4}*x_{0,1,2,4});

o2 : Ideal of R

i3 : RI=res I; betti RI

            0  1  2  3  4 5
o4 = total: 1 10 16 16 10 1
         0: 1  .  .  .  . .
         1: . 10 16  .  . .
         2: .  .  . 16 10 .
         3: .  .  .  .  . 1

o4 : BettiTally

i5 : ind = apply(gens R,g->(baseName g)#1)

o5 = {{}, {0, 1}, {0, 2}, {1, 2}, {0, 3}, {1, 3}, {2, 3}, {0, 4}, {1, 4}, {2,
     ------------------------------------------------------------------------
     4}, {3, 4}, {0, 1, 2, 3}, {0, 1, 2, 4}, {0, 1, 3, 4}, {0, 2, 3, 4}, {1,
     ------------------------------------------------------------------------
     2, 3, 4}}

o5 : List

i6 : makeWeight = J -> apply(5,i->if member(i,J) then 1/2 else -1/2)

o6 = makeWeight

o6 : FunctionClosure

i7 : W'=apply(ind,makeWeight)

         1    1    1    1    1    1  1    1    1    1    1    1  1    1   
o7 = {{- -, - -, - -, - -, - -}, {-, -, - -, - -, - -}, {-, - -, -, - -, -
         2    2    2    2    2    2  2    2    2    2    2    2  2    2   
     ------------------------------------------------------------------------
     1      1  1  1    1    1    1    1    1  1    1      1  1    1  1    1  
     -}, {- -, -, -, - -, - -}, {-, - -, - -, -, - -}, {- -, -, - -, -, - -},
     2      2  2  2    2    2    2    2    2  2    2      2  2    2  2    2  
     ------------------------------------------------------------------------
        1    1  1  1    1    1    1    1    1  1      1  1    1    1  1     
     {- -, - -, -, -, - -}, {-, - -, - -, - -, -}, {- -, -, - -, - -, -}, {-
        2    2  2  2    2    2    2    2    2  2      2  2    2    2  2     
     ------------------------------------------------------------------------
     1    1  1    1  1      1    1    1  1  1    1  1  1  1    1    1  1  1 
     -, - -, -, - -, -}, {- -, - -, - -, -, -}, {-, -, -, -, - -}, {-, -, -,
     2    2  2    2  2      2    2    2  2  2    2  2  2  2    2    2  2  2 
     ------------------------------------------------------------------------
       1  1    1  1    1  1  1    1    1  1  1  1      1  1  1  1  1
     - -, -}, {-, -, - -, -, -}, {-, - -, -, -, -}, {- -, -, -, -, -}}
       2  2    2  2    2  2  2    2    2  2  2  2      2  2  2  2  2

o7 : List

i8 : M=inverse promote(matrix{{1,0,0,0,0},{-1,1,0,0,0},{0,-1,1,0,0},{0,0,-1,1,1},{0,0,0,-1,1}},QQ)

o8 = | 1   0   0   0   0    |
     | 1   1   0   0   0    |
     | 1   1   1   0   0    |
     | 1/2 1/2 1/2 1/2 -1/2 |
     | 1/2 1/2 1/2 1/2 1/2  |

              5        5
o8 : Matrix QQ  <--- QQ

i9 : D=dynkinType{{"D",5}}

o9 = DynkinType{{D, 5}}

o9 : DynkinType

i10 : N=transpose promote(cartanMatrix(rootSystem(D)),QQ)

o10 = | 2  -1 0  0  0  |
      | -1 2  -1 0  0  |
      | 0  -1 2  -1 -1 |
      | 0  0  -1 2  0  |
      | 0  0  -1 0  2  |

               5        5
o10 : Matrix QQ  <--- QQ

i11 : W=entries transpose lift(N*M*(transpose matrix W'),ZZ)

o11 = {{0, 0, 0, 0, -1}, {0, 1, 0, 0, -1}, {1, -1, 1, 0, -1}, {-1, 0, 1, 0,
      -----------------------------------------------------------------------
      -1}, {1, 0, -1, 1, 0}, {-1, 1, -1, 1, 0}, {0, -1, 0, 1, 0}, {1, 0, 0,
      -----------------------------------------------------------------------
      -1, 0}, {-1, 1, 0, -1, 0}, {0, -1, 1, -1, 0}, {0, 0, -1, 0, 1}, {0, 0,
      -----------------------------------------------------------------------
      0, 1, 0}, {0, 0, 1, -1, 0}, {0, 1, -1, 0, 1}, {1, -1, 0, 0, 1}, {-1, 0,
      -----------------------------------------------------------------------
      0, 0, 1}}

o11 : List

i12 : setWeights(R,D,W)

o12 = Tally{{0, 0, 0, 1, 0} => 1}

o12 : Tally

i13 : highestWeightsDecomposition(RI)

o13 = HashTable{0 => HashTable{{0} => Tally{{0, 0, 0, 0, 0} => 1}}}
                1 => HashTable{{2} => Tally{{1, 0, 0, 0, 0} => 1}}
                2 => HashTable{{3} => Tally{{0, 0, 0, 0, 1} => 1}}
                3 => HashTable{{5} => Tally{{0, 0, 0, 1, 0} => 1}}
                4 => HashTable{{6} => Tally{{1, 0, 0, 0, 0} => 1}}
                5 => HashTable{{8} => Tally{{0, 0, 0, 0, 0} => 1}}

o13 : HashTable

i14 : highestWeightsDecomposition(R/I,0,4)

o14 = HashTable{0 => Tally{{0, 0, 0, 0, 0} => 1}}
                1 => Tally{{0, 0, 0, 1, 0} => 1}
                2 => Tally{{0, 0, 0, 2, 0} => 1}
                3 => Tally{{0, 0, 0, 3, 0} => 1}
                4 => Tally{{0, 0, 0, 4, 0} => 1}

o14 : HashTable

i15 : 
