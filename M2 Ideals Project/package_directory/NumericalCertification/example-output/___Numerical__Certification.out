-- -*- M2-comint -*- hash: 512543643

i1 : R = CC[x1,x2,y1,y2];

i2 : f = polySystem {3*y1 + 2*y2 -1, 3*x1 + 2*x2 -3.5, x1^2 + y1^2 -1, x2^2 + y2^2 -1};

i3 : sols = solveSystem f

o3 = {{.652548, .771177, .757747, -.63662}, {.95437, .318445, -.298627,
     ------------------------------------------------------------------------
     .947941}}

o3 : List

i4 : c = certifySolutions(f, sols, Strategy => "alphaTheory");

i5 : peek c

o5 = MutableHashTable{alphaValues => {2.07811e-30, 1.97423e-40}                                                        }
                      certifiedDistinct => {{.652548, .771177, .757747, -.63662}, {.95437, .318445, -.298627, .947941}}
                      certifiedReal => {{.652548, .771177, .757747, -.63662}, {.95437, .318445, -.298627, .947941}}
                      certifiedRegular => {{.652548, .771177, .757747, -.63662}, {.95437, .318445, -.298627, .947941}}
                      certifiedSingular => {}
                      nonCertified => {}

i6 : R = RR[x1,x2,y1,y2];

i7 : f = polySystem {3*y1 + 2*y2 -1, 3*x1 + 2*x2 -3.5, x1^2 + y1^2 -1, x2^2 + y2^2 -1};

i8 : p1 = point{{.95, .32, -.30, .95}};

i9 : p2 = point{{.9, .3, -.3, 1}}; -- poorly approximated solution

i10 : certifyRegularSolution(f,p1)

o10 = true

i11 : certifyRegularSolution(f,p2) -- not an approximate solution

o11 = false

i12 : p1 = point{{.95,.32,-.30,.95}};

i13 : p2 = point{{.65,.77,.76,-.64}};

i14 : certifyDistinctSolutions(f,p1,p2)

o14 = true

i15 : p = point{{.954379, .318431, -.298633, .947949}};

i16 : certifyRealSolution(f,p)

o16 = true

i17 : R = QQ[x1,x2,y1,y2]

o17 = R

o17 : PolynomialRing

i18 : f = polySystem {3*y1 + 2*y2 -1, 3*x1 + 2*x2 -7/2, x1^2 + y1^2 -1, x2^2 + y2^2 -1};

i19 : p = point{{95/100,32/100,-30/100,95/100}}; -- an input over the rational numbers

i20 : computeConstants(f,p)

        21324026093882418049     17681521    120600632116900
o20 = (----------------------, ------------, ---------------)
       3432333340166716036800  638081440000    537914617947

o20 : Sequence

i21 : certifyRegularSolution(f,p)

o21 = true

i22 : R = RR[x1,x2,y1,y2];

i23 : f = polySystem {3*y1 + 2*y2 -1, 3*x1 + 2*x2 -3.5, x1^2 + y1^2 -1, x2^2 + y2^2 -1};

i24 : (I1, I2, I3, I4) = (interval(.94,.96), interval(.31,.33), interval(-.31,-.29), interval(.94,.96));

i25 : krawczykOperator(f,matrix{{I1,I2,I3,I4}})

o25 = | [.954149,.954609] [.318086,.318777] [-.298824,-.298442]
      -----------------------------------------------------------------------
      [.947663,.948236] |

                  1           4
o25 : Matrix RRi    <--- RRi
                53          53

i26 : krawczykTest(f,matrix{{I1,I2,I3,I4}})

o26 = true

i27 : R = RR[x1,x2,y1,y2];

i28 : f = polySystem {3*y1 + 2*y2 -1, 3*x1 + 2*x2 -3.5, x1^2 + y1^2 -1, x2^2 + y2^2 -1};

i29 : p = point{{.954379, .318431, -.298633, .947949}};

i30 : I = pointToInterval(f,p)

o30 = |  [.878643,1.03011] + [0,0]*ii [.200731,.436131] + [0,0]*ii
      -----------------------------------------------------------------------
      [-.343878,-.253388] + [0,0]*ii [.884177,1.01172] + [0,0]*ii |

o30 : CCiMatrix

i31 : krawczykTest(f,I)

o31 = true

i32 : 
      R = CC[x,y,z];

i33 : f = polySystem {x^2+y+z-1,x+y^2+z-1,x+y+z^2-1};

i34 : p = point{{1e-7-1e-7*ii,1e-7+1e-7*ii,1+1e-7}};

i35 : certifySingularSolution(f,p)

o35 = true

i36 : 
      
