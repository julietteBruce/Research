-- -*- M2-comint -*- hash: 1000277757

i1 : S = ZZ[a..e];

i2 : Δ = simplicialComplex {b*c*d*e, a*c*d*e, a*b*d*e, a*b*c*e, a*b*c*d}

o2 = simplicialComplex | bcde acde abde abce abcd |

o2 : SimplicialComplex

i3 : monomialIdeal Δ

o3 = monomialIdeal(a*b*c*d*e)

o3 : MonomialIdeal of S

i4 : dim Δ

o4 = 3

i5 : assert (dim Δ === 3 and numgens ideal Δ === 1 and isPure Δ)

i6 : R = ZZ/101[a..f];

i7 : Γ = simplicialComplex {b*c*d*e, a*c*d*e, a*b*d*e, a*b*c*e, a*b*c*d}

o7 = simplicialComplex | bcde acde abde abce abcd |

o7 : SimplicialComplex

i8 : monomialIdeal Γ

o8 = monomialIdeal (a*b*c*d*e, f)

o8 : MonomialIdeal of R

i9 : dim Γ

o9 = 3

i10 : assert (dim Γ === 3 and numgens ideal Γ === 2 and isPure Γ)

i11 : S' = QQ[a..e];

i12 : Δ' = simplicialComplex {e, c*d, b*d, a*b*c}

o12 = simplicialComplex | e cd bd abc |

o12 : SimplicialComplex

i13 : monomialIdeal Δ'

o13 = monomialIdeal (a*d, b*c*d, a*e, b*e, c*e, d*e)

o13 : MonomialIdeal of S'

i14 : dim Δ'

o14 = 2

i15 : assert (dim Δ' === 2 and not isPure Δ')

i16 : irrelevant = simplicialComplex {1_S'};

i17 : dim irrelevant

o17 = -1

i18 : void = simplicialComplex monomialIdeal 1_S

o18 = simplicialComplex 0

o18 : SimplicialComplex

i19 : dim void

o19 = -infinity

o19 : InfiniteNumber

i20 : assert (dim irrelevant === -1 and dim void === -infinity)

i21 : peek Δ.cache

o21 = CacheTable{dim => 3}

i22 : 
