-- -*- M2-comint -*- hash: 788457089

i1 : S = ZZ[a..e];

i2 : Δ = simplicialComplex {b*c*d*e, a*c*d*e, a*b*d*e, a*b*c*e, a*b*c*d}

o2 = simplicialComplex | bcde acde abde abce abcd |

o2 : SimplicialComplex

i3 : ring Δ

o3 = S

o3 : PolynomialRing

i4 : monomialIdeal Δ

o4 = monomialIdeal(a*b*c*d*e)

o4 : MonomialIdeal of S

i5 : coefficientRing Δ

o5 = ZZ

o5 : Ring

i6 : assert (ring Δ === S and coefficientRing Δ === ZZ and
         numgens ideal Δ === 1 )

i7 : R = QQ[a..e];

i8 : Γ = simplicialComplex {b*c*d*e, a*c*d*e, a*b*d*e, a*b*c*e, a*b*c*d}

o8 = simplicialComplex | bcde acde abde abce abcd |

o8 : SimplicialComplex

i9 : ring Γ

o9 = R

o9 : PolynomialRing

i10 : monomialIdeal Γ

o10 = monomialIdeal(a*b*c*d*e)

o10 : MonomialIdeal of R

i11 : coefficientRing Γ

o11 = QQ

o11 : Ring

i12 : assert (ring Γ === R and coefficientRing Γ === QQ and
          numgens ideal Γ === 1)

i13 : S' = ZZ/101[a..f];

i14 : Δ' = simplicialComplex {b*c*d*e, a*c*d*e, a*b*d*e, a*b*c*e, a*b*c*d}

o14 = simplicialComplex | bcde acde abde abce abcd |

o14 : SimplicialComplex

i15 : ring Δ'

o15 = S'

o15 : PolynomialRing

i16 : monomialIdeal Δ'

o16 = monomialIdeal (a*b*c*d*e, f)

o16 : MonomialIdeal of S'

i17 : coefficientRing Δ'

       ZZ
o17 = ---
      101

o17 : QuotientRing

i18 : assert (ring Δ' === S' and coefficientRing Δ' === ZZ/101 and
          numgens ideal Δ' === 2)

i19 : C = chainComplex Δ

        1       5       10       10       5
o19 = ZZ  <-- ZZ  <-- ZZ   <-- ZZ   <-- ZZ
                                         
      -1      0       1        2        3

o19 : ChainComplex

i20 : D = chainComplex Γ

        1       5       10       10       5
o20 = QQ  <-- QQ  <-- QQ   <-- QQ   <-- QQ
                                         
      -1      0       1        2        3

o20 : ChainComplex

i21 : C' = chainComplex Δ'

        ZZ 1       ZZ 5       ZZ 10       ZZ 10       ZZ 5
o21 = (---)  <-- (---)  <-- (---)   <-- (---)   <-- (---)
       101        101        101         101         101
                                                     
      -1         0          1           2           3

o21 : ChainComplex

i22 : assert (D == C ** QQ and C' == C ** (ZZ/101))

i23 : 
