-- -*- M2-comint -*- hash: -618128131

i1 : S = ZZ[a..e];

i2 : Δ = simplicialComplex {b*c*d*e, a*c*d*e, a*b*d*e, a*b*c*e, a*b*c*d}

o2 = simplicialComplex | bcde acde abde abce abcd |

o2 : SimplicialComplex

i3 : I = monomialIdeal Δ

o3 = monomialIdeal(a*b*c*d*e)

o3 : MonomialIdeal of S

i4 : dim Δ

o4 = 3

i5 : assert (I == monomialIdeal a*b*c*d*e and numgens I === 1 and
         instance(I, MonomialIdeal) and dim Δ === 3)

i6 : Γ = simplicialComplex {e, c*d, b*d, a*b*c}

o6 = simplicialComplex | e cd bd abc |

o6 : SimplicialComplex

i7 : J = monomialIdeal Γ

o7 = monomialIdeal (a*d, b*c*d, a*e, b*e, c*e, d*e)

o7 : MonomialIdeal of S

i8 : assert (J == monomialIdeal (a*d, b*c*d, a*e, b*e, c*e, d*e) and
         dim Γ === 2 and instance(J, MonomialIdeal))

i9 : irrelevant = simplicialComplex {1_S};

i10 : M = monomialIdeal irrelevant

o10 = monomialIdeal (a, b, c, d, e)

o10 : MonomialIdeal of S

i11 : void = simplicialComplex monomialIdeal 1_S

o11 = simplicialComplex 0

o11 : SimplicialComplex

i12 : assert (M == monomialIdeal gens S and instance(M, MonomialIdeal))

i13 : U = monomialIdeal void

o13 = monomialIdeal 1

o13 : MonomialIdeal of S

i14 : assert (U == monomialIdeal 1_S and instance (U, MonomialIdeal))

i15 : printWidth = 250;

i16 : code (ideal, SimplicialComplex)

o16 = -- code for method: ideal(SimplicialComplex)
      ../../macaulay2-20230205-25510-hsiem6/M2-release-1.21/M2/Macaulay2/packages/SimplicialComplexes/Code.m2:19:39-19:50: --source code:
      ideal SimplicialComplex := Ideal => D -> ideal D.monomialIdeal

i17 : code (monomialIdeal, SimplicialComplex)

o17 = -- code for method: monomialIdeal(SimplicialComplex)
      ../../macaulay2-20230205-25510-hsiem6/M2-release-1.21/M2/Macaulay2/packages/SimplicialComplexes/Code.m2:20:55-20:60: --source code:
      monomialIdeal SimplicialComplex := MonomialIdeal => D -> D.monomialIdeal

i18 : peek Δ

o18 = SimplicialComplex{cache => CacheTable{...1...}                           }
                        facets => {b*c*d*e, a*c*d*e, a*b*d*e, a*b*c*e, a*b*c*d}
                        monomialIdeal => monomialIdeal(a*b*c*d*e)
                        ring => S

i19 : 
