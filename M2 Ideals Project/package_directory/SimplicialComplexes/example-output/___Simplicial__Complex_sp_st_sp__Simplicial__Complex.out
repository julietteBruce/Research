-- -*- M2-comint -*- hash: -2049080273

i1 : S = QQ[a..e];

i2 : Δ = simplicialComplex {a*b*c, c*d*e}

o2 = simplicialComplex | cde abc |

o2 : SimplicialComplex

i3 : R = QQ[f];

i4 : Γ = simplicialComplex {f};

i5 : Δ' = Δ * Γ

o5 = simplicialComplex | cdef abcf |

o5 : SimplicialComplex

i6 : assert (dim Δ' === dim Δ + 1)

i7 : S = QQ[a..d];

i8 : Δ = simplicialComplex {a*b, b*c, c*d, a*d}

o8 = simplicialComplex | cd ad bc ab |

o8 : SimplicialComplex

i9 : R = QQ[e,f];

i10 : Γ = simplicialComplex {e, f}

o10 = simplicialComplex | f e |

o10 : SimplicialComplex

i11 : Δ' = Δ * Γ

o11 = simplicialComplex | cdf cde adf ade bcf bce abf abe |

o11 : SimplicialComplex

i12 : assert (dim Δ' === dim Δ + 1)

i13 : assert (apply(2+dim Δ', i -> #faces(i-1,Δ')) == {1,6,12,8})

i14 : S = ZZ[a..f];

i15 : Δ = simplicialComplex {a*b, b*c, c*d, d*e, e*f, a*f}

o15 = simplicialComplex | ef af de cd bc ab |

o15 : SimplicialComplex

i16 : R = ZZ[g..k];

i17 : Γ = simplicialComplex {g*h, h*i, i*j, j*k, g*k}

o17 = simplicialComplex | jk gk ij hi gh |

o17 : SimplicialComplex

i18 : Δ' = Δ * Γ

o18 = simplicialComplex | efjk efgk efij efhi efgh afjk afgk afij afhi afgh dejk degk deij dehi degh cdjk cdgk cdij cdhi cdgh bcjk bcgk bcij bchi bcgh abjk abgk abij abhi abgh |

o18 : SimplicialComplex

i19 : prune HH Δ'

o19 = -1 : 0  

       0 : 0  

       1 : 0  

       2 : 0  

             1
       3 : ZZ

o19 : GradedModule

i20 : assert (dim Δ' === 3)

i21 : 
