-- -*- M2-comint -*- hash: 68991998

i1 : S = ZZ[x_0..x_5];

i2 : Δ = simplicialComplex monomialIdeal(x_0*x_5, x_1*x_4, x_2*x_3)

o2 = simplicialComplex | x_3x_4x_5 x_2x_4x_5 x_1x_3x_5 x_1x_2x_5 x_0x_3x_4 x_0x_2x_4 x_0x_1x_3 x_0x_1x_2 |

o2 : SimplicialComplex

i3 : id_Δ

o3 = | x_0 x_1 x_2 x_3 x_4 x_5 |

o3 : SimplicialMap simplicialComplex | x_3x_4x_5 x_2x_4x_5 x_1x_3x_5 x_1x_2x_5 x_0x_3x_4 x_0x_2x_4 x_0x_1x_3 x_0x_1x_2 | <--- simplicialComplex | x_3x_4x_5 x_2x_4x_5 x_1x_3x_5 x_1x_2x_5 x_0x_3x_4 x_0x_2x_4 x_0x_1x_3 x_0x_1x_2 |

i4 : matrix id_Δ

o4 = | x_0 x_1 x_2 x_3 x_4 x_5 |

             1       6
o4 : Matrix S  <--- S

i5 : assert(matrix id_Δ === vars S)

i6 : R = ZZ[y_0..y_3];

i7 : Γ = simplicialComplex monomialIdeal(y_1*y_2)

o7 = simplicialComplex | y_0y_2y_3 y_0y_1y_3 |

o7 : SimplicialComplex

i8 : f = map(Γ, Δ, {y_0,y_0,y_1,y_2,y_3,y_3})

o8 = | y_0 y_0 y_1 y_2 y_3 y_3 |

o8 : SimplicialMap simplicialComplex | y_0y_2y_3 y_0y_1y_3 | <--- simplicialComplex | x_3x_4x_5 x_2x_4x_5 x_1x_3x_5 x_1x_2x_5 x_0x_3x_4 x_0x_2x_4 x_0x_1x_3 x_0x_1x_2 |

i9 : matrix f

o9 = | y_0 y_0 y_1 y_2 y_3 y_3 |

             1       6
o9 : Matrix R  <--- R

i10 : code(matrix, SimplicialMap)

o10 = -- code for method: matrix(SimplicialMap)
      ../../macaulay2-20230205-25510-hsiem6/M2-release-1.21/M2/Macaulay2/
      matrix SimplicialMap := Matrix => opts -> f -> matrix map f
      -----------------------------------------------------------------------
      packages/SimplicialComplexes/Code.m2:904:40-904:59: --source code:

i11 : 
