-- -*- M2-comint -*- hash: -398004196

i1 : S = ZZ[x_0..x_5];

i2 : Δ = simplicialComplex monomialIdeal(x_0*x_5, x_1*x_4, x_2*x_3)

o2 = simplicialComplex | x_3x_4x_5 x_2x_4x_5 x_1x_3x_5 x_1x_2x_5 x_0x_3x_4 x_0x_2x_4 x_0x_1x_3 x_0x_1x_2 |

o2 : SimplicialComplex

i3 : id_Δ

o3 = | x_0 x_1 x_2 x_3 x_4 x_5 |

o3 : SimplicialMap simplicialComplex | x_3x_4x_5 x_2x_4x_5 x_1x_3x_5 x_1x_2x_5 x_0x_3x_4 x_0x_2x_4 x_0x_1x_3 x_0x_1x_2 | <--- simplicialComplex | x_3x_4x_5 x_2x_4x_5 x_1x_3x_5 x_1x_2x_5 x_0x_3x_4 x_0x_2x_4 x_0x_1x_3 x_0x_1x_2 |

i4 : source id_Δ

o4 = simplicialComplex | x_3x_4x_5 x_2x_4x_5 x_1x_3x_5 x_1x_2x_5 x_0x_3x_4 x_0x_2x_4 x_0x_1x_3 x_0x_1x_2 |

o4 : SimplicialComplex

i5 : assert(source id_Δ === Δ)

i6 : assert(source id_Δ === target id_Δ)

i7 : R = ZZ[y_0..y_3];

i8 : Γ = simplicialComplex monomialIdeal(y_1*y_2)

o8 = simplicialComplex | y_0y_2y_3 y_0y_1y_3 |

o8 : SimplicialComplex

i9 : f = map(Γ, Δ, {y_0,y_0,y_1,y_2,y_3,y_3})

o9 = | y_0 y_0 y_1 y_2 y_3 y_3 |

o9 : SimplicialMap simplicialComplex | y_0y_2y_3 y_0y_1y_3 | <--- simplicialComplex | x_3x_4x_5 x_2x_4x_5 x_1x_3x_5 x_1x_2x_5 x_0x_3x_4 x_0x_2x_4 x_0x_1x_3 x_0x_1x_2 |

i10 : assert isWellDefined f

i11 : source f

o11 = simplicialComplex | x_3x_4x_5 x_2x_4x_5 x_1x_3x_5 x_1x_2x_5 x_0x_3x_4 x_0x_2x_4 x_0x_1x_3 x_0x_1x_2 |

o11 : SimplicialComplex

i12 : assert(source f === Δ)

i13 : peek f

o13 = SimplicialMap{cache => CacheTable{}                                                                                          }
                    map => map (R, S, {y , y , y , y , y , y })
                                        0   0   1   2   3   3
                    source => simplicialComplex | x_3x_4x_5 x_2x_4x_5 x_1x_3x_5 x_1x_2x_5 x_0x_3x_4 x_0x_2x_4 x_0x_1x_3 x_0x_1x_2 |
                    target => simplicialComplex | y_0y_2y_3 y_0y_1y_3 |

i14 : 
